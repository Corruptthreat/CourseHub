"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _utils = require("../../utils");

var _HeaderEffect = _interopRequireDefault(require("../../effects/Header/HeaderEffect"));

var _Width = _interopRequireDefault(require("../Width"));

var _Margin = _interopRequireDefault(require("../Margin"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

var shouldClipped = function shouldClipped(config, objectId) {
  return typeof config.clipped === 'boolean' && config.clipped || _typeof(config.clipped) === 'object' && (0, _utils.get)(config, ['clipped', objectId], (0, _utils.get)(config, 'clipped._other'));
};

var _default = function _default(config, sidebarEffects) {
  var headerEffect = (0, _HeaderEffect["default"])(config);
  var marginInterfaces = [];
  var widthInterfaces = [];
  sidebarEffects.forEach(function (_ref) {
    var sidebarId = _ref.id,
        getObjectWidth = _ref.getObjectWidth,
        getObjectMargin = _ref.getObjectMargin;
    widthInterfaces.push(shouldClipped(config, sidebarId) ? (0, _Width["default"])(0) : getObjectWidth(config.id));
    marginInterfaces.push(shouldClipped(config, sidebarId) ? (0, _Margin["default"])({
      marginLeft: 0,
      marginRight: 0
    }) : getObjectMargin(config.id));
  });
  var marginStyle = marginInterfaces.length > 0 ? marginInterfaces.reduce(function (result, current) {
    return result.combine(current);
  }).getStyle() : undefined;
  var widthStyle = widthInterfaces.length > 0 ? widthInterfaces.reduce(function (result, current) {
    return result.combine(current);
  }).getStyle() : undefined;
  return {
    getStyle: function getStyle() {
      return _extends(_extends(_extends({
        position: config.position
      }, marginStyle), widthStyle), headerEffect.getHeaderZIndex());
    }
  };
};

exports["default"] = _default;