import { pickNearestBreakpoint } from "../utils";
import { isAbsoluteInsetSidebarConfig, isFixedInsetSidebarConfig, isStickyInsetSidebarConfig } from "../utils/sidebarChecker";
import StickyInset from "../models/Sidebar/Inset/StickyInset";
import AbsoluteInset from "../models/Sidebar/Inset/AbsoluteInset";
import FixedInset from "../models/Sidebar/Inset/FixedInset";
export default (function (insetSidebar, header) {
  return {
    getVariant: function getVariant(sidebarId) {
      var config = pickNearestBreakpoint(insetSidebar.configMapById[sidebarId], "xl");
      return config.variant;
    },
    getResultStyle: function getResultStyle(sidebarId) {
      var result = {
        root: {},
        body: {}
      };
      var configMap = insetSidebar.configMapById[sidebarId];
      var breakpoints = Object.keys(configMap);
      breakpoints.forEach(function (bp) {
        var config = pickNearestBreakpoint(configMap, bp);
        var headerConfig = pickNearestBreakpoint(header, bp);

        if (config) {
          var model;

          if (isStickyInsetSidebarConfig(config)) {
            model = StickyInset(config);
          } else if (isAbsoluteInsetSidebarConfig(config)) {
            model = AbsoluteInset(config, headerConfig);
          } else if (isFixedInsetSidebarConfig(config)) {
            model = FixedInset(config);
          }

          result.root[bp] = model.getRootStyle();
          result.body[bp] = model.getBodyStyle();
        }
      });
      return result;
    }
  };
});