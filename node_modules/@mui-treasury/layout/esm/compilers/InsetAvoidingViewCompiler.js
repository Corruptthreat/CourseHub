function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

import { isAbsoluteInsetSidebarConfig, isFixedInsetSidebarConfig } from "../utils/sidebarChecker";
import { createFixedInsetSidebarEffect } from "../effects/FixedInsetSidebar";
import { createAbsoluteInsetSidebarEffect } from "../effects/AbsoluteInsetSidebar";
export default (function (insetSidebar) {
  var iterateBreakpoints = function iterateBreakpoints(breakpoints, result, configMap) {
    var lastConfig = undefined;
    breakpoints.keys.forEach(function (bp) {
      var config = configMap[bp];

      if (config) {
        lastConfig = config;
      }

      if (lastConfig && isFixedInsetSidebarConfig(lastConfig)) {
        result[breakpoints.only(bp)] = _extends(_extends({}, result[breakpoints.only(bp)]), createFixedInsetSidebarEffect(lastConfig).getAvoidingStyle());
      }

      if (lastConfig && isAbsoluteInsetSidebarConfig(lastConfig)) {
        result[breakpoints.only(bp)] = _extends(_extends({}, result[breakpoints.only(bp)]), createAbsoluteInsetSidebarEffect(lastConfig).getAvoidingStyle());
      }
    });
  };

  return {
    getMediaQueryStyle: function getMediaQueryStyle(breakpoints) {
      var sidebarIds = Object.keys(insetSidebar.configMapById);
      var styles = {};
      sidebarIds.forEach(function (id) {
        var configMap = insetSidebar.configMapById[id];
        iterateBreakpoints(breakpoints, styles, configMap);
      });
      return styles;
    }
  };
});