function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

import EdgeSidebarEffects from '../effects/EdgeSidebars';
import createListEffect from '../effects/SidebarList/SidebarListEffect';
import { sortBreakpoints } from '../utils/createHiddenStyles';
export default (function (state, edgeSidebar) {
  return {
    getResultStyle: function getResultStyle(id) {
      var result = {};
      var breakpoints = sortBreakpoints(Object.keys(edgeSidebar.configMap));
      EdgeSidebarEffects(state, edgeSidebar).iterateBreakpointEffects(breakpoints, function (bp, effects) {
        var _createListEffect = createListEffect(effects, id),
            marginStyle = _createListEffect.marginStyle,
            widthStyle = _createListEffect.widthStyle;

        result[bp] = _extends(_extends({}, widthStyle), marginStyle);
      });
      return result;
    }
  };
});