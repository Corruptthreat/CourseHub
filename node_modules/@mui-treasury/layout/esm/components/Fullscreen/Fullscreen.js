function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _templateObject() {
  var data = _taggedTemplateLiteral(["\n    height: 100vh;\n    display: flex;\n    flex-direction: column;\n    overflow: hidden;\n  "]);

  _templateObject = function _templateObject() {
    return data;
  };

  return data;
}

function _taggedTemplateLiteral(strings, raw) { if (!raw) { raw = strings.slice(0); } return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }

import React from 'react';
import cx from 'clsx';
import FullscreenContext from '../../contexts/FullscreenContext';
export default (function (styled) {
  var Div = styled('div')(_templateObject());

  var Fullscreen = function Fullscreen(props) {
    return /*#__PURE__*/React.createElement(FullscreenContext.Provider, {
      value: true
    }, /*#__PURE__*/React.createElement(Div, _extends({}, props, {
      className: cx("Fullscreen", props.className)
    })));
  };

  return Fullscreen;
});