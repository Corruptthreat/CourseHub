function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

import React from 'react';
import AppBar from '@material-ui/core/AppBar';
import { useTheme } from '@material-ui/core/styles';
import { useLayoutCtx } from '../../contexts';
import { generateStyledProxyCreator } from '../Shared/StyledProxy';
import HeaderCompiler from '../../compilers/HeaderCompiler';
import { createBreakpointStyles } from '../../utils';
export default (function (styled) {
  var styledProxy = generateStyledProxyCreator(styled);
  var StyledAppBar = styledProxy(AppBar);

  var Header = function Header(props) {
    var _useLayoutCtx = useLayoutCtx(),
        data = _useLayoutCtx.data,
        state = _useLayoutCtx.state;

    var _useTheme = useTheme(),
        breakpoints = _useTheme.breakpoints;

    var styles = createBreakpointStyles(HeaderCompiler(state, data.header, data.edgeSidebar).getResultStyle(), breakpoints);
    return /*#__PURE__*/React.createElement(StyledAppBar, _extends({
      color: 'default',
      elevation: 0,
      "mui-layout": data.headerId
    }, props, {
      styles: _extends({
        transition: 'all 300ms cubic-bezier(0.0, 0, 0.2, 1) 0ms'
      }, styles)
    }));
  };

  return Header;
});