function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

import React from "react";
import useTheme from "@material-ui/core/styles/useTheme";
import { useLayoutCtx } from "../../contexts";
import HeaderOffsetCompiler from "../../compilers/HeaderOffsetCompiler";
import { createBreakpointStyles } from "../../utils";
import { generateStyledProxyCreator } from '../Shared/StyledProxy';
export default (function (styled) {
  var styledProxy = generateStyledProxyCreator(styled);
  var Div = styledProxy('div');

  var HeaderOffset = function HeaderOffset() {
    var _useTheme = useTheme(),
        breakpoints = _useTheme.breakpoints;

    var _useLayoutCtx = useLayoutCtx(),
        data = _useLayoutCtx.data;

    var compiler = HeaderOffsetCompiler(data.header);
    var styles = createBreakpointStyles(compiler.getResultStyle(), breakpoints);
    return /*#__PURE__*/React.createElement(Div, {
      className: "HeaderOffset",
      styles: _extends(_extends({}, styles), {}, {
        flexShrink: 0
      })
    });
  };

  return HeaderOffset;
});