"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = exports.useEdgeHeaderMagnet = void 0;

var _react = require("react");

var _contexts = require("../contexts");

var _Header = _interopRequireDefault(require("../effects/Header"));

var _useScreen = _interopRequireDefault(require("./useScreen"));

var _useScrollY = _interopRequireDefault(require("./useScrollY"));

var _useHeaderHeight = _interopRequireDefault(require("./useHeaderHeight"));

var _utils = require("../utils");

var _sidebarChecker = require("../utils/sidebarChecker");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _iterableToArrayLimit(arr, i) { if (typeof Symbol === "undefined" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

var useEdgeHeaderMagnet = function useEdgeHeaderMagnet(sidebarId) {
  var screen = (0, _useScreen["default"])();
  var scrollY = (0, _useScrollY["default"])();

  var _useLayoutCtx = (0, _contexts.useLayoutCtx)(),
      _useLayoutCtx$data = _useLayoutCtx.data,
      header = _useLayoutCtx$data.header,
      headerId = _useLayoutCtx$data.headerId,
      edgeSidebar = _useLayoutCtx$data.edgeSidebar;

  var headerConfig = (0, _utils.pickNearestBreakpoint)(header, screen);
  var headerEffect = (0, _Header["default"])(headerConfig);
  var sidebarConfig = (0, _utils.pickNearestBreakpoint)(edgeSidebar.configMapById[sidebarId], screen);
  var resizedHeight = (0, _useHeaderHeight["default"])(headerId);

  var _useState = (0, _react.useState)(''),
      _useState2 = _slicedToArray(_useState, 2),
      headerHeight = _useState2[0],
      setHeaderHeight = _useState2[1];

  var shouldUpdate = resizedHeight && headerConfig && headerConfig.position === 'relative' && headerEffect.isObjectClipped(sidebarId) && (0, _sidebarChecker.isCollapsibleSidebarConfig)(sidebarConfig) && sidebarConfig.headerMagnetEnabled;
  (0, _react.useEffect)(function () {
    if (shouldUpdate) {
      setHeaderHeight((0, _utils.subtractCalc)(resizedHeight, scrollY));
    } else {
      setHeaderHeight('');
    }
  }, [shouldUpdate, resizedHeight, screen, scrollY]);
  return {
    height: headerHeight
  }; // inline style
};

exports.useEdgeHeaderMagnet = useEdgeHeaderMagnet;
var _default = useEdgeHeaderMagnet;
exports["default"] = _default;