{"ast":null,"code":"import*as actionTypes from\"../actions/actionTypes\";import{updateObject}from\"../utility\";var initialState={token:null,success:null,error:null,loading:false,group:\"GP08\",accountName:null,authRedirectPath:\"/\"};var authStart=function authStart(state,action){return updateObject(state,{error:null,success:null,loading:true});};var authSuccess=function authSuccess(state,action){return updateObject(state,{token:action.authData.accessToken,accountName:action.authData.taiKhoan,error:null,success:action.message,loading:false});};var authFail=function authFail(state,action){return updateObject(state,{error:action.error,success:null,loading:false});};var authLogout=function authLogout(state,action){return updateObject(state,{token:null});};// const setAuthRedirectPath = (state, action) => {\n//   return updateObject(state, { authRedirectPath: action.path });\n// };\nvar chooseGroup=function chooseGroup(state,action){return updateObject(state,{group:action.group});};var reducer=function reducer(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:initialState;var action=arguments.length>1?arguments[1]:undefined;switch(action.type){case actionTypes.AUTH_START:return authStart(state,action);case actionTypes.AUTH_SUCCESS:return authSuccess(state,action);case actionTypes.AUTH_FAIL:return authFail(state,action);case actionTypes.AUTH_LOGOUT:return authLogout(state,action);case actionTypes.CHOOSE_GROUP:return chooseGroup(state,action);// case actionTypes.SET_AUTH_REDIRECT_PATH:\n//   return setAuthRedirectPath(state, action);\ndefault:return state;}};export default reducer;","map":{"version":3,"sources":["/home/sudo-byte/CourseHub-master/src/store/reducers/auth.js"],"names":["actionTypes","updateObject","initialState","token","success","error","loading","group","accountName","authRedirectPath","authStart","state","action","authSuccess","authData","accessToken","taiKhoan","message","authFail","authLogout","chooseGroup","reducer","type","AUTH_START","AUTH_SUCCESS","AUTH_FAIL","AUTH_LOGOUT","CHOOSE_GROUP"],"mappings":"AAAA,MAAO,GAAKA,CAAAA,WAAZ,KAA6B,wBAA7B,CACA,OAASC,YAAT,KAA6B,YAA7B,CAEA,GAAMC,CAAAA,YAAY,CAAG,CACnBC,KAAK,CAAE,IADY,CAEnBC,OAAO,CAAE,IAFU,CAGnBC,KAAK,CAAE,IAHY,CAInBC,OAAO,CAAE,KAJU,CAKnBC,KAAK,CAAE,MALY,CAMnBC,WAAW,CAAE,IANM,CAOnBC,gBAAgB,CAAE,GAPC,CAArB,CAUA,GAAMC,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,CAACC,KAAD,CAAQC,MAAR,CAAmB,CACnC,MAAOX,CAAAA,YAAY,CAACU,KAAD,CAAQ,CAAEN,KAAK,CAAE,IAAT,CAAeD,OAAO,CAAE,IAAxB,CAA8BE,OAAO,CAAE,IAAvC,CAAR,CAAnB,CACD,CAFD,CAIA,GAAMO,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAACF,KAAD,CAAQC,MAAR,CAAmB,CACrC,MAAOX,CAAAA,YAAY,CAACU,KAAD,CAAQ,CACzBR,KAAK,CAAES,MAAM,CAACE,QAAP,CAAgBC,WADE,CAEzBP,WAAW,CAAEI,MAAM,CAACE,QAAP,CAAgBE,QAFJ,CAGzBX,KAAK,CAAE,IAHkB,CAIzBD,OAAO,CAAEQ,MAAM,CAACK,OAJS,CAKzBX,OAAO,CAAE,KALgB,CAAR,CAAnB,CAOD,CARD,CAUA,GAAMY,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAACP,KAAD,CAAQC,MAAR,CAAmB,CAClC,MAAOX,CAAAA,YAAY,CAACU,KAAD,CAAQ,CACzBN,KAAK,CAAEO,MAAM,CAACP,KADW,CAEzBD,OAAO,CAAE,IAFgB,CAGzBE,OAAO,CAAE,KAHgB,CAAR,CAAnB,CAKD,CAND,CAQA,GAAMa,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAACR,KAAD,CAAQC,MAAR,CAAmB,CACpC,MAAOX,CAAAA,YAAY,CAACU,KAAD,CAAQ,CAAER,KAAK,CAAE,IAAT,CAAR,CAAnB,CACD,CAFD,CAIA;AACA;AACA;AAEA,GAAMiB,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAACT,KAAD,CAAQC,MAAR,CAAmB,CACrC,MAAOX,CAAAA,YAAY,CAACU,KAAD,CAAQ,CACzBJ,KAAK,CAAEK,MAAM,CAACL,KADW,CAAR,CAAnB,CAGD,CAJD,CAMA,GAAMc,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,EAAkC,IAAjCV,CAAAA,KAAiC,2DAAzBT,YAAyB,IAAXU,CAAAA,MAAW,2CAChD,OAAQA,MAAM,CAACU,IAAf,EACE,IAAKtB,CAAAA,WAAW,CAACuB,UAAjB,CACE,MAAOb,CAAAA,SAAS,CAACC,KAAD,CAAQC,MAAR,CAAhB,CACF,IAAKZ,CAAAA,WAAW,CAACwB,YAAjB,CACE,MAAOX,CAAAA,WAAW,CAACF,KAAD,CAAQC,MAAR,CAAlB,CACF,IAAKZ,CAAAA,WAAW,CAACyB,SAAjB,CACE,MAAOP,CAAAA,QAAQ,CAACP,KAAD,CAAQC,MAAR,CAAf,CAEF,IAAKZ,CAAAA,WAAW,CAAC0B,WAAjB,CACE,MAAOP,CAAAA,UAAU,CAACR,KAAD,CAAQC,MAAR,CAAjB,CAEF,IAAKZ,CAAAA,WAAW,CAAC2B,YAAjB,CACE,MAAOP,CAAAA,WAAW,CAACT,KAAD,CAAQC,MAAR,CAAlB,CAEF;AACA;AACA,QACE,MAAOD,CAAAA,KAAP,CAjBJ,CAmBD,CApBD,CAsBA,cAAeU,CAAAA,OAAf","sourcesContent":["import * as actionTypes from \"../actions/actionTypes\";\r\nimport { updateObject } from \"../utility\";\r\n\r\nconst initialState = {\r\n  token: null,\r\n  success: null,\r\n  error: null,\r\n  loading: false,\r\n  group: \"GP08\",\r\n  accountName: null,\r\n  authRedirectPath: \"/\",\r\n};\r\n\r\nconst authStart = (state, action) => {\r\n  return updateObject(state, { error: null, success: null, loading: true });\r\n};\r\n\r\nconst authSuccess = (state, action) => {\r\n  return updateObject(state, {\r\n    token: action.authData.accessToken,\r\n    accountName: action.authData.taiKhoan,\r\n    error: null,\r\n    success: action.message,\r\n    loading: false,\r\n  });\r\n};\r\n\r\nconst authFail = (state, action) => {\r\n  return updateObject(state, {\r\n    error: action.error,\r\n    success: null,\r\n    loading: false,\r\n  });\r\n};\r\n\r\nconst authLogout = (state, action) => {\r\n  return updateObject(state, { token: null });\r\n};\r\n\r\n// const setAuthRedirectPath = (state, action) => {\r\n//   return updateObject(state, { authRedirectPath: action.path });\r\n// };\r\n\r\nconst chooseGroup = (state, action) => {\r\n  return updateObject(state, {\r\n    group: action.group,\r\n  });\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case actionTypes.AUTH_START:\r\n      return authStart(state, action);\r\n    case actionTypes.AUTH_SUCCESS:\r\n      return authSuccess(state, action);\r\n    case actionTypes.AUTH_FAIL:\r\n      return authFail(state, action);\r\n\r\n    case actionTypes.AUTH_LOGOUT:\r\n      return authLogout(state, action);\r\n\r\n    case actionTypes.CHOOSE_GROUP:\r\n      return chooseGroup(state, action);\r\n\r\n    // case actionTypes.SET_AUTH_REDIRECT_PATH:\r\n    //   return setAuthRedirectPath(state, action);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n"]},"metadata":{},"sourceType":"module"}