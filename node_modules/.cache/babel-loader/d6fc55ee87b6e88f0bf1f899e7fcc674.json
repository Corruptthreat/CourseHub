{"ast":null,"code":"import React from\"react\";import{connect}from\"react-redux\";import*as actions from\"../../store/actions\";import{SnackbarProvider}from\"notistack\";import{CssBaseline}from\"@material-ui/core\";import{makeStyles,responsiveFontSizes}from\"@material-ui/core/styles\";import{createMuiTheme,ThemeProvider}from\"@material-ui/core/styles\";import Appbar from\"../../components/Navigation/Appbar/Appbar\";import SideDrawer from\"../../components/Navigation/SideDrawer/SideDrawer\";// import theme from \"../../components/UI/Theme\";\nvar UserLayout=function UserLayout(props){var sideOpen=props.sideOpen,sideDraw=props.sideDraw,darkTheme=props.darkTheme;var onSideOpen=props.onSideOpen,onDrawOpen=props.onDrawOpen,onDrawclose=props.onDrawclose;var localTheme=JSON.parse(localStorage.getItem(\"darkTheme\"));var isTheme=darkTheme;if(!darkTheme){isTheme=localTheme;}var theme=responsiveFontSizes(createMuiTheme({palette:{type:isTheme?\"dark\":\"light\"},mixins:{toolbar:{height:56}}}));var useStyles=makeStyles(function(theme){return{root:{display:\"flex\"},toolbar:{marginBottom:48},content:{flexGrow:1,overflow:\"hidden\",paddingTop:theme.spacing(1)}};});var classes=useStyles();return/*#__PURE__*/React.createElement(ThemeProvider,{theme:theme},/*#__PURE__*/React.createElement(SnackbarProvider,{preventDuplicate:true,maxSnack:3},/*#__PURE__*/React.createElement(\"div\",{className:classes.root},/*#__PURE__*/React.createElement(CssBaseline,null),/*#__PURE__*/React.createElement(Appbar,{openToggleClicked:onSideOpen,drawerToggleClicked:onDrawOpen}),/*#__PURE__*/React.createElement(SideDrawer,{openSidebar:sideOpen,drawSidebar:sideDraw,open:onDrawOpen,close:onDrawclose}),/*#__PURE__*/React.createElement(\"main\",{className:classes.content},/*#__PURE__*/React.createElement(\"div\",{className:classes.toolbar}),props.children))));};var mapStateToProps=function mapStateToProps(state){return{sideOpen:state.ui.sideOpen,sideDraw:state.ui.sideDraw,darkTheme:state.ui.darkTheme};};var mapDispatchToProps=function mapDispatchToProps(dispatch){return{onSideOpen:function onSideOpen(){return dispatch(actions.openSidebar());},onDrawOpen:function onDrawOpen(){return dispatch(actions.drawOpen());},onDrawclose:function onDrawclose(){return dispatch(actions.drawClose());}};};export default connect(mapStateToProps,mapDispatchToProps)(UserLayout);","map":{"version":3,"sources":["/home/sudo-byte/CourseHub-master/src/hoc/Layout/UserLayout.js"],"names":["React","connect","actions","SnackbarProvider","CssBaseline","makeStyles","responsiveFontSizes","createMuiTheme","ThemeProvider","Appbar","SideDrawer","UserLayout","props","sideOpen","sideDraw","darkTheme","onSideOpen","onDrawOpen","onDrawclose","localTheme","JSON","parse","localStorage","getItem","isTheme","theme","palette","type","mixins","toolbar","height","useStyles","root","display","marginBottom","content","flexGrow","overflow","paddingTop","spacing","classes","children","mapStateToProps","state","ui","mapDispatchToProps","dispatch","openSidebar","drawOpen","drawClose"],"mappings":"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","sourcesContent":["import React from \"react\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport * as actions from \"../../store/actions\";\r\n\r\nimport { SnackbarProvider } from \"notistack\";\r\nimport { CssBaseline } from \"@material-ui/core\";\r\nimport { makeStyles, responsiveFontSizes } from \"@material-ui/core/styles\";\r\nimport { createMuiTheme, ThemeProvider } from \"@material-ui/core/styles\";\r\n\r\nimport Appbar from \"../../components/Navigation/Appbar/Appbar\";\r\nimport SideDrawer from \"../../components/Navigation/SideDrawer/SideDrawer\";\r\n\r\n// import theme from \"../../components/UI/Theme\";\r\n\r\nconst UserLayout = (props) => {\r\n  const { sideOpen, sideDraw, darkTheme } = props;\r\n  const { onSideOpen, onDrawOpen, onDrawclose } = props;\r\n  const localTheme = JSON.parse(localStorage.getItem(\"darkTheme\"));\r\n\r\n  let isTheme = darkTheme;\r\n  if (!darkTheme) {\r\n    isTheme = localTheme;\r\n  }\r\n\r\n  const theme = responsiveFontSizes(\r\n    createMuiTheme({\r\n      palette: {\r\n        type: isTheme ? \"dark\" : \"light\",\r\n      },\r\n      mixins: {\r\n        toolbar: {\r\n          height: 56,\r\n        },\r\n      },\r\n    })\r\n  );\r\n\r\n  const useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      display: \"flex\",\r\n    },\r\n    toolbar: {\r\n      marginBottom: 48,\r\n    },\r\n    content: {\r\n      flexGrow: 1,\r\n      overflow: \"hidden\",\r\n      paddingTop: theme.spacing(1),\r\n    },\r\n  }));\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <SnackbarProvider preventDuplicate maxSnack={3}>\r\n        <div className={classes.root}>\r\n          <CssBaseline />\r\n          <Appbar\r\n            openToggleClicked={onSideOpen}\r\n            drawerToggleClicked={onDrawOpen}\r\n          />\r\n          <SideDrawer\r\n            openSidebar={sideOpen}\r\n            drawSidebar={sideDraw}\r\n            open={onDrawOpen}\r\n            close={onDrawclose}\r\n          />\r\n          <main className={classes.content}>\r\n            <div className={classes.toolbar} />\r\n            {props.children}\r\n          </main>\r\n        </div>\r\n      </SnackbarProvider>\r\n    </ThemeProvider>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    sideOpen: state.ui.sideOpen,\r\n    sideDraw: state.ui.sideDraw,\r\n    darkTheme: state.ui.darkTheme,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onSideOpen: () => dispatch(actions.openSidebar()),\r\n    onDrawOpen: () => dispatch(actions.drawOpen()),\r\n    onDrawclose: () => dispatch(actions.drawClose()),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UserLayout);\r\n"]},"metadata":{},"sourceType":"module"}