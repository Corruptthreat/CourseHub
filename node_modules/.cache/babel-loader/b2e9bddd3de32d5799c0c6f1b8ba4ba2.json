{"ast":null,"code":"var _jsxFileName = \"/home/sudo-byte/CourseHub-master/src/components/CourseList/CourseCarousel/CourseCarousel.js\";\nimport React from \"react\";\nimport { Grid, useMediaQuery } from \"@material-ui/core\";\nimport Carousel from \"../../UI/Carousel\";\nimport CourseCard from \"../CourseCard/CourseCard\";\n\nconst CourseCarousel = ({\n  courseList\n}) => {\n  let totalItems = 1;\n\n  if (useMediaQuery(\"(min-width:800px)\")) {\n    totalItems = 2;\n  }\n\n  if (useMediaQuery(\"(min-width:1000px)\")) {\n    totalItems = 3;\n  }\n\n  if (useMediaQuery(\"(min-width:1204px)\")) {\n    totalItems = 4;\n  }\n\n  if (useMediaQuery(\"(min-width:1450px)\")) {\n    totalItems = 5;\n  }\n\n  if (useMediaQuery(\"(min-width:1632px)\")) {\n    totalItems = 6;\n  } // let screenSize = window.innerWidth;\n\n\n  let courseLength = courseList.length;\n\n  if (courseLength <= totalItems) {\n    totalItems = courseLength;\n  }\n\n  let groupItems = courseList.length / totalItems;\n  let groupList = [];\n\n  for (let i = 0; i <= groupItems; i++) {\n    groupList.push(i);\n  }\n\n  const CourseItems = ({\n    index,\n    courseList\n  }) => {\n    let itemStart = index * totalItems;\n    let itemEnd = itemStart + totalItems;\n\n    if (itemEnd > courseLength) {\n      itemEnd = courseLength;\n      itemStart = courseLength - totalItems;\n    }\n\n    let items = [];\n\n    for (let i = itemStart; i < itemEnd; i++) {\n      const course = courseList[i];\n      const courseItem = /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        key: i,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(CourseCard, {\n        course: course,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }\n      }));\n      items.push(courseItem);\n    }\n\n    return /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      justify: \"center\",\n      spacing: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 7\n      }\n    }, items);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      color: \"#494949\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Carousel, {\n    autoPlay: false,\n    timer: 500,\n    animation: \"slide\",\n    indicators: false,\n    timeout: 300,\n    navButtonsAlwaysVisible: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }\n  }, groupList.map((course, index) => /*#__PURE__*/React.createElement(CourseItems, {\n    key: index,\n    index: index,\n    courseList: courseList,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 11\n    }\n  }))));\n};\n\nexport default CourseCarousel;","map":{"version":3,"sources":["/home/sudo-byte/CourseHub-master/src/components/CourseList/CourseCarousel/CourseCarousel.js"],"names":["React","Grid","useMediaQuery","Carousel","CourseCard","CourseCarousel","courseList","totalItems","courseLength","length","groupItems","groupList","i","push","CourseItems","index","itemStart","itemEnd","items","course","courseItem","color","map"],"mappings":"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","sourcesContent":["import React from \"react\";\r\n\r\nimport { Grid, useMediaQuery } from \"@material-ui/core\";\r\n\r\nimport Carousel from \"../../UI/Carousel\";\r\nimport CourseCard from \"../CourseCard/CourseCard\";\r\n\r\nconst CourseCarousel = ({ courseList }) => {\r\n  let totalItems = 1;\r\n  if (useMediaQuery(\"(min-width:800px)\")) {\r\n    totalItems = 2;\r\n  }\r\n  if (useMediaQuery(\"(min-width:1000px)\")) {\r\n    totalItems = 3;\r\n  }\r\n  if (useMediaQuery(\"(min-width:1204px)\")) {\r\n    totalItems = 4;\r\n  }\r\n  if (useMediaQuery(\"(min-width:1450px)\")) {\r\n    totalItems = 5;\r\n  }\r\n  if (useMediaQuery(\"(min-width:1632px)\")) {\r\n    totalItems = 6;\r\n  }\r\n\r\n  // let screenSize = window.innerWidth;\r\n  let courseLength = courseList.length;\r\n\r\n  if (courseLength <= totalItems) {\r\n    totalItems = courseLength;\r\n  }\r\n\r\n  let groupItems = courseList.length / totalItems;\r\n\r\n  let groupList = [];\r\n  for (let i = 0; i <= groupItems; i++) {\r\n    groupList.push(i);\r\n  }\r\n\r\n  const CourseItems = ({ index, courseList }) => {\r\n    let itemStart = index * totalItems;\r\n    let itemEnd = itemStart + totalItems;\r\n    if (itemEnd > courseLength) {\r\n      itemEnd = courseLength;\r\n      itemStart = courseLength - totalItems;\r\n    }\r\n\r\n    let items = [];\r\n\r\n    for (let i = itemStart; i < itemEnd; i++) {\r\n      const course = courseList[i];\r\n      const courseItem = (\r\n        <Grid item key={i}>\r\n          <CourseCard course={course} />\r\n        </Grid>\r\n      );\r\n      items.push(courseItem);\r\n    }\r\n\r\n    return (\r\n      <Grid container justify=\"center\" spacing={2}>\r\n        {items}\r\n      </Grid>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div style={{ color: \"#494949\" }}>\r\n      <Carousel\r\n        autoPlay={false}\r\n        timer={500}\r\n        animation={\"slide\"}\r\n        indicators={false}\r\n        timeout={300}\r\n        navButtonsAlwaysVisible={false}\r\n      >\r\n        {groupList.map((course, index) => (\r\n          <CourseItems key={index} index={index} courseList={courseList} />\r\n        ))}\r\n      </Carousel>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CourseCarousel;\r\n"]},"metadata":{},"sourceType":"module"}