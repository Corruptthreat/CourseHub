{"ast":null,"code":"import React from\"react\";import{Grid,useMediaQuery}from\"@material-ui/core\";import Carousel from\"../../UI/Carousel\";import CourseCard from\"../CourseCard/CourseCard\";var CourseCarousel=function CourseCarousel(_ref){var courseList=_ref.courseList;var totalItems=1;if(useMediaQuery(\"(min-width:800px)\")){totalItems=2;}if(useMediaQuery(\"(min-width:1000px)\")){totalItems=3;}if(useMediaQuery(\"(min-width:1204px)\")){totalItems=4;}if(useMediaQuery(\"(min-width:1450px)\")){totalItems=5;}if(useMediaQuery(\"(min-width:1632px)\")){totalItems=6;}// let screenSize = window.innerWidth;\nvar courseLength=courseList.length;if(courseLength<=totalItems){totalItems=courseLength;}var groupItems=courseList.length/totalItems;var groupList=[];for(var i=0;i<=groupItems;i++){groupList.push(i);}var CourseItems=function CourseItems(_ref2){var index=_ref2.index,courseList=_ref2.courseList;var itemStart=index*totalItems;var itemEnd=itemStart+totalItems;if(itemEnd>courseLength){itemEnd=courseLength;itemStart=courseLength-totalItems;}var items=[];for(var _i=itemStart;_i<itemEnd;_i++){var course=courseList[_i];var courseItem=/*#__PURE__*/React.createElement(Grid,{item:true,key:_i},/*#__PURE__*/React.createElement(CourseCard,{course:course}));items.push(courseItem);}return/*#__PURE__*/React.createElement(Grid,{container:true,justify:\"center\",spacing:2},items);};return/*#__PURE__*/React.createElement(\"div\",{style:{color:\"#494949\"}},/*#__PURE__*/React.createElement(Carousel,{autoPlay:false,timer:500,animation:\"slide\",indicators:false,timeout:300,navButtonsAlwaysVisible:false},groupList.map(function(course,index){return/*#__PURE__*/React.createElement(CourseItems,{key:index,index:index,courseList:courseList});})));};export default CourseCarousel;","map":{"version":3,"sources":["/home/sudo-byte/CourseHub-master/src/components/CourseList/CourseCarousel/CourseCarousel.js"],"names":["React","Grid","useMediaQuery","Carousel","CourseCard","CourseCarousel","courseList","totalItems","courseLength","length","groupItems","groupList","i","push","CourseItems","index","itemStart","itemEnd","items","course","courseItem","color","map"],"mappings":"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","sourcesContent":["import React from \"react\";\r\n\r\nimport { Grid, useMediaQuery } from \"@material-ui/core\";\r\n\r\nimport Carousel from \"../../UI/Carousel\";\r\nimport CourseCard from \"../CourseCard/CourseCard\";\r\n\r\nconst CourseCarousel = ({ courseList }) => {\r\n  let totalItems = 1;\r\n  if (useMediaQuery(\"(min-width:800px)\")) {\r\n    totalItems = 2;\r\n  }\r\n  if (useMediaQuery(\"(min-width:1000px)\")) {\r\n    totalItems = 3;\r\n  }\r\n  if (useMediaQuery(\"(min-width:1204px)\")) {\r\n    totalItems = 4;\r\n  }\r\n  if (useMediaQuery(\"(min-width:1450px)\")) {\r\n    totalItems = 5;\r\n  }\r\n  if (useMediaQuery(\"(min-width:1632px)\")) {\r\n    totalItems = 6;\r\n  }\r\n\r\n  // let screenSize = window.innerWidth;\r\n  let courseLength = courseList.length;\r\n\r\n  if (courseLength <= totalItems) {\r\n    totalItems = courseLength;\r\n  }\r\n\r\n  let groupItems = courseList.length / totalItems;\r\n\r\n  let groupList = [];\r\n  for (let i = 0; i <= groupItems; i++) {\r\n    groupList.push(i);\r\n  }\r\n\r\n  const CourseItems = ({ index, courseList }) => {\r\n    let itemStart = index * totalItems;\r\n    let itemEnd = itemStart + totalItems;\r\n    if (itemEnd > courseLength) {\r\n      itemEnd = courseLength;\r\n      itemStart = courseLength - totalItems;\r\n    }\r\n\r\n    let items = [];\r\n\r\n    for (let i = itemStart; i < itemEnd; i++) {\r\n      const course = courseList[i];\r\n      const courseItem = (\r\n        <Grid item key={i}>\r\n          <CourseCard course={course} />\r\n        </Grid>\r\n      );\r\n      items.push(courseItem);\r\n    }\r\n\r\n    return (\r\n      <Grid container justify=\"center\" spacing={2}>\r\n        {items}\r\n      </Grid>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div style={{ color: \"#494949\" }}>\r\n      <Carousel\r\n        autoPlay={false}\r\n        timer={500}\r\n        animation={\"slide\"}\r\n        indicators={false}\r\n        timeout={300}\r\n        navButtonsAlwaysVisible={false}\r\n      >\r\n        {groupList.map((course, index) => (\r\n          <CourseItems key={index} index={index} courseList={courseList} />\r\n        ))}\r\n      </Carousel>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CourseCarousel;\r\n"]},"metadata":{},"sourceType":"module"}