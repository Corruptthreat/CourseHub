{"ast":null,"code":"var _jsxFileName = \"/home/sudo-byte/CourseHub-master/src/components/Courses/CourseList.js\";\nimport React, { useEffect, Fragment } from \"react\";\nimport { connect } from \"react-redux\";\nimport * as actions from \"../../store/actions\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { List, ListItem, Tooltip } from \"@material-ui/core\";\nimport { Fab, Box, TextField, Grid } from \"@material-ui/core\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport Spinner from \"../UI/Spinner/Spinner\";\nimport CourseCardItem from \"./CourseCardItem\";\nimport ChooseGroup from \"./InputCustom/ChooseGroup\";\nimport DataLength from \"../DataDisplay/DataLength\";\nconst useStyles = makeStyles(theme => ({\n  courseItems: {\n    zIndex: 10,\n    width: \"100%\",\n    minWidth: 350,\n    backgroundColor: theme.palette.background.paper\n  },\n  courseList: {\n    flexGrow: 1,\n    height: \"75vh\",\n    overflowY: \"auto\",\n    \"@media (max-width: 836px)\": {\n      height: \"250px\"\n    }\n  },\n  childMargin: {\n    \"& > *\": {\n      margin: theme.spacing(0)\n    }\n  }\n}));\n\nfunction CourseList(props) {\n  const classes = useStyles();\n  const {\n    courseList,\n    courseType,\n    group,\n    loading\n  } = props;\n  const {\n    onFetchCourseList,\n    onAddCourseClick,\n    onFetchCourseIndex\n  } = props;\n  useEffect(() => {\n    onFetchCourseIndex();\n  }, [onFetchCourseIndex]);\n  useEffect(() => {\n    onFetchCourseList(null, group, courseType);\n  }, [onFetchCourseList, group, courseType]);\n\n  const handleAddCourseClick = () => {\n    onAddCourseClick();\n  };\n\n  let courseListRender = /*#__PURE__*/React.createElement(Spinner, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 26\n    }\n  });\n\n  if (courseList && courseList.length > 0) {\n    courseListRender = courseList.map((course, index) => /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(CourseCardItem, {\n      course: course,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }\n    })));\n  }\n\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(List, {\n    dense: true,\n    className: classes.courseItems,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(ListItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    justify: \"space-between\",\n    alignItems: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Fab, {\n    color: \"primary\",\n    size: \"small\",\n    \"aria-label\": \"add\",\n    onClick: () => handleAddCourseClick(),\n    disabled: loading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Tooltip, {\n    title: \"Add\",\n    placement: \"right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(AddIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 17\n    }\n  }))), courseList && courseList.length ? /*#__PURE__*/React.createElement(DataLength, {\n    items: courseList.length,\n    type: \"courses\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 15\n    }\n  }) : null, /*#__PURE__*/React.createElement(ChooseGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(ListItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    mb: 1,\n    mr: 1,\n    width: \"100%\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    id: \"filled-search\",\n    label: \"Search Course...\",\n    type: \"search\",\n    fullWidth: true,\n    onChange: event => onFetchCourseList(event.target.value, group, courseType),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }\n  })))), /*#__PURE__*/React.createElement(Box, {\n    mx: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    justify: \"center\",\n    className: classes.courseList,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 9\n    }\n  }, courseListRender)));\n}\n\nconst mapStateToProps = state => {\n  return {\n    group: state.auth.group,\n    courseList: state.coursesManager.courseList,\n    courseType: state.coursesManager.courseType,\n    error: state.coursesManager.error,\n    success: state.coursesManager.success,\n    loading: state.coursesManager.loading\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onFetchCourseIndex: () => dispatch(actions.fetchCourseIndex()),\n    onFetchCourseList: (keyWord, group, courseType) => dispatch(actions.fetchCoursesList(keyWord, group, courseType)),\n    onAddCourseClick: () => dispatch(actions.addCourseClick())\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CourseList);","map":{"version":3,"sources":["/home/sudo-byte/CourseHub-master/src/components/Courses/CourseList.js"],"names":["React","useEffect","Fragment","connect","actions","makeStyles","List","ListItem","Tooltip","Fab","Box","TextField","Grid","AddIcon","Spinner","CourseCardItem","ChooseGroup","DataLength","useStyles","theme","courseItems","zIndex","width","minWidth","backgroundColor","palette","background","paper","courseList","flexGrow","height","overflowY","childMargin","margin","spacing","CourseList","props","classes","courseType","group","loading","onFetchCourseList","onAddCourseClick","onFetchCourseIndex","handleAddCourseClick","courseListRender","length","map","course","index","event","target","value","mapStateToProps","state","auth","coursesManager","error","success","mapDispatchToProps","dispatch","fetchCourseIndex","keyWord","fetchCoursesList","addCourseClick"],"mappings":"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","sourcesContent":["import React, { useEffect, Fragment } from \"react\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport * as actions from \"../../store/actions\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nimport { List, ListItem, Tooltip } from \"@material-ui/core\";\r\nimport { Fab, Box, TextField, Grid } from \"@material-ui/core\";\r\n\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\n\r\nimport Spinner from \"../UI/Spinner/Spinner\";\r\nimport CourseCardItem from \"./CourseCardItem\";\r\nimport ChooseGroup from \"./InputCustom/ChooseGroup\";\r\nimport DataLength from \"../DataDisplay/DataLength\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  courseItems: {\r\n    zIndex: 10,\r\n    width: \"100%\",\r\n    minWidth: 350,\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n  courseList: {\r\n    flexGrow: 1,\r\n    height: \"75vh\",\r\n    overflowY: \"auto\",\r\n    \"@media (max-width: 836px)\": {\r\n      height: \"250px\",\r\n    },\r\n  },\r\n  childMargin: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(0),\r\n    },\r\n  },\r\n}));\r\n\r\nfunction CourseList(props) {\r\n  const classes = useStyles();\r\n\r\n  const { courseList, courseType, group, loading } = props;\r\n  const { onFetchCourseList, onAddCourseClick, onFetchCourseIndex } = props;\r\n\r\n  useEffect(() => {\r\n    onFetchCourseIndex();\r\n  }, [onFetchCourseIndex]);\r\n\r\n  useEffect(() => {\r\n    onFetchCourseList(null, group, courseType);\r\n  }, [onFetchCourseList, group, courseType]);\r\n\r\n  const handleAddCourseClick = () => {\r\n    onAddCourseClick();\r\n  };\r\n\r\n  let courseListRender = <Spinner />;\r\n\r\n  if (courseList && courseList.length > 0) {\r\n    courseListRender = courseList.map((course, index) => (\r\n      <Grid item key={index}>\r\n        <CourseCardItem course={course} />\r\n      </Grid>\r\n    ));\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <List dense className={classes.courseItems}>\r\n        <ListItem>\r\n          <Grid container justify=\"space-between\" alignItems=\"center\">\r\n            <Fab\r\n              color=\"primary\"\r\n              size=\"small\"\r\n              aria-label=\"add\"\r\n              onClick={() => handleAddCourseClick()}\r\n              disabled={loading}\r\n            >\r\n              <Tooltip title=\"Add\" placement=\"right\">\r\n                <AddIcon />\r\n              </Tooltip>\r\n            </Fab>\r\n\r\n            {courseList && courseList.length ? (\r\n              <DataLength items={courseList.length} type={\"courses\"} />\r\n            ) : null}\r\n\r\n            <ChooseGroup />\r\n          </Grid>\r\n        </ListItem>\r\n\r\n        <ListItem>\r\n          <Box mb={1} mr={1} width={\"100%\"}>\r\n            <TextField\r\n              id=\"filled-search\"\r\n              label=\"Search Course...\"\r\n              type=\"search\"\r\n              fullWidth\r\n              onChange={(event) =>\r\n                onFetchCourseList(event.target.value, group, courseType)\r\n              }\r\n            />\r\n          </Box>\r\n        </ListItem>\r\n      </List>\r\n\r\n      <Box mx={2}>\r\n        <Grid\r\n          container\r\n          spacing={2}\r\n          justify={\"center\"}\r\n          className={classes.courseList}\r\n        >\r\n          {courseListRender}\r\n        </Grid>\r\n      </Box>\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    group: state.auth.group,\r\n    courseList: state.coursesManager.courseList,\r\n    courseType: state.coursesManager.courseType,\r\n    error: state.coursesManager.error,\r\n    success: state.coursesManager.success,\r\n    loading: state.coursesManager.loading,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onFetchCourseIndex: () => dispatch(actions.fetchCourseIndex()),\r\n    onFetchCourseList: (keyWord, group, courseType) =>\r\n      dispatch(actions.fetchCoursesList(keyWord, group, courseType)),\r\n    onAddCourseClick: () => dispatch(actions.addCourseClick()),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CourseList);\r\n"]},"metadata":{},"sourceType":"module"}