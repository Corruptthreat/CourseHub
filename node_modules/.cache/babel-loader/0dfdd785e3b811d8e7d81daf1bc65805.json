{"ast":null,"code":"import axios from \"../../axios\";\nimport * as actionTypes from \"./actionTypes\";\nexport const authStart = () => {\n  return {\n    type: actionTypes.AUTH_START\n  };\n};\nexport const authSuccess = (authData, message) => {\n  return {\n    type: actionTypes.AUTH_SUCCESS,\n    authData: authData,\n    message: message\n  };\n};\nexport const authFail = error => {\n  return {\n    type: actionTypes.AUTH_FAIL,\n    error: error\n  };\n};\nexport const auth = (values, history, isSignUp) => {\n  return dispatch => {\n    dispatch(authStart());\n    let url = \"/QuanLyNguoiDung/DangNhap\";\n    let authData = {\n      taiKhoan: values.username,\n      matKhau: values.password\n    };\n\n    if (isSignUp) {\n      url = \"/QuanLyNguoiDung/DangKy\";\n      authData = {\n        taiKhoan: values.username,\n        matKhau: values.password,\n        hoTen: values.name,\n        soDT: values.phone,\n        maNhom: values.group,\n        email: values.email\n      };\n    }\n\n    axios.post(url, authData).then(response => {\n      if (isSignUp) {\n        dispatch(authSuccess(response.data, \"Create account successfuly!\"));\n        history.push(\"/sign-in\");\n      } else {\n        dispatch(authSuccess(response.data, \"Login successfuly!\"));\n        localStorage.setItem(\"user\", JSON.stringify(response.data));\n        history.push(\"/\");\n      }\n    }).catch(error => {\n      dispatch(authFail(error.response.data));\n    });\n  };\n};\nexport const logout = () => {\n  localStorage.removeItem(\"user\");\n  return {\n    type: actionTypes.AUTH_LOGOUT\n  };\n}; // export const setAuthRedirectPath = (path) => {\n//   return {\n//     type: actionTypes.SET_AUTH_REDIRECT_PATH,\n//     path: path,\n//   };\n// };\n\nexport const authCheckState = () => {\n  return dispatch => {\n    const user = localStorage.getItem(\"user\");\n\n    if (!user) {\n      dispatch(logout());\n    } else {\n      dispatch(authSuccess(\"user\"));\n    }\n  };\n};\nexport const chooseGroup = group => {\n  return {\n    type: actionTypes.CHOOSE_GROUP,\n    group: group\n  };\n};","map":{"version":3,"sources":["/home/sudo-byte/CourseHub-master/src/store/actions/auth.js"],"names":["axios","actionTypes","authStart","type","AUTH_START","authSuccess","authData","message","AUTH_SUCCESS","authFail","error","AUTH_FAIL","auth","values","history","isSignUp","dispatch","url","taiKhoan","username","matKhau","password","hoTen","name","soDT","phone","maNhom","group","email","post","then","response","data","push","localStorage","setItem","JSON","stringify","catch","logout","removeItem","AUTH_LOGOUT","authCheckState","user","getItem","chooseGroup","CHOOSE_GROUP"],"mappings":"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","sourcesContent":["import axios from \"../../axios\";\r\nimport * as actionTypes from \"./actionTypes\";\r\n\r\nexport const authStart = () => {\r\n  return {\r\n    type: actionTypes.AUTH_START,\r\n  };\r\n};\r\n\r\nexport const authSuccess = (authData, message) => {\r\n  return {\r\n    type: actionTypes.AUTH_SUCCESS,\r\n    authData: authData,\r\n    message: message,\r\n  };\r\n};\r\n\r\nexport const authFail = (error) => {\r\n  return {\r\n    type: actionTypes.AUTH_FAIL,\r\n    error: error,\r\n  };\r\n};\r\n\r\nexport const auth = (values, history, isSignUp) => {\r\n  return (dispatch) => {\r\n    dispatch(authStart());\r\n    let url = \"/QuanLyNguoiDung/DangNhap\";\r\n    let authData = {\r\n      taiKhoan: values.username,\r\n      matKhau: values.password,\r\n    };\r\n    if (isSignUp) {\r\n      url = \"/QuanLyNguoiDung/DangKy\";\r\n      authData = {\r\n        taiKhoan: values.username,\r\n        matKhau: values.password,\r\n        hoTen: values.name,\r\n        soDT: values.phone,\r\n        maNhom: values.group,\r\n        email: values.email,\r\n      };\r\n    }\r\n    axios\r\n      .post(url, authData)\r\n      .then((response) => {\r\n        if (isSignUp) {\r\n          dispatch(authSuccess(response.data, \"Create account successfuly!\"));\r\n          history.push(\"/sign-in\");\r\n        } else {\r\n          dispatch(authSuccess(response.data, \"Login successfuly!\"));\r\n          localStorage.setItem(\"user\", JSON.stringify(response.data));\r\n          history.push(\"/\");\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        dispatch(authFail(error.response.data));\r\n      });\r\n  };\r\n};\r\n\r\nexport const logout = () => {\r\n  localStorage.removeItem(\"user\");\r\n  return {\r\n    type: actionTypes.AUTH_LOGOUT,\r\n  };\r\n};\r\n\r\n// export const setAuthRedirectPath = (path) => {\r\n//   return {\r\n//     type: actionTypes.SET_AUTH_REDIRECT_PATH,\r\n//     path: path,\r\n//   };\r\n// };\r\n\r\nexport const authCheckState = () => {\r\n  return (dispatch) => {\r\n    const user = localStorage.getItem(\"user\");\r\n    if (!user) {\r\n      dispatch(logout());\r\n    } else {\r\n      dispatch(authSuccess(\"user\"));\r\n    }\r\n  };\r\n};\r\n\r\nexport const chooseGroup = (group) => {\r\n  return {\r\n    type: actionTypes.CHOOSE_GROUP,\r\n    group: group,\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}