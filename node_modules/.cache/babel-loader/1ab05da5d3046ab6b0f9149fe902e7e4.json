{"ast":null,"code":"import _slicedToArray from\"/home/sudo-byte/CourseHub-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useEffect,useState}from\"react\";import{Box,Grid}from\"@material-ui/core\";import{connect}from\"react-redux\";import*as actions from\"../../store/actions\";import SearchBarCustom from\"../../components/CourseList/SearchBarCustom/SearchBarCustom\";import SortButton from\"../../components/CourseList/SortButton/SortButton\";import FilterButton from\"../../components/CourseList/FilterButton/FilterButton\";import GroupButton from\"../../components/CourseList/GroupButton/GroupButton\";import CourseCardItem from\"../../components/CourseList/CourseCard/CourseCard\";import Spinner from\"../../components/UI/Spinner/Spinner\";import DataLength from\"../../components/DataDisplay/DataLength\";var Courses=function Courses(props){var courseList=props.courseList;var loading=props.loading;var onfetchCourses=props.onfetchCourses;var _useState=useState(\"all\"),_useState2=_slicedToArray(_useState,2),courseType=_useState2[0],setCourseType=_useState2[1];var _useState3=useState(\"id\"),_useState4=_slicedToArray(_useState3,2),sortBy=_useState4[0],setSortBy=_useState4[1];var _useState5=useState(\"GP08\"),_useState6=_slicedToArray(_useState5,2),group=_useState6[0],setGroup=_useState6[1];var _useState7=useState(null),_useState8=_slicedToArray(_useState7,2),keyWord=_useState8[0],setKeyWord=_useState8[1];useEffect(function(){onfetchCourses(courseType,group,keyWord);},[onfetchCourses,courseType,group,keyWord]);var handleChangeKeyWord=function handleChangeKeyWord(word){setCourseType(\"all\");setTimeout(function(){setKeyWord(word);},1500);};switch(sortBy){case\"date\":courseList=courseList.slice(0);courseList.sort(function(a,b){var x=parseInt(a.ngayTao.split(\"/\"));var y=parseInt(b.ngayTao.split(\"/\"));return x-y;});break;case\"a-z\":courseList=courseList.slice(0);courseList.sort(function(a,b){var x=a.tenKhoaHoc.toLowerCase();var y=b.tenKhoaHoc.toLowerCase();return x<y?-1:x>y?1:0;});break;case\"z-a\":courseList=courseList.slice(0);courseList.sort(function(a,b){var y=a.tenKhoaHoc.toLowerCase();var x=b.tenKhoaHoc.toLowerCase();return x<y?-1:x>y?1:0;});break;default:break;}var courseListRender=/*#__PURE__*/React.createElement(Spinner,null);if(!loading&&courseList.length>0){courseListRender=courseList.map(function(course,index){return/*#__PURE__*/React.createElement(Grid,{item:true,key:index},/*#__PURE__*/React.createElement(CourseCardItem,{course:course}));});}return/*#__PURE__*/React.createElement(Box,null,/*#__PURE__*/React.createElement(Box,{pt:5,mb:2,display:\"flex\",justifyContent:\"center\",alignItems:\"center\",flexWrap:\"wrap\"},/*#__PURE__*/React.createElement(Box,{m:1},/*#__PURE__*/React.createElement(SortButton,{sortBy:sortBy,onChangeSortBy:function onChangeSortBy(sort){return setSortBy(sort);}})),/*#__PURE__*/React.createElement(Box,{m:1},/*#__PURE__*/React.createElement(FilterButton,{courseType:courseType,onChangeIndex:function onChangeIndex(code){return setCourseType(code);}})),/*#__PURE__*/React.createElement(Box,{m:1},/*#__PURE__*/React.createElement(GroupButton,{group:group,onChangeGroup:function onChangeGroup(choosen){return setGroup(choosen);}})),/*#__PURE__*/React.createElement(Box,{m:1},/*#__PURE__*/React.createElement(SearchBarCustom,{onChangeKeyWord:handleChangeKeyWord}))),courseList&&courseList.length?/*#__PURE__*/React.createElement(Box,{display:\"flex\",justifyContent:\"center\",m:3},/*#__PURE__*/React.createElement(DataLength,{items:courseList.length,type:\"courses\"})):null,/*#__PURE__*/React.createElement(Grid,{container:true,spacing:2,justify:\"center\"},courseListRender));};var mapStateToProps=function mapStateToProps(state){return{courseList:state.courses.courseList,loading:state.courses.loading};};var mapDispatchToProps=function mapDispatchToProps(dispatch){return{onfetchCourses:function onfetchCourses(courseType,group,keyWord){return dispatch(actions.fetchCourses(courseType,group,keyWord));}};};export default connect(mapStateToProps,mapDispatchToProps)(Courses);","map":{"version":3,"sources":["/home/sudo-byte/CourseHub-master/src/containers/Courses/Courses.js"],"names":["React","useEffect","useState","Box","Grid","connect","actions","SearchBarCustom","SortButton","FilterButton","GroupButton","CourseCardItem","Spinner","DataLength","Courses","props","courseList","loading","onfetchCourses","courseType","setCourseType","sortBy","setSortBy","group","setGroup","keyWord","setKeyWord","handleChangeKeyWord","word","setTimeout","slice","sort","a","b","x","parseInt","ngayTao","split","y","tenKhoaHoc","toLowerCase","courseListRender","length","map","course","index","code","choosen","mapStateToProps","state","courses","mapDispatchToProps","dispatch","fetchCourses"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { Box, Grid } from \"@material-ui/core\";\r\nimport { connect } from \"react-redux\";\r\nimport * as actions from \"../../store/actions\";\r\n\r\nimport SearchBarCustom from \"../../components/CourseList/SearchBarCustom/SearchBarCustom\";\r\nimport SortButton from \"../../components/CourseList/SortButton/SortButton\";\r\nimport FilterButton from \"../../components/CourseList/FilterButton/FilterButton\";\r\nimport GroupButton from \"../../components/CourseList/GroupButton/GroupButton\";\r\nimport CourseCardItem from \"../../components/CourseList/CourseCard/CourseCard\";\r\nimport Spinner from \"../../components/UI/Spinner/Spinner\";\r\nimport DataLength from \"../../components/DataDisplay/DataLength\";\r\n\r\nconst Courses = (props) => {\r\n  let { courseList } = props;\r\n\r\n  const { loading } = props;\r\n  const { onfetchCourses } = props;\r\n\r\n  const [courseType, setCourseType] = useState(\"all\");\r\n  const [sortBy, setSortBy] = useState(\"id\");\r\n  const [group, setGroup] = useState(\"GP08\");\r\n  const [keyWord, setKeyWord] = useState(null);\r\n\r\n  useEffect(() => {\r\n    onfetchCourses(courseType, group, keyWord);\r\n  }, [onfetchCourses, courseType, group, keyWord]);\r\n\r\n  const handleChangeKeyWord = (word) => {\r\n    setCourseType(\"all\");\r\n    setTimeout(() => {\r\n      setKeyWord(word);\r\n    }, 1500);\r\n  };\r\n\r\n  switch (sortBy) {\r\n    case \"date\":\r\n      courseList = courseList.slice(0);\r\n      courseList.sort(function (a, b) {\r\n        var x = parseInt(a.ngayTao.split(\"/\"));\r\n        var y = parseInt(b.ngayTao.split(\"/\"));\r\n        return x - y;\r\n      });\r\n      break;\r\n    case \"a-z\":\r\n      courseList = courseList.slice(0);\r\n      courseList.sort(function (a, b) {\r\n        var x = a.tenKhoaHoc.toLowerCase();\r\n        var y = b.tenKhoaHoc.toLowerCase();\r\n        return x < y ? -1 : x > y ? 1 : 0;\r\n      });\r\n      break;\r\n    case \"z-a\":\r\n      courseList = courseList.slice(0);\r\n      courseList.sort(function (a, b) {\r\n        var y = a.tenKhoaHoc.toLowerCase();\r\n        var x = b.tenKhoaHoc.toLowerCase();\r\n        return x < y ? -1 : x > y ? 1 : 0;\r\n      });\r\n      break;\r\n\r\n    default:\r\n      break;\r\n  }\r\n\r\n  let courseListRender = <Spinner />;\r\n  if (!loading && courseList.length > 0) {\r\n    courseListRender = courseList.map((course, index) => (\r\n      <Grid item key={index}>\r\n        <CourseCardItem course={course} />\r\n      </Grid>\r\n    ));\r\n  }\r\n\r\n  return (\r\n    <Box>\r\n      <Box\r\n        pt={5}\r\n        mb={2}\r\n        display=\"flex\"\r\n        justifyContent=\"center\"\r\n        alignItems=\"center\"\r\n        flexWrap=\"wrap\"\r\n      >\r\n        <Box m={1}>\r\n          <SortButton\r\n            sortBy={sortBy}\r\n            onChangeSortBy={(sort) => setSortBy(sort)}\r\n          />\r\n        </Box>\r\n        <Box m={1}>\r\n          <FilterButton\r\n            courseType={courseType}\r\n            onChangeIndex={(code) => setCourseType(code)}\r\n          />\r\n        </Box>\r\n        <Box m={1}>\r\n          <GroupButton\r\n            group={group}\r\n            onChangeGroup={(choosen) => setGroup(choosen)}\r\n          />\r\n        </Box>\r\n        <Box m={1}>\r\n          <SearchBarCustom onChangeKeyWord={handleChangeKeyWord} />\r\n        </Box>\r\n      </Box>\r\n\r\n      {courseList && courseList.length ? (\r\n        <Box display=\"flex\" justifyContent=\"center\" m={3}>\r\n          <DataLength items={courseList.length} type={\"courses\"} />\r\n        </Box>\r\n      ) : null}\r\n\r\n      <Grid container spacing={2} justify=\"center\">\r\n        {courseListRender}\r\n      </Grid>\r\n    </Box>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    courseList: state.courses.courseList,\r\n    loading: state.courses.loading,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onfetchCourses: (courseType, group, keyWord) =>\r\n      dispatch(actions.fetchCourses(courseType, group, keyWord)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Courses);\r\n"]},"metadata":{},"sourceType":"module"}