{"ast":null,"code":"var _jsxFileName = \"/home/sudo-byte/CourseHub-master/src/components/CourseList/CourseCard/ShowcaseCard.js\";\nimport React, { useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport cx from \"clsx\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { connect } from \"react-redux\";\nimport { useSnackbar } from \"notistack\";\nimport * as actions from \"../../../store/actions\";\nimport Skeleton from \"@material-ui/lab/Skeleton\";\nimport { Card, CardMedia } from \"@material-ui/core\";\nimport { Button, Box, Avatar, Typography } from \"@material-ui/core\";\nimport { List, ListItem, ListItemIcon, ListItemText } from \"@material-ui/core\";\nimport FindInPageIcon from \"@material-ui/icons/FindInPage\";\nimport AllInclusiveIcon from \"@material-ui/icons/AllInclusive\";\nimport PhoneIphoneIcon from \"@material-ui/icons/PhoneIphone\";\nimport VerifiedUserIcon from \"@material-ui/icons/VerifiedUser\";\nimport BuildIcon from \"@material-ui/icons/Build\";\nimport { useSoftRiseShadowStyles } from \"@mui-treasury/styles/shadow/softRise\";\nimport { useSlopeCardMediaStyles } from \"@mui-treasury/styles/cardMedia/slope\";\nconst useStyles = makeStyles(() => ({\n  root: {\n    maxWidth: 310,\n    minWidth: 270,\n    margin: \"auto\"\n  },\n  content: {\n    padding: 24\n  },\n  avatar: {\n    width: 50,\n    height: 50,\n    border: \"2px solid #fff\",\n    margin: \"-48px 32px 0 auto\",\n    \"& > img\": {\n      margin: 0\n    }\n  },\n  button: {\n    display: \"block\",\n    width: \"100%\",\n    height: \"3rem\",\n    border: \"none\",\n    background: \"linear-gradient(120deg, #2980b9, #8e44ad, #2980b9)\",\n    backgroundSize: \"200%\",\n    color: \"#fff\",\n    outline: \"none\",\n    transition: \"0.5s\",\n    cursor: \"pointer\",\n    \"&:hover\": {\n      backgroundPosition: \"right\"\n    }\n  }\n}));\n\nconst ShowcaseCard = props => {\n  const cardStyles = useStyles();\n  const mediaStyles = useSlopeCardMediaStyles();\n  const shadowStyles = useSoftRiseShadowStyles();\n  const {\n    isMe,\n    error,\n    success\n  } = props;\n  const {\n    imageLink,\n    courseId,\n    onEnroll,\n    onUserClearMessage\n  } = props;\n  const user = JSON.parse(localStorage.getItem(\"user\"));\n  const {\n    enqueueSnackbar\n  } = useSnackbar();\n  useEffect(() => {\n    if (success) {\n      enqueueSnackbar(success, {\n        variant: \"success\"\n      });\n      onUserClearMessage();\n    }\n\n    if (error) {\n      enqueueSnackbar(error, {\n        variant: \"error\"\n      });\n      onUserClearMessage();\n    }\n  }, [error, success, enqueueSnackbar, onUserClearMessage]);\n  const infoList = [{\n    icon: /*#__PURE__*/React.createElement(FindInPageIcon, {\n      fontSize: \"small\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 13\n      }\n    }),\n    text: \"1 article\"\n  }, {\n    icon: /*#__PURE__*/React.createElement(AllInclusiveIcon, {\n      fontSize: \"small\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 13\n      }\n    }),\n    text: \"Full lifetime accesso\"\n  }, {\n    icon: /*#__PURE__*/React.createElement(PhoneIphoneIcon, {\n      fontSize: \"small\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 13\n      }\n    }),\n    text: \"Access on mobile and TV\"\n  }, {\n    icon: /*#__PURE__*/React.createElement(BuildIcon, {\n      fontSize: \"small\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 13\n      }\n    }),\n    text: \"SkillsFuture Credit eligible\"\n  }, {\n    icon: /*#__PURE__*/React.createElement(VerifiedUserIcon, {\n      fontSize: \"small\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 13\n      }\n    }),\n    text: \"Certificate of Completion\"\n  }];\n  return /*#__PURE__*/React.createElement(Card, {\n    className: cx(cardStyles.root, shadowStyles.root),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 5\n    }\n  }, imageLink ? /*#__PURE__*/React.createElement(CardMedia, {\n    classes: mediaStyles,\n    image: imageLink,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 9\n    }\n  }) : /*#__PURE__*/React.createElement(Skeleton, {\n    variant: \"rect\",\n    width: \"100%\",\n    height: 150,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Avatar, {\n    className: cardStyles.avatar,\n    src: \"https://i.pravatar.cc/300\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Box, {\n    mt: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    align: \"center\",\n    variant: \"h5\",\n    gutterBottom: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 9\n    }\n  }, \"Free 100%\")), user && user.accessToken ? /*#__PURE__*/React.createElement(Box, {\n    mx: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    size: \"small\",\n    onClick: () => onEnroll(courseId, isMe),\n    className: cardStyles.button,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 11\n    }\n  }, isMe ? \"Leave this course\" : \"Enroll Now\")) : /*#__PURE__*/React.createElement(Box, {\n    mx: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    component: Link,\n    to: \"/sign-in\",\n    style: {\n      textDecoration: \"none\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    size: \"small\",\n    className: cardStyles.button,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 13\n    }\n  }, \"Login to Enroll\"))), /*#__PURE__*/React.createElement(Box, {\n    mt: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    ml: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"subtitle1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 11\n    }\n  }, \"This course includes\")), /*#__PURE__*/React.createElement(List, {\n    disablePadding: true,\n    dense: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 9\n    }\n  }, infoList.map((info, index) => /*#__PURE__*/React.createElement(ListItem, {\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(ListItemIcon, {\n    style: {\n      minWidth: 32\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 15\n    }\n  }, info.icon), /*#__PURE__*/React.createElement(ListItemText, {\n    secondary: info.text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 15\n    }\n  }))))));\n};\n\nconst mapStateToProps = state => {\n  return {\n    error: state.user.error,\n    success: state.user.success,\n    isAuthenticated: state.auth.token !== null\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onEnroll: (courseId, isMe) => dispatch(actions.EnrollCourse(courseId, isMe)),\n    onUserClearMessage: () => dispatch(actions.userClearMessage())\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ShowcaseCard);","map":{"version":3,"sources":["/home/sudo-byte/CourseHub-master/src/components/CourseList/CourseCard/ShowcaseCard.js"],"names":["React","useEffect","Link","cx","makeStyles","connect","useSnackbar","actions","Skeleton","Card","CardMedia","Button","Box","Avatar","Typography","List","ListItem","ListItemIcon","ListItemText","FindInPageIcon","AllInclusiveIcon","PhoneIphoneIcon","VerifiedUserIcon","BuildIcon","useSoftRiseShadowStyles","useSlopeCardMediaStyles","useStyles","root","maxWidth","minWidth","margin","content","padding","avatar","width","height","border","button","display","background","backgroundSize","color","outline","transition","cursor","backgroundPosition","ShowcaseCard","props","cardStyles","mediaStyles","shadowStyles","isMe","error","success","imageLink","courseId","onEnroll","onUserClearMessage","user","JSON","parse","localStorage","getItem","enqueueSnackbar","variant","infoList","icon","text","accessToken","textDecoration","map","info","index","mapStateToProps","state","isAuthenticated","auth","token","mapDispatchToProps","dispatch","EnrollCourse","userClearMessage"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport cx from \"clsx\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { useSnackbar } from \"notistack\";\r\nimport * as actions from \"../../../store/actions\";\r\n\r\nimport Skeleton from \"@material-ui/lab/Skeleton\";\r\n\r\nimport { Card, CardMedia } from \"@material-ui/core\";\r\nimport { Button, Box, Avatar, Typography } from \"@material-ui/core\";\r\nimport { List, ListItem, ListItemIcon, ListItemText } from \"@material-ui/core\";\r\n\r\nimport FindInPageIcon from \"@material-ui/icons/FindInPage\";\r\nimport AllInclusiveIcon from \"@material-ui/icons/AllInclusive\";\r\nimport PhoneIphoneIcon from \"@material-ui/icons/PhoneIphone\";\r\nimport VerifiedUserIcon from \"@material-ui/icons/VerifiedUser\";\r\nimport BuildIcon from \"@material-ui/icons/Build\";\r\n\r\nimport { useSoftRiseShadowStyles } from \"@mui-treasury/styles/shadow/softRise\";\r\nimport { useSlopeCardMediaStyles } from \"@mui-treasury/styles/cardMedia/slope\";\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {\r\n    maxWidth: 310,\r\n    minWidth: 270,\r\n    margin: \"auto\",\r\n  },\r\n  content: {\r\n    padding: 24,\r\n  },\r\n  avatar: {\r\n    width: 50,\r\n    height: 50,\r\n    border: \"2px solid #fff\",\r\n    margin: \"-48px 32px 0 auto\",\r\n    \"& > img\": {\r\n      margin: 0,\r\n    },\r\n  },\r\n  button: {\r\n    display: \"block\",\r\n    width: \"100%\",\r\n    height: \"3rem\",\r\n    border: \"none\",\r\n    background: \"linear-gradient(120deg, #2980b9, #8e44ad, #2980b9)\",\r\n    backgroundSize: \"200%\",\r\n    color: \"#fff\",\r\n    outline: \"none\",\r\n    transition: \"0.5s\",\r\n    cursor: \"pointer\",\r\n\r\n    \"&:hover\": {\r\n      backgroundPosition: \"right\",\r\n    },\r\n  },\r\n}));\r\n\r\nconst ShowcaseCard = (props) => {\r\n  const cardStyles = useStyles();\r\n  const mediaStyles = useSlopeCardMediaStyles();\r\n  const shadowStyles = useSoftRiseShadowStyles();\r\n\r\n  const { isMe, error, success } = props;\r\n  const { imageLink, courseId, onEnroll, onUserClearMessage } = props;\r\n\r\n  const user = JSON.parse(localStorage.getItem(\"user\"));\r\n\r\n  const { enqueueSnackbar } = useSnackbar();\r\n\r\n  useEffect(() => {\r\n    if (success) {\r\n      enqueueSnackbar(success, { variant: \"success\" });\r\n      onUserClearMessage();\r\n    }\r\n    if (error) {\r\n      enqueueSnackbar(error, { variant: \"error\" });\r\n      onUserClearMessage();\r\n    }\r\n  }, [error, success, enqueueSnackbar, onUserClearMessage]);\r\n\r\n  const infoList = [\r\n    { icon: <FindInPageIcon fontSize=\"small\" />, text: \"1 article\" },\r\n    {\r\n      icon: <AllInclusiveIcon fontSize=\"small\" />,\r\n      text: \"Full lifetime accesso\",\r\n    },\r\n    {\r\n      icon: <PhoneIphoneIcon fontSize=\"small\" />,\r\n      text: \"Access on mobile and TV\",\r\n    },\r\n    {\r\n      icon: <BuildIcon fontSize=\"small\" />,\r\n      text: \"SkillsFuture Credit eligible\",\r\n    },\r\n    {\r\n      icon: <VerifiedUserIcon fontSize=\"small\" />,\r\n      text: \"Certificate of Completion\",\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <Card className={cx(cardStyles.root, shadowStyles.root)}>\r\n      {imageLink ? (\r\n        <CardMedia classes={mediaStyles} image={imageLink} />\r\n      ) : (\r\n        <Skeleton variant=\"rect\" width={\"100%\"} height={150} />\r\n      )}\r\n      <Avatar className={cardStyles.avatar} src={\"https://i.pravatar.cc/300\"} />\r\n\r\n      <Box mt={2}>\r\n        <Typography align=\"center\" variant=\"h5\" gutterBottom>\r\n          Free 100%\r\n        </Typography>\r\n      </Box>\r\n\r\n      {user && user.accessToken ? (\r\n        <Box mx={2}>\r\n          <Button\r\n            size=\"small\"\r\n            onClick={() => onEnroll(courseId, isMe)}\r\n            className={cardStyles.button}\r\n          >\r\n            {isMe ? \"Leave this course\" : \"Enroll Now\"}\r\n          </Button>\r\n        </Box>\r\n      ) : (\r\n        <Box mx={2}>\r\n          <Box\r\n            component={Link}\r\n            to={\"/sign-in\"}\r\n            style={{ textDecoration: \"none\" }}\r\n          >\r\n            <Button size=\"small\" className={cardStyles.button}>\r\n              Login to Enroll\r\n            </Button>\r\n          </Box>\r\n        </Box>\r\n      )}\r\n\r\n      <Box mt={2}>\r\n        <Box ml={2}>\r\n          <Typography variant=\"subtitle1\">This course includes</Typography>\r\n        </Box>\r\n        <List disablePadding dense>\r\n          {infoList.map((info, index) => (\r\n            <ListItem key={index}>\r\n              <ListItemIcon style={{ minWidth: 32 }}>{info.icon}</ListItemIcon>\r\n              <ListItemText secondary={info.text} />\r\n            </ListItem>\r\n          ))}\r\n        </List>\r\n      </Box>\r\n    </Card>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    error: state.user.error,\r\n    success: state.user.success,\r\n    isAuthenticated: state.auth.token !== null,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onEnroll: (courseId, isMe) =>\r\n      dispatch(actions.EnrollCourse(courseId, isMe)),\r\n    onUserClearMessage: () => dispatch(actions.userClearMessage()),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ShowcaseCard);\r\n"]},"metadata":{},"sourceType":"module"}