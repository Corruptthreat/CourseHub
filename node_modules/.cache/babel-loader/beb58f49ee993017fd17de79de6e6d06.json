{"ast":null,"code":"import _objectWithoutProperties from\"/home/sudo-byte/CourseHub-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";import _slicedToArray from\"/home/sudo-byte/CourseHub-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useEffect,useState}from\"react\";import{connect}from\"react-redux\";import{useSnackbar}from\"notistack\";import{Formik,Form}from\"formik\";import cx from\"clsx\";import{makeStyles}from\"@material-ui/core/styles\";import Card from\"@material-ui/core/Card\";import CardContent from\"@material-ui/core/CardContent\";import{useSoftRiseShadowStyles}from\"@mui-treasury/styles/shadow/softRise\";import Rating from\"../Rating/Rating\";import{Box,Button,Typography,CardMedia,Grid}from\"@material-ui/core\";import*as Yup from\"yup\";import*as actions from\"../../store/actions\";import{DropzoneArea}from\"material-ui-dropzone\";import DatePicker from\"../DatePicker/DatePicker\";import{groupItems}from\"./InputCustom/GroupList\";import FormikField from\"./InputCustom/FormikField\";import FormikSelect from\"./InputCustom/FormikSelect\";var useStyles=makeStyles(function(theme){return{button:{marginTop:\"2rem\",display:\"block\",width:\"100%\",height:\"3rem\",border:\"none\",background:\"linear-gradient(120deg, #2980b9, #8e44ad, #2980b9)\",backgroundSize:\"200%\",color:\"#fff\",outline:\"none\",transition:\"0.5s\",cursor:\"pointer\",\"&:hover\":{backgroundPosition:\"right\"}},formItem:{\"& > *\":{margin:theme.spacing(1)}},formControl:{margin:theme.spacing(1)},input:{display:\"none\"},media:{height:0,paddingTop:\"56.25%\"// 16:9\n}};});var AddCourses=function AddCourses(props){var classes=useStyles();var preview=props.preview,group=props.group,courseType=props.courseType,isEdit=props.isEdit,courseIndex=props.courseIndex,selectedCourse=props.selectedCourse,loading=props.loading,success=props.success,error=props.error,tabIndex=props.tabIndex;var onAddCourse=props.onAddCourse;var user=JSON.parse(localStorage.getItem(\"user\"));var _useState=useState(null),_useState2=_slicedToArray(_useState,2),selectedImage=_useState2[0],setSelectedImage=_useState2[1];var _useState3=useState(new Date()),_useState4=_slicedToArray(_useState3,2),selectedDate=_useState4[0],setSelectedDate=_useState4[1];var _useSnackbar=useSnackbar(),enqueueSnackbar=_useSnackbar.enqueueSnackbar;var cardStyles=useStyles();var shadowStyles=useSoftRiseShadowStyles();useEffect(function(){if(selectedCourse&&selectedCourse.ngayTao){var arr=selectedCourse.ngayTao.split(\"/\");var dd=arr[0];var mm=arr[1];var yyyy=arr[2];setSelectedDate(\"\".concat(yyyy,\"-\").concat(mm,\"-\").concat(dd));}},[selectedCourse]);useEffect(function(){if(error){enqueueSnackbar(error,{variant:\"error\",anchorOrigin:{vertical:\"bottom\",horizontal:\"right\"}});}else if(success){enqueueSnackbar(success,{variant:\"success\",anchorOrigin:{vertical:\"bottom\",horizontal:\"right\"}});}},[error,success,enqueueSnackbar]);var initialValues={courseId:\"\",urlName:\"\",courseName:\"\",detail:\"\",views:0,rate:0,imageUrl:\"\",group:group,dateCreated:selectedDate,courseCode:\"\",creator:user?user.taiKhoan:\"\"};if(isEdit&&selectedCourse||preview&&selectedCourse){initialValues={courseId:selectedCourse.maKhoaHoc,urlName:selectedCourse.biDanh,courseName:selectedCourse.tenKhoaHoc,detail:selectedCourse.moTa,views:selectedCourse.luotXem,rate:selectedCourse.danhGia,imageUrl:selectedCourse.hinhAnh,group:selectedCourse.maNhom,dateCreated:selectedDate,courseCode:selectedCourse.danhMucKhoaHoc.maDanhMucKhoahoc,creator:selectedCourse.nguoiTao.taiKhoan};}var validationSchema=Yup.object().shape({courseId:Yup.string().required(\"Must enter a courseId\"),urlName:Yup.string(),courseName:Yup.string().required(\"Must enter a courseName\"),detail:Yup.string().required(\"Detail is required\"),views:Yup.number(),imageUrl:Yup.string(),group:Yup.string().required(\"Group is required\"),dateCreated:Yup.date().required(\"Must enter a created day\"),creator:Yup.string().required(\"Must input creator\"),courseCode:Yup.string().required(\"Must input courseIndex\")});var onSubmit=function onSubmit(values,_ref){var setSubmitting=_ref.setSubmitting,resetForm=_ref.resetForm;onAddCourse(values,selectedImage,isEdit,group,courseType,tabIndex,selectedDate);resetForm();setSubmitting(false);};return/*#__PURE__*/React.createElement(Card,{className:cx(cardStyles.root,shadowStyles.root)},/*#__PURE__*/React.createElement(CardContent,{className:classes.content},preview?null:/*#__PURE__*/React.createElement(Box,{mb:5},/*#__PURE__*/React.createElement(Typography,{variant:\"h4\",align:\"center\"},isEdit?\"EDIT COURSE\":\"ADD COURSE\")),/*#__PURE__*/React.createElement(Formik,{initialValues:initialValues,validationSchema:validationSchema,onSubmit:onSubmit},function(_ref2){var submitForm=_ref2.submitForm,dirty=_ref2.dirty,isValid=_ref2.isValid,values=_ref2.values,props=_objectWithoutProperties(_ref2,[\"submitForm\",\"dirty\",\"isValid\",\"values\"]);// console.log(values);\nreturn/*#__PURE__*/React.createElement(Form,{style:{overflow:\"hidden\"}},/*#__PURE__*/React.createElement(Box,{mb:2,display:\"flex\",flexWrap:\"nowrap\"},/*#__PURE__*/React.createElement(Box,{flexGrow:1,alignSelf:\"flex-end\",mr:1},/*#__PURE__*/React.createElement(Card,{style:{height:\"100% !important\",padding:0}},/*#__PURE__*/React.createElement(Box,null,values.imageUrl?/*#__PURE__*/React.createElement(CardMedia,{className:classes.media,image:values.imageUrl}):/*#__PURE__*/React.createElement(Box,{m:1,p:1,border:1,height:176,display:\"flex\",alignItems:\"center\",justifyContent:\"center\",borderColor:\"grey.400\"},/*#__PURE__*/React.createElement(Typography,{align:\"center\",color:\"textSecondary\"},\"Please upload an image for preview\"))),/*#__PURE__*/React.createElement(Box,{m:1},/*#__PURE__*/React.createElement(Rating,null)),/*#__PURE__*/React.createElement(Box,{mb:1},/*#__PURE__*/React.createElement(FormikField,{label:\"Course Name\",name:\"courseName\",disabled:isEdit||preview})))),/*#__PURE__*/React.createElement(Box,{flexGrow:1,alignSelf:\"flex-end\"},/*#__PURE__*/React.createElement(Card,{style:{height:\"100%\",padding:0}},/*#__PURE__*/React.createElement(Grid,{container:true,direction:\"column\",justify:\"space-between\",alignItems:\"stretch\"},/*#__PURE__*/React.createElement(FormikField,{label:\"Course ID\",name:\"courseId\",disabled:isEdit||preview}),/*#__PURE__*/React.createElement(FormikField,{label:\"Creator\",name:\"creator\",disabled:preview}),/*#__PURE__*/React.createElement(FormikField,{label:\"Views\",name:\"views\",disabled:preview}),/*#__PURE__*/React.createElement(Box,{mx:1},/*#__PURE__*/React.createElement(DatePicker,{disabled:preview,value:selectedDate,pickSelectedDate:function pickSelectedDate(date){return setSelectedDate(date);}})))))),/*#__PURE__*/React.createElement(Card,{style:{padding:0}},/*#__PURE__*/React.createElement(FormikField,{label:\"Description\",name:\"detail\",disabled:preview}),/*#__PURE__*/React.createElement(Box,{display:\"flex\",flexWrap:\"wrap\"},/*#__PURE__*/React.createElement(Box,{flexGrow:1},/*#__PURE__*/React.createElement(FormikSelect,{label:\"Course Type\",name:\"courseCode\",items:courseIndex,disabled:preview})),/*#__PURE__*/React.createElement(Box,{flexGrow:1},/*#__PURE__*/React.createElement(FormikSelect,{label:\"Group\",name:\"group\",items:groupItems,disabled:preview}))),preview?null:/*#__PURE__*/React.createElement(Box,{m:1},/*#__PURE__*/React.createElement(DropzoneArea,{filesLimit:1,showAlerts:false,acceptedFiles:[\"image/*\"],dropzoneText:\"Drag and drop an image here or click\",onChange:function onChange(image){return setSelectedImage(image[0]);}}))),preview?null:/*#__PURE__*/React.createElement(Box,{align:\"center\",mx:1},/*#__PURE__*/React.createElement(Button,{variant:\"contained\",color:\"primary\",disabled:loading||!isValid,onClick:submitForm,className:classes.button},\"Submit\")));})));};var mapStateToProps=function mapStateToProps(state){return{group:state.auth.group,courseType:state.coursesManager.courseType,courseIndex:state.courses.courseIndex,error:state.coursesManager.error,success:state.coursesManager.success,loading:state.coursesManager.loading,isEdit:state.coursesManager.isEdit,tabIndex:state.coursesManager.tabIndex,selectedCourse:state.coursesManager.selectedCourse};};var mapDispatchToProps=function mapDispatchToProps(dispatch){return{onAddCourse:function onAddCourse(values,selectedImage,isEdit,group,courseType,tabIndex,selectedDate){return dispatch(actions.addCourse(values,selectedImage,isEdit,group,courseType,tabIndex,selectedDate));}};};export default connect(mapStateToProps,mapDispatchToProps)(AddCourses);","map":{"version":3,"sources":["/home/sudo-byte/CourseHub-master/src/components/Courses/AddCourses.js"],"names":["React","useEffect","useState","connect","useSnackbar","Formik","Form","cx","makeStyles","Card","CardContent","useSoftRiseShadowStyles","Rating","Box","Button","Typography","CardMedia","Grid","Yup","actions","DropzoneArea","DatePicker","groupItems","FormikField","FormikSelect","useStyles","theme","button","marginTop","display","width","height","border","background","backgroundSize","color","outline","transition","cursor","backgroundPosition","formItem","margin","spacing","formControl","input","media","paddingTop","AddCourses","props","classes","preview","group","courseType","isEdit","courseIndex","selectedCourse","loading","success","error","tabIndex","onAddCourse","user","JSON","parse","localStorage","getItem","selectedImage","setSelectedImage","Date","selectedDate","setSelectedDate","enqueueSnackbar","cardStyles","shadowStyles","ngayTao","arr","split","dd","mm","yyyy","variant","anchorOrigin","vertical","horizontal","initialValues","courseId","urlName","courseName","detail","views","rate","imageUrl","dateCreated","courseCode","creator","taiKhoan","maKhoaHoc","biDanh","tenKhoaHoc","moTa","luotXem","danhGia","hinhAnh","maNhom","danhMucKhoaHoc","maDanhMucKhoahoc","nguoiTao","validationSchema","object","shape","string","required","number","date","onSubmit","values","setSubmitting","resetForm","root","content","submitForm","dirty","isValid","overflow","padding","image","mapStateToProps","state","auth","coursesManager","courses","mapDispatchToProps","dispatch","addCourse"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { useSnackbar } from \"notistack\";\r\nimport { Formik, Form } from \"formik\";\r\n\r\nimport cx from \"clsx\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nimport Card from \"@material-ui/core/Card\";\r\n\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\n\r\nimport { useSoftRiseShadowStyles } from \"@mui-treasury/styles/shadow/softRise\";\r\n\r\nimport Rating from \"../Rating/Rating\";\r\n\r\nimport { Box, Button, Typography, CardMedia, Grid } from \"@material-ui/core\";\r\n\r\nimport * as Yup from \"yup\";\r\nimport * as actions from \"../../store/actions\";\r\nimport { DropzoneArea } from \"material-ui-dropzone\";\r\nimport DatePicker from \"../DatePicker/DatePicker\";\r\n\r\nimport { groupItems } from \"./InputCustom/GroupList\";\r\nimport FormikField from \"./InputCustom/FormikField\";\r\nimport FormikSelect from \"./InputCustom/FormikSelect\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  button: {\r\n    marginTop: \"2rem\",\r\n    display: \"block\",\r\n    width: \"100%\",\r\n    height: \"3rem\",\r\n    border: \"none\",\r\n    background: \"linear-gradient(120deg, #2980b9, #8e44ad, #2980b9)\",\r\n    backgroundSize: \"200%\",\r\n    color: \"#fff\",\r\n    outline: \"none\",\r\n    transition: \"0.5s\",\r\n    cursor: \"pointer\",\r\n\r\n    \"&:hover\": {\r\n      backgroundPosition: \"right\",\r\n    },\r\n  },\r\n  formItem: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n    },\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  input: {\r\n    display: \"none\",\r\n  },\r\n  media: {\r\n    height: 0,\r\n    paddingTop: \"56.25%\", // 16:9\r\n  },\r\n}));\r\n\r\nconst AddCourses = (props) => {\r\n  const classes = useStyles();\r\n  const {\r\n    preview,\r\n    group,\r\n    courseType,\r\n    isEdit,\r\n    courseIndex,\r\n    selectedCourse,\r\n    loading,\r\n    success,\r\n    error,\r\n    tabIndex,\r\n  } = props;\r\n  const { onAddCourse } = props;\r\n\r\n  const user = JSON.parse(localStorage.getItem(\"user\"));\r\n  const [selectedImage, setSelectedImage] = useState(null);\r\n\r\n  const [selectedDate, setSelectedDate] = useState(new Date());\r\n\r\n  const { enqueueSnackbar } = useSnackbar();\r\n\r\n  const cardStyles = useStyles();\r\n  const shadowStyles = useSoftRiseShadowStyles();\r\n\r\n  useEffect(() => {\r\n    if (selectedCourse && selectedCourse.ngayTao) {\r\n      const arr = selectedCourse.ngayTao.split(\"/\");\r\n      const dd = arr[0];\r\n      const mm = arr[1];\r\n      const yyyy = arr[2];\r\n      setSelectedDate(`${yyyy}-${mm}-${dd}`);\r\n    }\r\n  }, [selectedCourse]);\r\n\r\n  useEffect(() => {\r\n    if (error) {\r\n      enqueueSnackbar(error, {\r\n        variant: \"error\",\r\n        anchorOrigin: {\r\n          vertical: \"bottom\",\r\n          horizontal: \"right\",\r\n        },\r\n      });\r\n    } else if (success) {\r\n      enqueueSnackbar(success, {\r\n        variant: \"success\",\r\n        anchorOrigin: {\r\n          vertical: \"bottom\",\r\n          horizontal: \"right\",\r\n        },\r\n      });\r\n    }\r\n  }, [error, success, enqueueSnackbar]);\r\n\r\n  let initialValues = {\r\n    courseId: \"\",\r\n    urlName: \"\",\r\n    courseName: \"\",\r\n    detail: \"\",\r\n    views: 0,\r\n    rate: 0,\r\n    imageUrl: \"\",\r\n    group: group,\r\n    dateCreated: selectedDate,\r\n    courseCode: \"\",\r\n    creator: user ? user.taiKhoan : \"\",\r\n  };\r\n\r\n  if ((isEdit && selectedCourse) || (preview && selectedCourse)) {\r\n    initialValues = {\r\n      courseId: selectedCourse.maKhoaHoc,\r\n      urlName: selectedCourse.biDanh,\r\n      courseName: selectedCourse.tenKhoaHoc,\r\n      detail: selectedCourse.moTa,\r\n      views: selectedCourse.luotXem,\r\n      rate: selectedCourse.danhGia,\r\n      imageUrl: selectedCourse.hinhAnh,\r\n      group: selectedCourse.maNhom,\r\n      dateCreated: selectedDate,\r\n      courseCode: selectedCourse.danhMucKhoaHoc.maDanhMucKhoahoc,\r\n      creator: selectedCourse.nguoiTao.taiKhoan,\r\n    };\r\n  }\r\n\r\n  let validationSchema = Yup.object().shape({\r\n    courseId: Yup.string().required(\"Must enter a courseId\"),\r\n    urlName: Yup.string(),\r\n    courseName: Yup.string().required(\"Must enter a courseName\"),\r\n    detail: Yup.string().required(\"Detail is required\"),\r\n    views: Yup.number(),\r\n    imageUrl: Yup.string(),\r\n    group: Yup.string().required(\"Group is required\"),\r\n    dateCreated: Yup.date().required(\"Must enter a created day\"),\r\n    creator: Yup.string().required(\"Must input creator\"),\r\n    courseCode: Yup.string().required(\"Must input courseIndex\"),\r\n  });\r\n\r\n  const onSubmit = (values, { setSubmitting, resetForm }) => {\r\n    onAddCourse(\r\n      values,\r\n      selectedImage,\r\n      isEdit,\r\n      group,\r\n      courseType,\r\n      tabIndex,\r\n      selectedDate\r\n    );\r\n    resetForm();\r\n    setSubmitting(false);\r\n  };\r\n\r\n  return (\r\n    <Card className={cx(cardStyles.root, shadowStyles.root)}>\r\n      <CardContent className={classes.content}>\r\n        {preview ? null : (\r\n          <Box mb={5}>\r\n            <Typography variant=\"h4\" align=\"center\">\r\n              {isEdit ? \"EDIT COURSE\" : \"ADD COURSE\"}\r\n            </Typography>\r\n          </Box>\r\n        )}\r\n\r\n        <Formik\r\n          initialValues={initialValues}\r\n          validationSchema={validationSchema}\r\n          onSubmit={onSubmit}\r\n        >\r\n          {({ submitForm, dirty, isValid, values, ...props }) => {\r\n            // console.log(values);\r\n\r\n            return (\r\n              <Form style={{ overflow: \"hidden\" }}>\r\n                <Box mb={2} display={\"flex\"} flexWrap=\"nowrap\">\r\n                  <Box flexGrow={1} alignSelf=\"flex-end\" mr={1}>\r\n                    <Card style={{ height: \"100% !important\", padding: 0 }}>\r\n                      <Box>\r\n                        {values.imageUrl ? (\r\n                          <CardMedia\r\n                            className={classes.media}\r\n                            image={values.imageUrl}\r\n                          />\r\n                        ) : (\r\n                          <Box\r\n                            m={1}\r\n                            p={1}\r\n                            border={1}\r\n                            height={176}\r\n                            display={\"flex\"}\r\n                            alignItems=\"center\"\r\n                            justifyContent=\"center\"\r\n                            borderColor=\"grey.400\"\r\n                          >\r\n                            <Typography align=\"center\" color=\"textSecondary\">\r\n                              Please upload an image for preview\r\n                            </Typography>\r\n                          </Box>\r\n                        )}\r\n                      </Box>\r\n                      <Box m={1}>\r\n                        <Rating />\r\n                      </Box>\r\n                      <Box mb={1}>\r\n                        <FormikField\r\n                          label=\"Course Name\"\r\n                          name=\"courseName\"\r\n                          disabled={isEdit || preview}\r\n                        />\r\n                      </Box>\r\n                    </Card>\r\n                  </Box>\r\n\r\n                  <Box flexGrow={1} alignSelf=\"flex-end\">\r\n                    <Card style={{ height: \"100%\", padding: 0 }}>\r\n                      <Grid\r\n                        container\r\n                        direction=\"column\"\r\n                        justify=\"space-between\"\r\n                        alignItems=\"stretch\"\r\n                      >\r\n                        <FormikField\r\n                          label=\"Course ID\"\r\n                          name=\"courseId\"\r\n                          disabled={isEdit || preview}\r\n                        />\r\n                        <FormikField\r\n                          label=\"Creator\"\r\n                          name=\"creator\"\r\n                          disabled={preview}\r\n                        />\r\n                        <FormikField\r\n                          label=\"Views\"\r\n                          name=\"views\"\r\n                          disabled={preview}\r\n                        />\r\n                        <Box mx={1}>\r\n                          <DatePicker\r\n                            disabled={preview}\r\n                            value={selectedDate}\r\n                            pickSelectedDate={(date) => setSelectedDate(date)}\r\n                          />\r\n                        </Box>\r\n                      </Grid>\r\n                    </Card>\r\n                  </Box>\r\n                </Box>\r\n\r\n                <Card style={{ padding: 0 }}>\r\n                  <FormikField\r\n                    label=\"Description\"\r\n                    name=\"detail\"\r\n                    disabled={preview}\r\n                  />\r\n                  <Box display={\"flex\"} flexWrap=\"wrap\">\r\n                    <Box flexGrow={1}>\r\n                      <FormikSelect\r\n                        label=\"Course Type\"\r\n                        name=\"courseCode\"\r\n                        items={courseIndex}\r\n                        disabled={preview}\r\n                      />\r\n                    </Box>\r\n                    <Box flexGrow={1}>\r\n                      <FormikSelect\r\n                        label=\"Group\"\r\n                        name=\"group\"\r\n                        items={groupItems}\r\n                        disabled={preview}\r\n                      />\r\n                    </Box>\r\n                  </Box>\r\n\r\n                  {/* {preview ? null : (\r\n                    <Box m={1}>\r\n                      <FormikFieldIcon label=\"Image URL\" name=\"imageUrl\" />\r\n                    </Box>\r\n                  )} */}\r\n\r\n                  {preview ? null : (\r\n                    <Box m={1}>\r\n                      <DropzoneArea\r\n                        filesLimit={1}\r\n                        showAlerts={false}\r\n                        acceptedFiles={[\"image/*\"]}\r\n                        dropzoneText={\"Drag and drop an image here or click\"}\r\n                        onChange={(image) => setSelectedImage(image[0])}\r\n                      />\r\n                    </Box>\r\n                  )}\r\n                </Card>\r\n\r\n                {preview ? null : (\r\n                  <Box align=\"center\" mx={1}>\r\n                    <Button\r\n                      variant=\"contained\"\r\n                      color=\"primary\"\r\n                      disabled={loading || !isValid}\r\n                      onClick={submitForm}\r\n                      className={classes.button}\r\n                    >\r\n                      Submit\r\n                    </Button>\r\n                  </Box>\r\n                )}\r\n              </Form>\r\n            );\r\n          }}\r\n        </Formik>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    group: state.auth.group,\r\n    courseType: state.coursesManager.courseType,\r\n    courseIndex: state.courses.courseIndex,\r\n    error: state.coursesManager.error,\r\n    success: state.coursesManager.success,\r\n    loading: state.coursesManager.loading,\r\n    isEdit: state.coursesManager.isEdit,\r\n    tabIndex: state.coursesManager.tabIndex,\r\n    selectedCourse: state.coursesManager.selectedCourse,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onAddCourse: (\r\n      values,\r\n      selectedImage,\r\n      isEdit,\r\n      group,\r\n      courseType,\r\n      tabIndex,\r\n      selectedDate\r\n    ) =>\r\n      dispatch(\r\n        actions.addCourse(\r\n          values,\r\n          selectedImage,\r\n          isEdit,\r\n          group,\r\n          courseType,\r\n          tabIndex,\r\n          selectedDate\r\n        )\r\n      ),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AddCourses);\r\n"]},"metadata":{},"sourceType":"module"}