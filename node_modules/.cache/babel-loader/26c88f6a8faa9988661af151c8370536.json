{"ast":null,"code":"import _slicedToArray from\"/home/sudo-byte/CourseHub-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _objectWithoutProperties from\"/home/sudo-byte/CourseHub-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";import React,{Fragment,useEffect}from\"react\";import{connect}from\"react-redux\";import{Formik,Form,Field,useField}from\"formik\";import{Link}from\"react-router-dom\";import{makeStyles}from\"@material-ui/core/styles\";import{Typography,Box,CssBaseline,FormGroup}from\"@material-ui/core\";import{NativeSelect}from\"@material-ui/core\";import{useSnackbar}from\"notistack\";import*as Yup from\"yup\";import*as actions from\"../../store/actions\";var useStyles=makeStyles(function(theme){return{container:{minHeight:\"100vh\",background:\"linear-gradient(120deg, #2980b9, #8e44ad)\"},loginForm:{width:\"20rem\",background:\"#f1f1f1\",minHeight:\"35rem\",padding:\"0 2rem\",borderRadius:\"1rem\",position:\"absolute\",left:\"50%\",top:\"50%\",transform:\"translate(-50%, -50%)\"},formItem:{width:\"100%\",position:\"relative\",height:\"3rem\",margin:\"0.2rem 0\",overflow:\"hidden\",\"& input\":{width:\"100%\",height:\"100%\",color:\"#333\",outline:\"none\",border:\"none\",background:\"none\",padding:\"2rem 0\",\"&:focus+label span, &:valid+label span\":{transform:\"translateY(-90%)\",color:\"#adadad\",fontSize:\"0.9rem\"},\"&:focus+label::after, &:valid+label::after\":{transform:\"translateX(0)\"}},\"& label\":{position:\"absolute\",bottom:0,left:0,width:\"100%\",height:\"100%\",pointerEvents:\"none\",borderBottom:\"1px solid #adadad\",\"&:after\":{content:'\"\"',position:\"absolute\",left:0,bottom:\"-0.15rem\",width:\"100%\",height:\"100%\",borderBottom:\"3px solid #2980b9\",borderImage:\"linear-gradient(120deg, #2980b9, #8e44ad) 1 round\",transform:\"translateX(-100%)\",transition:\"transform 0.6s ease\"},\"& span\":{position:\"absolute\",bottom:\"0.3rem\",left:0,color:\"#adadad\",transition:\"all 0.3s ease\"}}},logbtn:{marginTop:\"2rem\",display:\"block\",width:\"100%\",height:\"3rem\",border:\"none\",borderRadius:\"3px\",background:\"linear-gradient(120deg, #2980b9, #8e44ad, #2980b9)\",backgroundSize:\"200%\",color:\"#fff\",outline:\"none\",transition:\"0.5s\",cursor:\"pointer\",\"&:hover\":{backgroundPosition:\"right\"}},bottomText:{textAlign:\"center\",fontSize:\"0.9rem\"},link:{textDecoration:\"none\"}};});var CustomInput=function CustomInput(_ref){var label=_ref.label,props=_objectWithoutProperties(_ref,[\"label\"]);var classes=useStyles();var _useField=useField(props),_useField2=_slicedToArray(_useField,2),field=_useField2[0],meta=_useField2[1];var _useSnackbar=useSnackbar(),enqueueSnackbar=_useSnackbar.enqueueSnackbar;useEffect(function(){if(meta.touched&&meta.error){enqueueSnackbar(meta.error,{preventDuplicate:true,variant:\"info\"});}},[meta,enqueueSnackbar]);return/*#__PURE__*/React.createElement(Fragment,null,/*#__PURE__*/React.createElement(Box,{className:classes.formItem},/*#__PURE__*/React.createElement(Typography,Object.assign({component:Field,required:true},field,props)),/*#__PURE__*/React.createElement(Typography,{component:\"label\",htmlFor:props.id||props.name},/*#__PURE__*/React.createElement(\"span\",null,label))));};export var Auth=function Auth(props){var classes=useStyles();var error=props.error,success=props.success;var onAuth=props.onAuth,onMessageReset=props.onMessageReset,history=props.history,match=props.match;var isSignUp=match&&match.url===\"/sign-up\";var _useSnackbar2=useSnackbar(),enqueueSnackbar=_useSnackbar2.enqueueSnackbar;var initialValues={username:\"\",password:\"\"};var validationSchema=Yup.object().shape({username:Yup.string().min(3,\"Name must be at least 3 characters\").max(15,\"Name must be 15 characters or less\").required(\"Must enter a name\"),password:Yup.string().min(3,\"Password must be at least 3 characters\").required(\"Password is required\")});if(isSignUp){initialValues={username:\"\",password:\"\",confirmPassword:\"\",name:\"\",phone:\"\",group:\"GP08\",email:\"\"};validationSchema=Yup.object().shape({username:Yup.string().min(3,\"Username must be at least 3 characters\").max(15,\"Username must be 15 characters or less\").required(\"Must enter a username\"),password:Yup.string().min(3,\"Password must be at least 3 characters\").required(\"Password is required\"),confirmPassword:Yup.string().oneOf([Yup.ref(\"password\"),null],\"Passwords must match\").required(\"Confirm Password is required\"),name:Yup.string().min(3,\"Name must be at least 3 characters\").max(15,\"Name must be 15 characters or less\").required(\"Must enter a name\"),group:Yup.string().required(\"Group is required\"),phone:Yup.number().min(10,\"Phone number must be at least 10 characters\").required(\"Must enter a phone number\"),email:Yup.string().email(\"Must be a valid email address\").required(\"Must enter an email\")});}useEffect(function(){if(error){enqueueSnackbar(error,{variant:\"error\"});}else if(success){enqueueSnackbar(success,{variant:\"success\"});}onMessageReset();},[error,success,enqueueSnackbar,onMessageReset]);var onSubmit=function onSubmit(values,_ref2){var setSubmitting=_ref2.setSubmitting;onAuth(values,history,isSignUp);setSubmitting(false);};return/*#__PURE__*/React.createElement(Box,{className:classes.container},/*#__PURE__*/React.createElement(CssBaseline,null),/*#__PURE__*/React.createElement(Formik,{initialValues:initialValues,validationSchema:validationSchema,onSubmit:onSubmit},function(props){return/*#__PURE__*/React.createElement(Form,{className:classes.loginForm},/*#__PURE__*/React.createElement(Box,{mt:isSignUp?5:10,mb:isSignUp?3:5},/*#__PURE__*/React.createElement(Typography,{variant:\"h3\",align:\"center\"},isSignUp?\"Sign Up\":\"Login\")),/*#__PURE__*/React.createElement(FormGroup,null,/*#__PURE__*/React.createElement(CustomInput,{label:\"Username\",name:\"username\",type:\"text\"}),/*#__PURE__*/React.createElement(CustomInput,{label:\"Password\",name:\"password\",type:\"password\"})),isSignUp?/*#__PURE__*/React.createElement(FormGroup,null,/*#__PURE__*/React.createElement(CustomInput,{label:\"Confirm Password\",name:\"confirmPassword\",type:\"password\"}),/*#__PURE__*/React.createElement(CustomInput,{label:\"Name\",name:\"name\",type:\"text\"}),/*#__PURE__*/React.createElement(CustomInput,{label:\"Phone\",name:\"phone\",type:\"text\"}),/*#__PURE__*/React.createElement(CustomInput,{label:\"Email\",name:\"email\",type:\"email\"}),/*#__PURE__*/React.createElement(NativeSelect,{value:props.values.group,onChange:props.handleChange,onBlur:props.handleBlur,name:\"group\",style:{marginTop:16}},/*#__PURE__*/React.createElement(\"option\",{value:\"GP01\"},\"Group 01\"),/*#__PURE__*/React.createElement(\"option\",{value:\"GP02\"},\"Group 02\"),/*#__PURE__*/React.createElement(\"option\",{value:\"GP03\"},\"Group 03\"),/*#__PURE__*/React.createElement(\"option\",{value:\"GP04\"},\"Group 04\"),/*#__PURE__*/React.createElement(\"option\",{value:\"GP05\"},\"Group 05\"),/*#__PURE__*/React.createElement(\"option\",{value:\"GP06\"},\"Group 06\"),/*#__PURE__*/React.createElement(\"option\",{value:\"GP07\"},\"Group 07\"),/*#__PURE__*/React.createElement(\"option\",{value:\"GP08\"},\"Group 08\"),/*#__PURE__*/React.createElement(\"option\",{value:\"GP09\"},\"Group 09\"),/*#__PURE__*/React.createElement(\"option\",{value:\"GP10\"},\"Group 10\"),/*#__PURE__*/React.createElement(\"option\",{value:\"GP11\"},\"Group 11\"),/*#__PURE__*/React.createElement(\"option\",{value:\"GP12\"},\"Group 12\"),/*#__PURE__*/React.createElement(\"option\",{value:\"GP13\"},\"Group 13\"),/*#__PURE__*/React.createElement(\"option\",{value:\"GP14\"},\"Group 14\"),/*#__PURE__*/React.createElement(\"option\",{value:\"GP15\"},\"Group 15\"))):null,/*#__PURE__*/React.createElement(Typography,{component:\"button\",type:\"submit\",className:classes.logbtn},props.isSubmitting?\"Loading...\":isSignUp?\"Sign Up\":\"Login\"),/*#__PURE__*/React.createElement(Box,{mt:isSignUp?5:10,mb:isSignUp?5:0,className:classes.bottomText},/*#__PURE__*/React.createElement(Typography,{component:\"p\"},isSignUp?\"Already have an account?\":\"Don't have an account?\",\" \",isSignUp?/*#__PURE__*/React.createElement(Link,{to:\"/sign-in\",className:classes.link},\"Sign In\"):/*#__PURE__*/React.createElement(Link,{to:\"/sign-up\",className:classes.link},\"Sign Up\"))));}));};var mapStateToProps=function mapStateToProps(state){return{error:state.auth.error,success:state.auth.success// loading: state.auth.loading,\n// isAuthenticated: state.auth.token !== null,\n// authRedirectPath: state.auth.authRedirectPath,\n};};var mapDispatchToProps=function mapDispatchToProps(dispatch){return{onAuth:function onAuth(values,history,isSignUp){return dispatch(actions.auth(values,history,isSignUp));},onMessageReset:function onMessageReset(){return dispatch(actions.authStart());}};};export default connect(mapStateToProps,mapDispatchToProps)(Auth);","map":{"version":3,"sources":["/home/sudo-byte/CourseHub-master/src/containers/Auth/Auth.js"],"names":["React","Fragment","useEffect","connect","Formik","Form","Field","useField","Link","makeStyles","Typography","Box","CssBaseline","FormGroup","NativeSelect","useSnackbar","Yup","actions","useStyles","theme","container","minHeight","background","loginForm","width","padding","borderRadius","position","left","top","transform","formItem","height","margin","overflow","color","outline","border","fontSize","bottom","pointerEvents","borderBottom","content","borderImage","transition","logbtn","marginTop","display","backgroundSize","cursor","backgroundPosition","bottomText","textAlign","link","textDecoration","CustomInput","label","props","classes","field","meta","enqueueSnackbar","touched","error","preventDuplicate","variant","id","name","Auth","success","onAuth","onMessageReset","history","match","isSignUp","url","initialValues","username","password","validationSchema","object","shape","string","min","max","required","confirmPassword","phone","group","email","oneOf","ref","number","onSubmit","values","setSubmitting","handleChange","handleBlur","isSubmitting","mapStateToProps","state","auth","mapDispatchToProps","dispatch","authStart"],"mappings":"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","sourcesContent":["import React, { Fragment, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Formik, Form, Field, useField } from \"formik\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Typography, Box, CssBaseline, FormGroup } from \"@material-ui/core\";\r\nimport { NativeSelect } from \"@material-ui/core\";\r\n\r\nimport { useSnackbar } from \"notistack\";\r\n\r\nimport * as Yup from \"yup\";\r\nimport * as actions from \"../../store/actions\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  container: {\r\n    minHeight: \"100vh\",\r\n    background: \"linear-gradient(120deg, #2980b9, #8e44ad)\",\r\n  },\r\n\r\n  loginForm: {\r\n    width: \"20rem\",\r\n    background: \"#f1f1f1\",\r\n    minHeight: \"35rem\",\r\n    padding: \"0 2rem\",\r\n    borderRadius: \"1rem\",\r\n    position: \"absolute\",\r\n    left: \"50%\",\r\n    top: \"50%\",\r\n    transform: \"translate(-50%, -50%)\",\r\n  },\r\n\r\n  formItem: {\r\n    width: \"100%\",\r\n    position: \"relative\",\r\n    height: \"3rem\",\r\n    margin: \"0.2rem 0\",\r\n    overflow: \"hidden\",\r\n\r\n    \"& input\": {\r\n      width: \"100%\",\r\n      height: \"100%\",\r\n      color: \"#333\",\r\n      outline: \"none\",\r\n      border: \"none\",\r\n      background: \"none\",\r\n      padding: \"2rem 0\",\r\n\r\n      \"&:focus+label span, &:valid+label span\": {\r\n        transform: \"translateY(-90%)\",\r\n        color: \"#adadad\",\r\n        fontSize: \"0.9rem\",\r\n      },\r\n\r\n      \"&:focus+label::after, &:valid+label::after\": {\r\n        transform: \"translateX(0)\",\r\n      },\r\n    },\r\n\r\n    \"& label\": {\r\n      position: \"absolute\",\r\n      bottom: 0,\r\n      left: 0,\r\n      width: \"100%\",\r\n      height: \"100%\",\r\n      pointerEvents: \"none\",\r\n      borderBottom: \"1px solid #adadad\",\r\n\r\n      \"&:after\": {\r\n        content: '\"\"',\r\n        position: \"absolute\",\r\n        left: 0,\r\n        bottom: \"-0.15rem\",\r\n        width: \"100%\",\r\n        height: \"100%\",\r\n        borderBottom: \"3px solid #2980b9\",\r\n        borderImage: \"linear-gradient(120deg, #2980b9, #8e44ad) 1 round\",\r\n        transform: \"translateX(-100%)\",\r\n        transition: \"transform 0.6s ease\",\r\n      },\r\n\r\n      \"& span\": {\r\n        position: \"absolute\",\r\n        bottom: \"0.3rem\",\r\n        left: 0,\r\n        color: \"#adadad\",\r\n        transition: \"all 0.3s ease\",\r\n      },\r\n    },\r\n  },\r\n\r\n  logbtn: {\r\n    marginTop: \"2rem\",\r\n    display: \"block\",\r\n    width: \"100%\",\r\n    height: \"3rem\",\r\n    border: \"none\",\r\n    borderRadius: \"3px\",\r\n    background: \"linear-gradient(120deg, #2980b9, #8e44ad, #2980b9)\",\r\n    backgroundSize: \"200%\",\r\n    color: \"#fff\",\r\n    outline: \"none\",\r\n    transition: \"0.5s\",\r\n    cursor: \"pointer\",\r\n\r\n    \"&:hover\": {\r\n      backgroundPosition: \"right\",\r\n    },\r\n  },\r\n\r\n  bottomText: {\r\n    textAlign: \"center\",\r\n    fontSize: \"0.9rem\",\r\n  },\r\n\r\n  link: {\r\n    textDecoration: \"none\",\r\n  },\r\n}));\r\n\r\nconst CustomInput = ({ label, ...props }) => {\r\n  const classes = useStyles();\r\n  const [field, meta] = useField(props);\r\n  const { enqueueSnackbar } = useSnackbar();\r\n\r\n  useEffect(() => {\r\n    if (meta.touched && meta.error) {\r\n      enqueueSnackbar(meta.error, {\r\n        preventDuplicate: true,\r\n        variant: \"info\",\r\n      });\r\n    }\r\n  }, [meta, enqueueSnackbar]);\r\n\r\n  return (\r\n    <Fragment>\r\n      <Box className={classes.formItem}>\r\n        <Typography component={Field} required {...field} {...props} />\r\n        <Typography component=\"label\" htmlFor={props.id || props.name}>\r\n          <span>{label}</span>\r\n        </Typography>\r\n      </Box>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport const Auth = (props) => {\r\n  const classes = useStyles();\r\n  const { error, success } = props;\r\n  const { onAuth, onMessageReset, history, match } = props;\r\n  const isSignUp = match && match.url === \"/sign-up\";\r\n\r\n  const { enqueueSnackbar } = useSnackbar();\r\n\r\n  let initialValues = { username: \"\", password: \"\" };\r\n  let validationSchema = Yup.object().shape({\r\n    username: Yup.string()\r\n      .min(3, \"Name must be at least 3 characters\")\r\n      .max(15, \"Name must be 15 characters or less\")\r\n      .required(\"Must enter a name\"),\r\n    password: Yup.string()\r\n      .min(3, \"Password must be at least 3 characters\")\r\n      .required(\"Password is required\"),\r\n  });\r\n\r\n  if (isSignUp) {\r\n    initialValues = {\r\n      username: \"\",\r\n      password: \"\",\r\n      confirmPassword: \"\",\r\n      name: \"\",\r\n      phone: \"\",\r\n      group: \"GP08\",\r\n      email: \"\",\r\n    };\r\n    validationSchema = Yup.object().shape({\r\n      username: Yup.string()\r\n        .min(3, \"Username must be at least 3 characters\")\r\n        .max(15, \"Username must be 15 characters or less\")\r\n        .required(\"Must enter a username\"),\r\n      password: Yup.string()\r\n        .min(3, \"Password must be at least 3 characters\")\r\n        .required(\"Password is required\"),\r\n      confirmPassword: Yup.string()\r\n        .oneOf([Yup.ref(\"password\"), null], \"Passwords must match\")\r\n        .required(\"Confirm Password is required\"),\r\n      name: Yup.string()\r\n        .min(3, \"Name must be at least 3 characters\")\r\n        .max(15, \"Name must be 15 characters or less\")\r\n        .required(\"Must enter a name\"),\r\n      group: Yup.string().required(\"Group is required\"),\r\n      phone: Yup.number()\r\n        .min(10, \"Phone number must be at least 10 characters\")\r\n        .required(\"Must enter a phone number\"),\r\n      email: Yup.string()\r\n        .email(\"Must be a valid email address\")\r\n        .required(\"Must enter an email\"),\r\n    });\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (error) {\r\n      enqueueSnackbar(error, { variant: \"error\" });\r\n    } else if (success) {\r\n      enqueueSnackbar(success, { variant: \"success\" });\r\n    }\r\n    onMessageReset();\r\n  }, [error, success, enqueueSnackbar, onMessageReset]);\r\n\r\n  const onSubmit = (values, { setSubmitting }) => {\r\n    onAuth(values, history, isSignUp);\r\n    setSubmitting(false);\r\n  };\r\n\r\n  return (\r\n    <Box className={classes.container}>\r\n      <CssBaseline />\r\n      <Formik\r\n        initialValues={initialValues}\r\n        validationSchema={validationSchema}\r\n        onSubmit={onSubmit}\r\n      >\r\n        {(props) => (\r\n          <Form className={classes.loginForm}>\r\n            <Box mt={isSignUp ? 5 : 10} mb={isSignUp ? 3 : 5}>\r\n              <Typography variant=\"h3\" align=\"center\">\r\n                {isSignUp ? \"Sign Up\" : \"Login\"}\r\n              </Typography>\r\n            </Box>\r\n            <FormGroup>\r\n              <CustomInput label=\"Username\" name=\"username\" type=\"text\" />\r\n              <CustomInput label=\"Password\" name=\"password\" type=\"password\" />\r\n            </FormGroup>\r\n            {isSignUp ? (\r\n              <FormGroup>\r\n                <CustomInput\r\n                  label=\"Confirm Password\"\r\n                  name=\"confirmPassword\"\r\n                  type=\"password\"\r\n                />\r\n                <CustomInput label=\"Name\" name=\"name\" type=\"text\" />\r\n                <CustomInput label=\"Phone\" name=\"phone\" type=\"text\" />\r\n                <CustomInput label=\"Email\" name=\"email\" type=\"email\" />\r\n                <NativeSelect\r\n                  value={props.values.group}\r\n                  onChange={props.handleChange}\r\n                  onBlur={props.handleBlur}\r\n                  name=\"group\"\r\n                  style={{ marginTop: 16 }}\r\n                >\r\n                  <option value={\"GP01\"}>Group 01</option>\r\n                  <option value={\"GP02\"}>Group 02</option>\r\n                  <option value={\"GP03\"}>Group 03</option>\r\n                  <option value={\"GP04\"}>Group 04</option>\r\n                  <option value={\"GP05\"}>Group 05</option>\r\n                  <option value={\"GP06\"}>Group 06</option>\r\n                  <option value={\"GP07\"}>Group 07</option>\r\n                  <option value={\"GP08\"}>Group 08</option>\r\n                  <option value={\"GP09\"}>Group 09</option>\r\n                  <option value={\"GP10\"}>Group 10</option>\r\n                  <option value={\"GP11\"}>Group 11</option>\r\n                  <option value={\"GP12\"}>Group 12</option>\r\n                  <option value={\"GP13\"}>Group 13</option>\r\n                  <option value={\"GP14\"}>Group 14</option>\r\n                  <option value={\"GP15\"}>Group 15</option>\r\n                </NativeSelect>\r\n              </FormGroup>\r\n            ) : null}\r\n\r\n            <Typography\r\n              component=\"button\"\r\n              type=\"submit\"\r\n              className={classes.logbtn}\r\n            >\r\n              {props.isSubmitting\r\n                ? \"Loading...\"\r\n                : isSignUp\r\n                ? \"Sign Up\"\r\n                : \"Login\"}\r\n            </Typography>\r\n\r\n            <Box\r\n              mt={isSignUp ? 5 : 10}\r\n              mb={isSignUp ? 5 : 0}\r\n              className={classes.bottomText}\r\n            >\r\n              <Typography component=\"p\">\r\n                {isSignUp\r\n                  ? \"Already have an account?\"\r\n                  : \"Don't have an account?\"}{\" \"}\r\n                {isSignUp ? (\r\n                  <Link to=\"/sign-in\" className={classes.link}>\r\n                    Sign In\r\n                  </Link>\r\n                ) : (\r\n                  <Link to=\"/sign-up\" className={classes.link}>\r\n                    Sign Up\r\n                  </Link>\r\n                )}\r\n              </Typography>\r\n            </Box>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </Box>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    error: state.auth.error,\r\n    success: state.auth.success,\r\n    // loading: state.auth.loading,\r\n    // isAuthenticated: state.auth.token !== null,\r\n    // authRedirectPath: state.auth.authRedirectPath,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onAuth: (values, history, isSignUp) =>\r\n      dispatch(actions.auth(values, history, isSignUp)),\r\n    onMessageReset: () => dispatch(actions.authStart()),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Auth);\r\n"]},"metadata":{},"sourceType":"module"}