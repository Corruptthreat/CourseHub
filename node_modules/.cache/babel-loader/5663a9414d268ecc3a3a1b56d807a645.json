{"ast":null,"code":"import React from\"react\";import{makeStyles}from\"@material-ui/core/styles\";import MenuItem from\"@material-ui/core/MenuItem\";import FormControl from\"@material-ui/core/FormControl\";import Select from\"@material-ui/core/Select\";import{connect}from\"react-redux\";import{groupItems}from\"./GroupList\";import*as actions from\"../../../store/actions\";var useStyles=makeStyles(function(theme){return{formControl:{margin:theme.spacing(1),minWidth:100}};});var ChooseGroup=function ChooseGroup(props){var classes=useStyles();var courseIndex=props.courseIndex,courseType=props.courseType,group=props.group;var onChooseGroup=props.onChooseGroup,onChooseCourseType=props.onChooseCourseType,onFetchCourseList=props.onFetchCourseList;var handleChooseCourseType=function handleChooseCourseType(event){onChooseCourseType(event.target.value);onFetchCourseList(null,group,event.target.value);};var handleChooseGroup=function handleChooseGroup(event){onChooseGroup(event.target.value);onFetchCourseList(null,event.target.value,courseType);};return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(FormControl,{className:classes.formControl},/*#__PURE__*/React.createElement(Select,{value:courseType,onChange:handleChooseCourseType},/*#__PURE__*/React.createElement(MenuItem,{value:\"all\"},\"All Courses\"),courseIndex.map(function(item,index){return/*#__PURE__*/React.createElement(MenuItem,{key:index,value:item.value||item.maDanhMuc},item.label||item.tenDanhMuc);}))),/*#__PURE__*/React.createElement(FormControl,{className:classes.formControl},/*#__PURE__*/React.createElement(Select,{value:group,onChange:handleChooseGroup},groupItems.map(function(item,index){return/*#__PURE__*/React.createElement(MenuItem,{key:item.value||item.maDanhMuc,value:item.value||item.maDanhMuc},item.label||item.tenDanhMuc);}))));};var mapStateToProps=function mapStateToProps(state){return{courseIndex:state.courses.courseIndex,courseType:state.coursesManager.courseType,group:state.auth.group};};var mapDispatchToProps=function mapDispatchToProps(dispatch){return{onChooseGroup:function onChooseGroup(group){return dispatch(actions.chooseGroup(group));},onChooseCourseType:function onChooseCourseType(courseType){return dispatch(actions.chooseCourseType(courseType));},onFetchCourseList:function onFetchCourseList(keyWord,group,courseType){return dispatch(actions.fetchCoursesList(keyWord,group,courseType));}};};export default connect(mapStateToProps,mapDispatchToProps)(ChooseGroup);","map":{"version":3,"sources":["/home/sudo-byte/CourseHub-master/src/components/Courses/InputCustom/ChooseGroup.js"],"names":["React","makeStyles","MenuItem","FormControl","Select","connect","groupItems","actions","useStyles","theme","formControl","margin","spacing","minWidth","ChooseGroup","props","classes","courseIndex","courseType","group","onChooseGroup","onChooseCourseType","onFetchCourseList","handleChooseCourseType","event","target","value","handleChooseGroup","map","item","index","maDanhMuc","label","tenDanhMuc","mapStateToProps","state","courses","coursesManager","auth","mapDispatchToProps","dispatch","chooseGroup","chooseCourseType","keyWord","fetchCoursesList"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,UAAT,KAA2B,0BAA3B,CACA,MAAOC,CAAAA,QAAP,KAAqB,4BAArB,CACA,MAAOC,CAAAA,WAAP,KAAwB,+BAAxB,CACA,MAAOC,CAAAA,MAAP,KAAmB,0BAAnB,CAEA,OAASC,OAAT,KAAwB,aAAxB,CACA,OAASC,UAAT,KAA2B,aAA3B,CAEA,MAAO,GAAKC,CAAAA,OAAZ,KAAyB,wBAAzB,CAEA,GAAMC,CAAAA,SAAS,CAAGP,UAAU,CAAC,SAACQ,KAAD,QAAY,CACvCC,WAAW,CAAE,CACXC,MAAM,CAAEF,KAAK,CAACG,OAAN,CAAc,CAAd,CADG,CAEXC,QAAQ,CAAE,GAFC,CAD0B,CAAZ,EAAD,CAA5B,CAOA,GAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAACC,KAAD,CAAW,CAC7B,GAAMC,CAAAA,OAAO,CAAGR,SAAS,EAAzB,CAD6B,GAErBS,CAAAA,WAFqB,CAEcF,KAFd,CAErBE,WAFqB,CAERC,UAFQ,CAEcH,KAFd,CAERG,UAFQ,CAEIC,KAFJ,CAEcJ,KAFd,CAEII,KAFJ,IAGrBC,CAAAA,aAHqB,CAGoCL,KAHpC,CAGrBK,aAHqB,CAGNC,kBAHM,CAGoCN,KAHpC,CAGNM,kBAHM,CAGcC,iBAHd,CAGoCP,KAHpC,CAGcO,iBAHd,CAK7B,GAAMC,CAAAA,sBAAsB,CAAG,QAAzBA,CAAAA,sBAAyB,CAACC,KAAD,CAAW,CACxCH,kBAAkB,CAACG,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAlB,CACAJ,iBAAiB,CAAC,IAAD,CAAOH,KAAP,CAAcK,KAAK,CAACC,MAAN,CAAaC,KAA3B,CAAjB,CACD,CAHD,CAKA,GAAMC,CAAAA,iBAAiB,CAAG,QAApBA,CAAAA,iBAAoB,CAACH,KAAD,CAAW,CACnCJ,aAAa,CAACI,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAb,CACAJ,iBAAiB,CAAC,IAAD,CAAOE,KAAK,CAACC,MAAN,CAAaC,KAApB,CAA2BR,UAA3B,CAAjB,CACD,CAHD,CAKA,mBACE,4CACE,oBAAC,WAAD,EAAa,SAAS,CAAEF,OAAO,CAACN,WAAhC,eACE,oBAAC,MAAD,EAAQ,KAAK,CAAEQ,UAAf,CAA2B,QAAQ,CAAEK,sBAArC,eACE,oBAAC,QAAD,EAAU,KAAK,CAAC,KAAhB,gBADF,CAEGN,WAAW,CAACW,GAAZ,CAAgB,SAACC,IAAD,CAAOC,KAAP,qBACf,oBAAC,QAAD,EAAU,GAAG,CAAEA,KAAf,CAAsB,KAAK,CAAED,IAAI,CAACH,KAAL,EAAcG,IAAI,CAACE,SAAhD,EACGF,IAAI,CAACG,KAAL,EAAcH,IAAI,CAACI,UADtB,CADe,EAAhB,CAFH,CADF,CADF,cAWE,oBAAC,WAAD,EAAa,SAAS,CAAEjB,OAAO,CAACN,WAAhC,eACE,oBAAC,MAAD,EAAQ,KAAK,CAAES,KAAf,CAAsB,QAAQ,CAAEQ,iBAAhC,EACGrB,UAAU,CAACsB,GAAX,CAAe,SAACC,IAAD,CAAOC,KAAP,qBACd,oBAAC,QAAD,EACE,GAAG,CAAED,IAAI,CAACH,KAAL,EAAcG,IAAI,CAACE,SAD1B,CAEE,KAAK,CAAEF,IAAI,CAACH,KAAL,EAAcG,IAAI,CAACE,SAF5B,EAIGF,IAAI,CAACG,KAAL,EAAcH,IAAI,CAACI,UAJtB,CADc,EAAf,CADH,CADF,CAXF,CADF,CA0BD,CAzCD,CA2CA,GAAMC,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACC,KAAD,CAAW,CACjC,MAAO,CACLlB,WAAW,CAAEkB,KAAK,CAACC,OAAN,CAAcnB,WADtB,CAELC,UAAU,CAAEiB,KAAK,CAACE,cAAN,CAAqBnB,UAF5B,CAGLC,KAAK,CAAEgB,KAAK,CAACG,IAAN,CAAWnB,KAHb,CAAP,CAKD,CAND,CAQA,GAAMoB,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,CAACC,QAAD,CAAc,CACvC,MAAO,CACLpB,aAAa,CAAE,uBAACD,KAAD,QAAWqB,CAAAA,QAAQ,CAACjC,OAAO,CAACkC,WAAR,CAAoBtB,KAApB,CAAD,CAAnB,EADV,CAELE,kBAAkB,CAAE,4BAACH,UAAD,QAClBsB,CAAAA,QAAQ,CAACjC,OAAO,CAACmC,gBAAR,CAAyBxB,UAAzB,CAAD,CADU,EAFf,CAILI,iBAAiB,CAAE,2BAACqB,OAAD,CAAUxB,KAAV,CAAiBD,UAAjB,QACjBsB,CAAAA,QAAQ,CAACjC,OAAO,CAACqC,gBAAR,CAAyBD,OAAzB,CAAkCxB,KAAlC,CAAyCD,UAAzC,CAAD,CADS,EAJd,CAAP,CAOD,CARD,CAUA,cAAeb,CAAAA,OAAO,CAAC6B,eAAD,CAAkBK,kBAAlB,CAAP,CAA6CzB,WAA7C,CAAf","sourcesContent":["import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Select from \"@material-ui/core/Select\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { groupItems } from \"./GroupList\";\r\n\r\nimport * as actions from \"../../../store/actions\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 100,\r\n  },\r\n}));\r\n\r\nconst ChooseGroup = (props) => {\r\n  const classes = useStyles();\r\n  const { courseIndex, courseType, group } = props;\r\n  const { onChooseGroup, onChooseCourseType, onFetchCourseList } = props;\r\n\r\n  const handleChooseCourseType = (event) => {\r\n    onChooseCourseType(event.target.value);\r\n    onFetchCourseList(null, group, event.target.value);\r\n  };\r\n\r\n  const handleChooseGroup = (event) => {\r\n    onChooseGroup(event.target.value);\r\n    onFetchCourseList(null, event.target.value, courseType);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <FormControl className={classes.formControl}>\r\n        <Select value={courseType} onChange={handleChooseCourseType}>\r\n          <MenuItem value=\"all\">All Courses</MenuItem>\r\n          {courseIndex.map((item, index) => (\r\n            <MenuItem key={index} value={item.value || item.maDanhMuc}>\r\n              {item.label || item.tenDanhMuc}\r\n            </MenuItem>\r\n          ))}\r\n        </Select>\r\n      </FormControl>\r\n      <FormControl className={classes.formControl}>\r\n        <Select value={group} onChange={handleChooseGroup}>\r\n          {groupItems.map((item, index) => (\r\n            <MenuItem\r\n              key={item.value || item.maDanhMuc}\r\n              value={item.value || item.maDanhMuc}\r\n            >\r\n              {item.label || item.tenDanhMuc}\r\n            </MenuItem>\r\n          ))}\r\n        </Select>\r\n      </FormControl>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    courseIndex: state.courses.courseIndex,\r\n    courseType: state.coursesManager.courseType,\r\n    group: state.auth.group,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onChooseGroup: (group) => dispatch(actions.chooseGroup(group)),\r\n    onChooseCourseType: (courseType) =>\r\n      dispatch(actions.chooseCourseType(courseType)),\r\n    onFetchCourseList: (keyWord, group, courseType) =>\r\n      dispatch(actions.fetchCoursesList(keyWord, group, courseType)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ChooseGroup);\r\n"]},"metadata":{},"sourceType":"module"}