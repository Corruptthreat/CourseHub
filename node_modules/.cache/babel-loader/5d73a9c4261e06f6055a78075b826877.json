{"ast":null,"code":"import _slicedToArray from\"/home/sudo-byte/CourseHub-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _objectWithoutProperties from\"/home/sudo-byte/CourseHub-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";import React,{useEffect,useState}from\"react\";import{connect}from\"react-redux\";import{useSnackbar}from\"notistack\";import{Formik,Form,Field,useField}from\"formik\";import{TextField,Select}from\"formik-material-ui\";import cx from\"clsx\";import{makeStyles}from\"@material-ui/core/styles\";import Card from\"@material-ui/core/Card\";import CardContent from\"@material-ui/core/CardContent\";import{useSoftRiseShadowStyles}from\"@mui-treasury/styles/shadow/softRise\";import InputLabel from\"@material-ui/core/InputLabel\";import MenuItem from\"@material-ui/core/MenuItem\";import IconButton from\"@material-ui/core/IconButton\";import InputAdornment from\"@material-ui/core/InputAdornment\";import Visibility from\"@material-ui/icons/Visibility\";import VisibilityOff from\"@material-ui/icons/VisibilityOff\";import{Box,Button,FormControl,Typography,Input,FormHelperText}from\"@material-ui/core\";import*as Yup from\"yup\";import*as actions from\"../../store/actions\";var useStyles=makeStyles(function(theme){return{root:{maxWidth:304,margin:\"auto\"},content:{padding:24},button:{marginTop:\"2rem\",display:\"block\",width:\"100%\",height:\"3rem\",border:\"none\",background:\"linear-gradient(120deg, #2980b9, #8e44ad, #2980b9)\",backgroundSize:\"200%\",color:\"#fff\",outline:\"none\",transition:\"0.5s\",cursor:\"pointer\",\"&:hover\":{backgroundPosition:\"right\"}}};});var FormikField=function FormikField(_ref){var label=_ref.label,name=_ref.name,_ref$type=_ref.type,type=_ref$type===void 0?\"text\":_ref$type,disabled=_ref.disabled;return/*#__PURE__*/React.createElement(Box,{my:1},/*#__PURE__*/React.createElement(Field,{fullWidth:true,component:TextField,label:label,name:name,type:type,disabled:disabled}));};var FormikPassword=function FormikPassword(_ref2){var label=_ref2.label,props=_objectWithoutProperties(_ref2,[\"label\"]);var _useField=useField(props),_useField2=_slicedToArray(_useField,2),field=_useField2[0],meta=_useField2[1];var _useState=useState(false),_useState2=_slicedToArray(_useState,2),showPassword=_useState2[0],setShowPassword=_useState2[1];return/*#__PURE__*/React.createElement(FormControl,{fullWidth:true,error:meta.touched&&meta.error?true:false},/*#__PURE__*/React.createElement(InputLabel,null,label),/*#__PURE__*/React.createElement(Input,Object.assign({},field,props,{type:showPassword?\"text\":\"password\",endAdornment:/*#__PURE__*/React.createElement(InputAdornment,{position:\"end\"},/*#__PURE__*/React.createElement(IconButton,{style:{padding:0},onClick:function onClick(){return setShowPassword(!showPassword);},onMouseDown:function onMouseDown(event){return event.preventDefault();}},showPassword?/*#__PURE__*/React.createElement(Visibility,null):/*#__PURE__*/React.createElement(VisibilityOff,null)))})),meta.touched&&meta.error?/*#__PURE__*/React.createElement(FormHelperText,null,meta.error):null);};var FormikSelect=function FormikSelect(_ref3){var label=_ref3.label,name=_ref3.name,items=_ref3.items,disabled=_ref3.disabled;return/*#__PURE__*/React.createElement(Box,{my:1,textAlign:\"left\"},/*#__PURE__*/React.createElement(FormControl,{disabled:disabled,fullWidth:true},/*#__PURE__*/React.createElement(InputLabel,null,label),/*#__PURE__*/React.createElement(Field,{component:Select,name:name,disabled:disabled},items.map(function(item){return/*#__PURE__*/React.createElement(MenuItem,{key:item.value,value:item.value},item.label);}))));};var userTypeItems=[{label:\"Học Viên\",value:\"HV\"},{label:\"Giảng Viên\",value:\"GV\"}];var userItems=[{label:\"Group 01\",value:\"GP01\"},{label:\"Group 02\",value:\"GP02\"},{label:\"Group 03\",value:\"GP03\"},{label:\"Group 04\",value:\"GP04\"},{label:\"Group 05\",value:\"GP05\"},{label:\"Group 06\",value:\"GP06\"},{label:\"Group 07\",value:\"GP07\"},{label:\"Group 08\",value:\"GP08\"},{label:\"Group 09\",value:\"GP09\"},{label:\"Group 10\",value:\"GP10\"},{label:\"Group 11\",value:\"GP11\"},{label:\"Group 12\",value:\"GP12\"},{label:\"Group 13\",value:\"GP13\"},{label:\"Group 14\",value:\"GP14\"},{label:\"Group 15\",value:\"GP15\"}];export var AddUsers=function AddUsers(props){var classes=useStyles();var preview=props.preview,group=props.group,isEdit=props.isEdit,tabIndex=props.tabIndex,selectedUser=props.selectedUser,success=props.success,error=props.error;var onAddUser=props.onAddUser;var _useSnackbar=useSnackbar(),enqueueSnackbar=_useSnackbar.enqueueSnackbar;var cardStyles=useStyles();var shadowStyles=useSoftRiseShadowStyles();useEffect(function(){if(error){enqueueSnackbar(error,{variant:\"error\",anchorOrigin:{vertical:\"bottom\",horizontal:\"right\"}});}else if(success){enqueueSnackbar(success,{variant:\"success\",anchorOrigin:{vertical:\"bottom\",horizontal:\"right\"}});}},[error,success,enqueueSnackbar]);var initialValues={username:\"\",password:\"\",email:\"\",accountType:\"\",name:\"\",phone:\"\",group:\"\"};if(isEdit&&selectedUser||preview&&selectedUser){initialValues={username:selectedUser.taiKhoan,password:\"\",email:selectedUser.email,accountType:selectedUser.maLoaiNguoiDung,name:selectedUser.hoTen,phone:selectedUser.soDt,group:group};}var validationSchema=Yup.object().shape({username:Yup.string().min(3,\"Username must be at least 3 characters\").max(15,\"Username must be 15 characters or less\").required(\"Must enter a username\"),password:Yup.string().min(3,\"Password must be at least 3 characters\").required(\"Password is required\"),name:Yup.string().min(3,\"Name must be at least 3 characters\").max(15,\"Name must be 15 characters or less\").required(\"Must enter a name\"),accountType:Yup.string().required(\"Account type is required\"),group:Yup.string().required(\"Group is required\"),phone:Yup.number().min(10,\"Phone number must be at least 10 characters\").required(\"Must enter a phone number\"),email:Yup.string().email(\"Must be a valid email address\").required(\"Must enter an email\")});var onSubmit=function onSubmit(values,_ref4){var setSubmitting=_ref4.setSubmitting,resetForm=_ref4.resetForm;onAddUser(values,isEdit,tabIndex,group);resetForm();setSubmitting(false);};return/*#__PURE__*/React.createElement(Card,{className:cx(cardStyles.root,shadowStyles.root)},/*#__PURE__*/React.createElement(CardContent,{className:classes.content},preview?null:/*#__PURE__*/React.createElement(Typography,{variant:\"h4\",align:\"center\"},isEdit?\"Edit User\":\"Add User\"),/*#__PURE__*/React.createElement(Formik,{initialValues:initialValues,validationSchema:validationSchema,onSubmit:onSubmit},function(_ref5){var submitForm=_ref5.submitForm,dirty=_ref5.dirty,isValid=_ref5.isValid,props=_objectWithoutProperties(_ref5,[\"submitForm\",\"dirty\",\"isValid\"]);return/*#__PURE__*/React.createElement(Form,null,/*#__PURE__*/React.createElement(FormikField,{label:\"Username\",name:\"username\",disabled:isEdit||preview}),/*#__PURE__*/React.createElement(FormikField,{label:\"Email\",name:\"email\",type:\"email\",disabled:preview}),preview?null:/*#__PURE__*/React.createElement(FormikPassword,{label:\"Password\",name:\"password\"}),/*#__PURE__*/React.createElement(FormikSelect,{label:\"Account type\",name:\"accountType\",items:userTypeItems,disabled:preview}),/*#__PURE__*/React.createElement(FormikField,{label:\"Name\",name:\"name\",disabled:preview}),/*#__PURE__*/React.createElement(FormikField,{label:\"Phone\",name:\"phone\",disabled:preview}),preview?null:/*#__PURE__*/React.createElement(FormikSelect,{label:\"Choose a group\",name:\"group\",items:userItems}),preview?null:/*#__PURE__*/React.createElement(Box,{align:\"center\"},/*#__PURE__*/React.createElement(Button,{variant:\"contained\",color:\"primary\",disabled:!dirty||!isValid,onClick:submitForm,className:classes.button},\"Submit\")));})));};var mapStateToProps=function mapStateToProps(state){return{group:state.auth.group,error:state.usersManager.error,success:state.usersManager.success,isEdit:state.usersManager.isEdit,tabIndex:state.usersManager.tabIndex,selectedUser:state.usersManager.selectedUser};};var mapDispatchToProps=function mapDispatchToProps(dispatch){return{onAddUser:function onAddUser(values,isEdit,tabIndex,group){return dispatch(actions.addUser(values,isEdit,tabIndex,group));}};};export default connect(mapStateToProps,mapDispatchToProps)(AddUsers);","map":{"version":3,"sources":["/home/sudo-byte/CourseHub-master/src/components/Users/AddUsers.js"],"names":["React","useEffect","useState","connect","useSnackbar","Formik","Form","Field","useField","TextField","Select","cx","makeStyles","Card","CardContent","useSoftRiseShadowStyles","InputLabel","MenuItem","IconButton","InputAdornment","Visibility","VisibilityOff","Box","Button","FormControl","Typography","Input","FormHelperText","Yup","actions","useStyles","theme","root","maxWidth","margin","content","padding","button","marginTop","display","width","height","border","background","backgroundSize","color","outline","transition","cursor","backgroundPosition","FormikField","label","name","type","disabled","FormikPassword","props","field","meta","showPassword","setShowPassword","touched","error","event","preventDefault","FormikSelect","items","map","item","value","userTypeItems","userItems","AddUsers","classes","preview","group","isEdit","tabIndex","selectedUser","success","onAddUser","enqueueSnackbar","cardStyles","shadowStyles","variant","anchorOrigin","vertical","horizontal","initialValues","username","password","email","accountType","phone","taiKhoan","maLoaiNguoiDung","hoTen","soDt","validationSchema","object","shape","string","min","max","required","number","onSubmit","values","setSubmitting","resetForm","submitForm","dirty","isValid","mapStateToProps","state","auth","usersManager","mapDispatchToProps","dispatch","addUser"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { useSnackbar } from \"notistack\";\r\nimport { Formik, Form, Field, useField } from \"formik\";\r\nimport { TextField, Select } from \"formik-material-ui\";\r\n\r\nimport cx from \"clsx\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nimport Card from \"@material-ui/core/Card\";\r\n\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\n\r\nimport { useSoftRiseShadowStyles } from \"@mui-treasury/styles/shadow/softRise\";\r\n\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\n\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\r\nimport Visibility from \"@material-ui/icons/Visibility\";\r\nimport VisibilityOff from \"@material-ui/icons/VisibilityOff\";\r\n\r\nimport {\r\n  Box,\r\n  Button,\r\n  FormControl,\r\n  Typography,\r\n  Input,\r\n  FormHelperText,\r\n} from \"@material-ui/core\";\r\n\r\nimport * as Yup from \"yup\";\r\nimport * as actions from \"../../store/actions\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    maxWidth: 304,\r\n    margin: \"auto\",\r\n  },\r\n  content: {\r\n    padding: 24,\r\n  },\r\n  button: {\r\n    marginTop: \"2rem\",\r\n    display: \"block\",\r\n    width: \"100%\",\r\n    height: \"3rem\",\r\n    border: \"none\",\r\n    background: \"linear-gradient(120deg, #2980b9, #8e44ad, #2980b9)\",\r\n    backgroundSize: \"200%\",\r\n    color: \"#fff\",\r\n    outline: \"none\",\r\n    transition: \"0.5s\",\r\n    cursor: \"pointer\",\r\n\r\n    \"&:hover\": {\r\n      backgroundPosition: \"right\",\r\n    },\r\n  },\r\n}));\r\n\r\nconst FormikField = ({ label, name, type = \"text\", disabled }) => {\r\n  return (\r\n    <Box my={1}>\r\n      <Field\r\n        fullWidth\r\n        component={TextField}\r\n        label={label}\r\n        name={name}\r\n        type={type}\r\n        disabled={disabled}\r\n      />\r\n    </Box>\r\n  );\r\n};\r\n\r\nconst FormikPassword = ({ label, ...props }) => {\r\n  const [field, meta] = useField(props);\r\n  const [showPassword, setShowPassword] = useState(false);\r\n\r\n  return (\r\n    <FormControl fullWidth error={meta.touched && meta.error ? true : false}>\r\n      <InputLabel>{label}</InputLabel>\r\n      <Input\r\n        {...field}\r\n        {...props}\r\n        type={showPassword ? \"text\" : \"password\"}\r\n        endAdornment={\r\n          <InputAdornment position=\"end\">\r\n            <IconButton\r\n              style={{ padding: 0 }}\r\n              onClick={() => setShowPassword(!showPassword)}\r\n              onMouseDown={(event) => event.preventDefault()}\r\n            >\r\n              {showPassword ? <Visibility /> : <VisibilityOff />}\r\n            </IconButton>\r\n          </InputAdornment>\r\n        }\r\n      />\r\n      {meta.touched && meta.error ? (\r\n        <FormHelperText>{meta.error}</FormHelperText>\r\n      ) : null}\r\n    </FormControl>\r\n  );\r\n};\r\n\r\nconst FormikSelect = ({ label, name, items, disabled }) => {\r\n  return (\r\n    <Box my={1} textAlign=\"left\">\r\n      <FormControl disabled={disabled} fullWidth>\r\n        <InputLabel>{label}</InputLabel>\r\n        <Field component={Select} name={name} disabled={disabled}>\r\n          {items.map((item) => (\r\n            <MenuItem key={item.value} value={item.value}>\r\n              {item.label}\r\n            </MenuItem>\r\n          ))}\r\n        </Field>\r\n      </FormControl>\r\n    </Box>\r\n  );\r\n};\r\n\r\nconst userTypeItems = [\r\n  { label: \"Học Viên\", value: \"HV\" },\r\n  { label: \"Giảng Viên\", value: \"GV\" },\r\n];\r\n\r\nconst userItems = [\r\n  { label: \"Group 01\", value: \"GP01\" },\r\n  { label: \"Group 02\", value: \"GP02\" },\r\n  { label: \"Group 03\", value: \"GP03\" },\r\n  { label: \"Group 04\", value: \"GP04\" },\r\n  { label: \"Group 05\", value: \"GP05\" },\r\n  { label: \"Group 06\", value: \"GP06\" },\r\n  { label: \"Group 07\", value: \"GP07\" },\r\n  { label: \"Group 08\", value: \"GP08\" },\r\n  { label: \"Group 09\", value: \"GP09\" },\r\n  { label: \"Group 10\", value: \"GP10\" },\r\n  { label: \"Group 11\", value: \"GP11\" },\r\n  { label: \"Group 12\", value: \"GP12\" },\r\n  { label: \"Group 13\", value: \"GP13\" },\r\n  { label: \"Group 14\", value: \"GP14\" },\r\n  { label: \"Group 15\", value: \"GP15\" },\r\n];\r\n\r\nexport const AddUsers = (props) => {\r\n  const classes = useStyles();\r\n  const {\r\n    preview,\r\n    group,\r\n    isEdit,\r\n    tabIndex,\r\n    selectedUser,\r\n    success,\r\n    error,\r\n  } = props;\r\n  const { onAddUser } = props;\r\n\r\n  const { enqueueSnackbar } = useSnackbar();\r\n\r\n  const cardStyles = useStyles();\r\n  const shadowStyles = useSoftRiseShadowStyles();\r\n\r\n  useEffect(() => {\r\n    if (error) {\r\n      enqueueSnackbar(error, {\r\n        variant: \"error\",\r\n        anchorOrigin: {\r\n          vertical: \"bottom\",\r\n          horizontal: \"right\",\r\n        },\r\n      });\r\n    } else if (success) {\r\n      enqueueSnackbar(success, {\r\n        variant: \"success\",\r\n        anchorOrigin: {\r\n          vertical: \"bottom\",\r\n          horizontal: \"right\",\r\n        },\r\n      });\r\n    }\r\n  }, [error, success, enqueueSnackbar]);\r\n\r\n  let initialValues = {\r\n    username: \"\",\r\n    password: \"\",\r\n    email: \"\",\r\n    accountType: \"\",\r\n    name: \"\",\r\n    phone: \"\",\r\n    group: \"\",\r\n  };\r\n\r\n  if ((isEdit && selectedUser) || (preview && selectedUser)) {\r\n    initialValues = {\r\n      username: selectedUser.taiKhoan,\r\n      password: \"\",\r\n      email: selectedUser.email,\r\n      accountType: selectedUser.maLoaiNguoiDung,\r\n      name: selectedUser.hoTen,\r\n      phone: selectedUser.soDt,\r\n      group: group,\r\n    };\r\n  }\r\n\r\n  let validationSchema = Yup.object().shape({\r\n    username: Yup.string()\r\n      .min(3, \"Username must be at least 3 characters\")\r\n      .max(15, \"Username must be 15 characters or less\")\r\n      .required(\"Must enter a username\"),\r\n    password: Yup.string()\r\n      .min(3, \"Password must be at least 3 characters\")\r\n      .required(\"Password is required\"),\r\n    name: Yup.string()\r\n      .min(3, \"Name must be at least 3 characters\")\r\n      .max(15, \"Name must be 15 characters or less\")\r\n      .required(\"Must enter a name\"),\r\n    accountType: Yup.string().required(\"Account type is required\"),\r\n    group: Yup.string().required(\"Group is required\"),\r\n    phone: Yup.number()\r\n      .min(10, \"Phone number must be at least 10 characters\")\r\n      .required(\"Must enter a phone number\"),\r\n    email: Yup.string()\r\n      .email(\"Must be a valid email address\")\r\n      .required(\"Must enter an email\"),\r\n  });\r\n\r\n  const onSubmit = (values, { setSubmitting, resetForm }) => {\r\n    onAddUser(values, isEdit, tabIndex, group);\r\n    resetForm();\r\n    setSubmitting(false);\r\n  };\r\n\r\n  return (\r\n    <Card className={cx(cardStyles.root, shadowStyles.root)}>\r\n      <CardContent className={classes.content}>\r\n        {preview ? null : (\r\n          <Typography variant=\"h4\" align=\"center\">\r\n            {isEdit ? \"Edit User\" : \"Add User\"}\r\n          </Typography>\r\n        )}\r\n\r\n        <Formik\r\n          initialValues={initialValues}\r\n          validationSchema={validationSchema}\r\n          onSubmit={onSubmit}\r\n        >\r\n          {({ submitForm, dirty, isValid, ...props }) => (\r\n            <Form>\r\n              <FormikField\r\n                label=\"Username\"\r\n                name=\"username\"\r\n                disabled={isEdit || preview}\r\n              />\r\n\r\n              <FormikField\r\n                label=\"Email\"\r\n                name=\"email\"\r\n                type=\"email\"\r\n                disabled={preview}\r\n              />\r\n\r\n              {preview ? null : (\r\n                <FormikPassword label=\"Password\" name=\"password\" />\r\n              )}\r\n\r\n              <FormikSelect\r\n                label=\"Account type\"\r\n                name=\"accountType\"\r\n                items={userTypeItems}\r\n                disabled={preview}\r\n              />\r\n              <FormikField label=\"Name\" name=\"name\" disabled={preview} />\r\n              <FormikField label=\"Phone\" name=\"phone\" disabled={preview} />\r\n\r\n              {preview ? null : (\r\n                <FormikSelect\r\n                  label=\"Choose a group\"\r\n                  name=\"group\"\r\n                  items={userItems}\r\n                />\r\n              )}\r\n\r\n              {preview ? null : (\r\n                <Box align=\"center\">\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    disabled={!dirty || !isValid}\r\n                    onClick={submitForm}\r\n                    className={classes.button}\r\n                  >\r\n                    Submit\r\n                  </Button>\r\n                </Box>\r\n              )}\r\n            </Form>\r\n          )}\r\n        </Formik>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    group: state.auth.group,\r\n    error: state.usersManager.error,\r\n    success: state.usersManager.success,\r\n    isEdit: state.usersManager.isEdit,\r\n    tabIndex: state.usersManager.tabIndex,\r\n    selectedUser: state.usersManager.selectedUser,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onAddUser: (values, isEdit, tabIndex, group) =>\r\n      dispatch(actions.addUser(values, isEdit, tabIndex, group)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AddUsers);\r\n"]},"metadata":{},"sourceType":"module"}