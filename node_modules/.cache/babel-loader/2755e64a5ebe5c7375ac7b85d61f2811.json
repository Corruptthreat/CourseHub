{"ast":null,"code":"var _jsxFileName = \"/home/sudo-byte/CourseHub-master/src/components/Courses/AddCourses.js\";\nimport React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { useSnackbar } from \"notistack\";\nimport { Formik, Form } from \"formik\";\nimport cx from \"clsx\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport { useSoftRiseShadowStyles } from \"@mui-treasury/styles/shadow/softRise\";\nimport Rating from \"../Rating/Rating\";\nimport { Box, Button, Typography, CardMedia, Grid } from \"@material-ui/core\";\nimport * as Yup from \"yup\";\nimport * as actions from \"../../store/actions\";\nimport { DropzoneArea } from \"material-ui-dropzone\";\nimport DatePicker from \"../DatePicker/DatePicker\";\nimport { groupItems } from \"./InputCustom/GroupList\";\nimport FormikField from \"./InputCustom/FormikField\";\nimport FormikSelect from \"./InputCustom/FormikSelect\";\nconst useStyles = makeStyles(theme => ({\n  button: {\n    marginTop: \"2rem\",\n    display: \"block\",\n    width: \"100%\",\n    height: \"3rem\",\n    border: \"none\",\n    background: \"linear-gradient(120deg, #2980b9, #8e44ad, #2980b9)\",\n    backgroundSize: \"200%\",\n    color: \"#fff\",\n    outline: \"none\",\n    transition: \"0.5s\",\n    cursor: \"pointer\",\n    \"&:hover\": {\n      backgroundPosition: \"right\"\n    }\n  },\n  formItem: {\n    \"& > *\": {\n      margin: theme.spacing(1)\n    }\n  },\n  formControl: {\n    margin: theme.spacing(1)\n  },\n  input: {\n    display: \"none\"\n  },\n  media: {\n    height: 0,\n    paddingTop: \"56.25%\" // 16:9\n\n  }\n}));\n\nconst AddCourses = props => {\n  const classes = useStyles();\n  const {\n    preview,\n    group,\n    courseType,\n    isEdit,\n    courseIndex,\n    selectedCourse,\n    loading,\n    success,\n    error,\n    tabIndex\n  } = props;\n  const {\n    onAddCourse\n  } = props;\n  const user = JSON.parse(localStorage.getItem(\"user\"));\n  const [selectedImage, setSelectedImage] = useState(null);\n  const [selectedDate, setSelectedDate] = useState(new Date());\n  const {\n    enqueueSnackbar\n  } = useSnackbar();\n  const cardStyles = useStyles();\n  const shadowStyles = useSoftRiseShadowStyles();\n  useEffect(() => {\n    if (selectedCourse && selectedCourse.ngayTao) {\n      const arr = selectedCourse.ngayTao.split(\"/\");\n      const dd = arr[0];\n      const mm = arr[1];\n      const yyyy = arr[2];\n      setSelectedDate(`${yyyy}-${mm}-${dd}`);\n    }\n  }, [selectedCourse]);\n  useEffect(() => {\n    if (error) {\n      enqueueSnackbar(error, {\n        variant: \"error\",\n        anchorOrigin: {\n          vertical: \"bottom\",\n          horizontal: \"right\"\n        }\n      });\n    } else if (success) {\n      enqueueSnackbar(success, {\n        variant: \"success\",\n        anchorOrigin: {\n          vertical: \"bottom\",\n          horizontal: \"right\"\n        }\n      });\n    }\n  }, [error, success, enqueueSnackbar]);\n  let initialValues = {\n    courseId: \"\",\n    urlName: \"\",\n    courseName: \"\",\n    detail: \"\",\n    views: 0,\n    rate: 0,\n    imageUrl: \"\",\n    group: group,\n    dateCreated: selectedDate,\n    courseCode: \"\",\n    creator: user ? user.taiKhoan : \"\"\n  };\n\n  if (isEdit && selectedCourse || preview && selectedCourse) {\n    initialValues = {\n      courseId: selectedCourse.maKhoaHoc,\n      urlName: selectedCourse.biDanh,\n      courseName: selectedCourse.tenKhoaHoc,\n      detail: selectedCourse.moTa,\n      views: selectedCourse.luotXem,\n      rate: selectedCourse.danhGia,\n      imageUrl: selectedCourse.hinhAnh,\n      group: selectedCourse.maNhom,\n      dateCreated: selectedDate,\n      courseCode: selectedCourse.danhMucKhoaHoc.maDanhMucKhoahoc,\n      creator: selectedCourse.nguoiTao.taiKhoan\n    };\n  }\n\n  let validationSchema = Yup.object().shape({\n    courseId: Yup.string().required(\"Must enter a courseId\"),\n    urlName: Yup.string(),\n    courseName: Yup.string().required(\"Must enter a courseName\"),\n    detail: Yup.string().required(\"Detail is required\"),\n    views: Yup.number(),\n    imageUrl: Yup.string(),\n    group: Yup.string().required(\"Group is required\"),\n    dateCreated: Yup.date().required(\"Must enter a created day\"),\n    creator: Yup.string().required(\"Must input creator\"),\n    courseCode: Yup.string().required(\"Must input courseIndex\")\n  });\n\n  const onSubmit = (values, {\n    setSubmitting,\n    resetForm\n  }) => {\n    onAddCourse(values, selectedImage, isEdit, group, courseType, tabIndex, selectedDate);\n    resetForm();\n    setSubmitting(false);\n  };\n\n  return /*#__PURE__*/React.createElement(Card, {\n    className: cx(cardStyles.root, shadowStyles.root),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(CardContent, {\n    className: classes.content,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 7\n    }\n  }, preview ? null : /*#__PURE__*/React.createElement(Box, {\n    mb: 5,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h4\",\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 13\n    }\n  }, isEdit ? \"EDIT COURSE\" : \"ADD COURSE\")), /*#__PURE__*/React.createElement(Formik, {\n    initialValues: initialValues,\n    validationSchema: validationSchema,\n    onSubmit: onSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 9\n    }\n  }, ({\n    submitForm,\n    dirty,\n    isValid,\n    values,\n    ...props\n  }) => {\n    // console.log(values);\n    return /*#__PURE__*/React.createElement(Form, {\n      style: {\n        overflow: \"hidden\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Box, {\n      mb: 2,\n      display: \"flex\",\n      flexWrap: \"nowrap\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Box, {\n      flexGrow: 1,\n      alignSelf: \"flex-end\",\n      mr: 1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      style: {\n        height: \"100% !important\",\n        padding: 0\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Box, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 23\n      }\n    }, values.imageUrl ? /*#__PURE__*/React.createElement(CardMedia, {\n      className: classes.media,\n      image: values.imageUrl,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 27\n      }\n    }) : /*#__PURE__*/React.createElement(Box, {\n      m: 1,\n      p: 1,\n      border: 1,\n      height: 176,\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      borderColor: \"grey.400\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      align: \"center\",\n      color: \"textSecondary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 29\n      }\n    }, \"Please upload an image for preview\"))), /*#__PURE__*/React.createElement(Box, {\n      m: 1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(Rating, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(Box, {\n      mb: 1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(FormikField, {\n      label: \"Course Name\",\n      name: \"courseName\",\n      disabled: isEdit || preview,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 25\n      }\n    })))), /*#__PURE__*/React.createElement(Box, {\n      flexGrow: 1,\n      alignSelf: \"flex-end\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      style: {\n        height: \"100%\",\n        padding: 0\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      direction: \"column\",\n      justify: \"space-between\",\n      alignItems: \"stretch\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(FormikField, {\n      label: \"Course ID\",\n      name: \"courseId\",\n      disabled: isEdit || preview,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(FormikField, {\n      label: \"Creator\",\n      name: \"creator\",\n      disabled: preview,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(FormikField, {\n      label: \"Views\",\n      name: \"views\",\n      disabled: preview,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(Box, {\n      mx: 1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(DatePicker, {\n      disabled: preview,\n      value: selectedDate,\n      pickSelectedDate: date => setSelectedDate(date),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 27\n      }\n    })))))), /*#__PURE__*/React.createElement(Card, {\n      style: {\n        padding: 0\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(FormikField, {\n      label: \"Description\",\n      name: \"detail\",\n      disabled: preview,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(Box, {\n      display: \"flex\",\n      flexWrap: \"wrap\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Box, {\n      flexGrow: 1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(FormikSelect, {\n      label: \"Course Type\",\n      name: \"courseCode\",\n      items: courseIndex,\n      disabled: preview,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 23\n      }\n    })), /*#__PURE__*/React.createElement(Box, {\n      flexGrow: 1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(FormikSelect, {\n      label: \"Group\",\n      name: \"group\",\n      items: groupItems,\n      disabled: preview,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 23\n      }\n    }))), preview ? null : /*#__PURE__*/React.createElement(Box, {\n      m: 1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 303,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(DropzoneArea, {\n      filesLimit: 1,\n      showAlerts: false,\n      acceptedFiles: [\"image/*\"],\n      dropzoneText: \"Drag and drop an image here or click\",\n      onChange: image => setSelectedImage(image[0]),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 304,\n        columnNumber: 23\n      }\n    }))), preview ? null : /*#__PURE__*/React.createElement(Box, {\n      align: \"center\",\n      mx: 1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 316,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      disabled: loading || !isValid,\n      onClick: submitForm,\n      className: classes.button,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 317,\n        columnNumber: 21\n      }\n    }, \"Submit\")));\n  })));\n};\n\nconst mapStateToProps = state => {\n  return {\n    group: state.auth.group,\n    courseType: state.coursesManager.courseType,\n    courseIndex: state.courses.courseIndex,\n    error: state.coursesManager.error,\n    success: state.coursesManager.success,\n    loading: state.coursesManager.loading,\n    isEdit: state.coursesManager.isEdit,\n    tabIndex: state.coursesManager.tabIndex,\n    selectedCourse: state.coursesManager.selectedCourse\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onAddCourse: (values, selectedImage, isEdit, group, courseType, tabIndex, selectedDate) => dispatch(actions.addCourse(values, selectedImage, isEdit, group, courseType, tabIndex, selectedDate))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AddCourses);","map":{"version":3,"sources":["/home/sudo-byte/CourseHub-master/src/components/Courses/AddCourses.js"],"names":["React","useEffect","useState","connect","useSnackbar","Formik","Form","cx","makeStyles","Card","CardContent","useSoftRiseShadowStyles","Rating","Box","Button","Typography","CardMedia","Grid","Yup","actions","DropzoneArea","DatePicker","groupItems","FormikField","FormikSelect","useStyles","theme","button","marginTop","display","width","height","border","background","backgroundSize","color","outline","transition","cursor","backgroundPosition","formItem","margin","spacing","formControl","input","media","paddingTop","AddCourses","props","classes","preview","group","courseType","isEdit","courseIndex","selectedCourse","loading","success","error","tabIndex","onAddCourse","user","JSON","parse","localStorage","getItem","selectedImage","setSelectedImage","selectedDate","setSelectedDate","Date","enqueueSnackbar","cardStyles","shadowStyles","ngayTao","arr","split","dd","mm","yyyy","variant","anchorOrigin","vertical","horizontal","initialValues","courseId","urlName","courseName","detail","views","rate","imageUrl","dateCreated","courseCode","creator","taiKhoan","maKhoaHoc","biDanh","tenKhoaHoc","moTa","luotXem","danhGia","hinhAnh","maNhom","danhMucKhoaHoc","maDanhMucKhoahoc","nguoiTao","validationSchema","object","shape","string","required","number","date","onSubmit","values","setSubmitting","resetForm","root","content","submitForm","dirty","isValid","overflow","padding","image","mapStateToProps","state","auth","coursesManager","courses","mapDispatchToProps","dispatch","addCourse"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { useSnackbar } from \"notistack\";\r\nimport { Formik, Form } from \"formik\";\r\n\r\nimport cx from \"clsx\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nimport Card from \"@material-ui/core/Card\";\r\n\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\n\r\nimport { useSoftRiseShadowStyles } from \"@mui-treasury/styles/shadow/softRise\";\r\n\r\nimport Rating from \"../Rating/Rating\";\r\n\r\nimport { Box, Button, Typography, CardMedia, Grid } from \"@material-ui/core\";\r\n\r\nimport * as Yup from \"yup\";\r\nimport * as actions from \"../../store/actions\";\r\nimport { DropzoneArea } from \"material-ui-dropzone\";\r\nimport DatePicker from \"../DatePicker/DatePicker\";\r\n\r\nimport { groupItems } from \"./InputCustom/GroupList\";\r\nimport FormikField from \"./InputCustom/FormikField\";\r\nimport FormikSelect from \"./InputCustom/FormikSelect\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  button: {\r\n    marginTop: \"2rem\",\r\n    display: \"block\",\r\n    width: \"100%\",\r\n    height: \"3rem\",\r\n    border: \"none\",\r\n    background: \"linear-gradient(120deg, #2980b9, #8e44ad, #2980b9)\",\r\n    backgroundSize: \"200%\",\r\n    color: \"#fff\",\r\n    outline: \"none\",\r\n    transition: \"0.5s\",\r\n    cursor: \"pointer\",\r\n\r\n    \"&:hover\": {\r\n      backgroundPosition: \"right\",\r\n    },\r\n  },\r\n  formItem: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n    },\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  input: {\r\n    display: \"none\",\r\n  },\r\n  media: {\r\n    height: 0,\r\n    paddingTop: \"56.25%\", // 16:9\r\n  },\r\n}));\r\n\r\nconst AddCourses = (props) => {\r\n  const classes = useStyles();\r\n  const {\r\n    preview,\r\n    group,\r\n    courseType,\r\n    isEdit,\r\n    courseIndex,\r\n    selectedCourse,\r\n    loading,\r\n    success,\r\n    error,\r\n    tabIndex,\r\n  } = props;\r\n  const { onAddCourse } = props;\r\n\r\n  const user = JSON.parse(localStorage.getItem(\"user\"));\r\n  const [selectedImage, setSelectedImage] = useState(null);\r\n\r\n  const [selectedDate, setSelectedDate] = useState(new Date());\r\n\r\n  const { enqueueSnackbar } = useSnackbar();\r\n\r\n  const cardStyles = useStyles();\r\n  const shadowStyles = useSoftRiseShadowStyles();\r\n\r\n  useEffect(() => {\r\n    if (selectedCourse && selectedCourse.ngayTao) {\r\n      const arr = selectedCourse.ngayTao.split(\"/\");\r\n      const dd = arr[0];\r\n      const mm = arr[1];\r\n      const yyyy = arr[2];\r\n      setSelectedDate(`${yyyy}-${mm}-${dd}`);\r\n    }\r\n  }, [selectedCourse]);\r\n\r\n  useEffect(() => {\r\n    if (error) {\r\n      enqueueSnackbar(error, {\r\n        variant: \"error\",\r\n        anchorOrigin: {\r\n          vertical: \"bottom\",\r\n          horizontal: \"right\",\r\n        },\r\n      });\r\n    } else if (success) {\r\n      enqueueSnackbar(success, {\r\n        variant: \"success\",\r\n        anchorOrigin: {\r\n          vertical: \"bottom\",\r\n          horizontal: \"right\",\r\n        },\r\n      });\r\n    }\r\n  }, [error, success, enqueueSnackbar]);\r\n\r\n  let initialValues = {\r\n    courseId: \"\",\r\n    urlName: \"\",\r\n    courseName: \"\",\r\n    detail: \"\",\r\n    views: 0,\r\n    rate: 0,\r\n    imageUrl: \"\",\r\n    group: group,\r\n    dateCreated: selectedDate,\r\n    courseCode: \"\",\r\n    creator: user ? user.taiKhoan : \"\",\r\n  };\r\n\r\n  if ((isEdit && selectedCourse) || (preview && selectedCourse)) {\r\n    initialValues = {\r\n      courseId: selectedCourse.maKhoaHoc,\r\n      urlName: selectedCourse.biDanh,\r\n      courseName: selectedCourse.tenKhoaHoc,\r\n      detail: selectedCourse.moTa,\r\n      views: selectedCourse.luotXem,\r\n      rate: selectedCourse.danhGia,\r\n      imageUrl: selectedCourse.hinhAnh,\r\n      group: selectedCourse.maNhom,\r\n      dateCreated: selectedDate,\r\n      courseCode: selectedCourse.danhMucKhoaHoc.maDanhMucKhoahoc,\r\n      creator: selectedCourse.nguoiTao.taiKhoan,\r\n    };\r\n  }\r\n\r\n  let validationSchema = Yup.object().shape({\r\n    courseId: Yup.string().required(\"Must enter a courseId\"),\r\n    urlName: Yup.string(),\r\n    courseName: Yup.string().required(\"Must enter a courseName\"),\r\n    detail: Yup.string().required(\"Detail is required\"),\r\n    views: Yup.number(),\r\n    imageUrl: Yup.string(),\r\n    group: Yup.string().required(\"Group is required\"),\r\n    dateCreated: Yup.date().required(\"Must enter a created day\"),\r\n    creator: Yup.string().required(\"Must input creator\"),\r\n    courseCode: Yup.string().required(\"Must input courseIndex\"),\r\n  });\r\n\r\n  const onSubmit = (values, { setSubmitting, resetForm }) => {\r\n    onAddCourse(\r\n      values,\r\n      selectedImage,\r\n      isEdit,\r\n      group,\r\n      courseType,\r\n      tabIndex,\r\n      selectedDate\r\n    );\r\n    resetForm();\r\n    setSubmitting(false);\r\n  };\r\n\r\n  return (\r\n    <Card className={cx(cardStyles.root, shadowStyles.root)}>\r\n      <CardContent className={classes.content}>\r\n        {preview ? null : (\r\n          <Box mb={5}>\r\n            <Typography variant=\"h4\" align=\"center\">\r\n              {isEdit ? \"EDIT COURSE\" : \"ADD COURSE\"}\r\n            </Typography>\r\n          </Box>\r\n        )}\r\n\r\n        <Formik\r\n          initialValues={initialValues}\r\n          validationSchema={validationSchema}\r\n          onSubmit={onSubmit}\r\n        >\r\n          {({ submitForm, dirty, isValid, values, ...props }) => {\r\n            // console.log(values);\r\n\r\n            return (\r\n              <Form style={{ overflow: \"hidden\" }}>\r\n                <Box mb={2} display={\"flex\"} flexWrap=\"nowrap\">\r\n                  <Box flexGrow={1} alignSelf=\"flex-end\" mr={1}>\r\n                    <Card style={{ height: \"100% !important\", padding: 0 }}>\r\n                      <Box>\r\n                        {values.imageUrl ? (\r\n                          <CardMedia\r\n                            className={classes.media}\r\n                            image={values.imageUrl}\r\n                          />\r\n                        ) : (\r\n                          <Box\r\n                            m={1}\r\n                            p={1}\r\n                            border={1}\r\n                            height={176}\r\n                            display={\"flex\"}\r\n                            alignItems=\"center\"\r\n                            justifyContent=\"center\"\r\n                            borderColor=\"grey.400\"\r\n                          >\r\n                            <Typography align=\"center\" color=\"textSecondary\">\r\n                              Please upload an image for preview\r\n                            </Typography>\r\n                          </Box>\r\n                        )}\r\n                      </Box>\r\n                      <Box m={1}>\r\n                        <Rating />\r\n                      </Box>\r\n                      <Box mb={1}>\r\n                        <FormikField\r\n                          label=\"Course Name\"\r\n                          name=\"courseName\"\r\n                          disabled={isEdit || preview}\r\n                        />\r\n                      </Box>\r\n                    </Card>\r\n                  </Box>\r\n\r\n                  <Box flexGrow={1} alignSelf=\"flex-end\">\r\n                    <Card style={{ height: \"100%\", padding: 0 }}>\r\n                      <Grid\r\n                        container\r\n                        direction=\"column\"\r\n                        justify=\"space-between\"\r\n                        alignItems=\"stretch\"\r\n                      >\r\n                        <FormikField\r\n                          label=\"Course ID\"\r\n                          name=\"courseId\"\r\n                          disabled={isEdit || preview}\r\n                        />\r\n                        <FormikField\r\n                          label=\"Creator\"\r\n                          name=\"creator\"\r\n                          disabled={preview}\r\n                        />\r\n                        <FormikField\r\n                          label=\"Views\"\r\n                          name=\"views\"\r\n                          disabled={preview}\r\n                        />\r\n                        <Box mx={1}>\r\n                          <DatePicker\r\n                            disabled={preview}\r\n                            value={selectedDate}\r\n                            pickSelectedDate={(date) => setSelectedDate(date)}\r\n                          />\r\n                        </Box>\r\n                      </Grid>\r\n                    </Card>\r\n                  </Box>\r\n                </Box>\r\n\r\n                <Card style={{ padding: 0 }}>\r\n                  <FormikField\r\n                    label=\"Description\"\r\n                    name=\"detail\"\r\n                    disabled={preview}\r\n                  />\r\n                  <Box display={\"flex\"} flexWrap=\"wrap\">\r\n                    <Box flexGrow={1}>\r\n                      <FormikSelect\r\n                        label=\"Course Type\"\r\n                        name=\"courseCode\"\r\n                        items={courseIndex}\r\n                        disabled={preview}\r\n                      />\r\n                    </Box>\r\n                    <Box flexGrow={1}>\r\n                      <FormikSelect\r\n                        label=\"Group\"\r\n                        name=\"group\"\r\n                        items={groupItems}\r\n                        disabled={preview}\r\n                      />\r\n                    </Box>\r\n                  </Box>\r\n\r\n                  {/* {preview ? null : (\r\n                    <Box m={1}>\r\n                      <FormikFieldIcon label=\"Image URL\" name=\"imageUrl\" />\r\n                    </Box>\r\n                  )} */}\r\n\r\n                  {preview ? null : (\r\n                    <Box m={1}>\r\n                      <DropzoneArea\r\n                        filesLimit={1}\r\n                        showAlerts={false}\r\n                        acceptedFiles={[\"image/*\"]}\r\n                        dropzoneText={\"Drag and drop an image here or click\"}\r\n                        onChange={(image) => setSelectedImage(image[0])}\r\n                      />\r\n                    </Box>\r\n                  )}\r\n                </Card>\r\n\r\n                {preview ? null : (\r\n                  <Box align=\"center\" mx={1}>\r\n                    <Button\r\n                      variant=\"contained\"\r\n                      color=\"primary\"\r\n                      disabled={loading || !isValid}\r\n                      onClick={submitForm}\r\n                      className={classes.button}\r\n                    >\r\n                      Submit\r\n                    </Button>\r\n                  </Box>\r\n                )}\r\n              </Form>\r\n            );\r\n          }}\r\n        </Formik>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    group: state.auth.group,\r\n    courseType: state.coursesManager.courseType,\r\n    courseIndex: state.courses.courseIndex,\r\n    error: state.coursesManager.error,\r\n    success: state.coursesManager.success,\r\n    loading: state.coursesManager.loading,\r\n    isEdit: state.coursesManager.isEdit,\r\n    tabIndex: state.coursesManager.tabIndex,\r\n    selectedCourse: state.coursesManager.selectedCourse,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onAddCourse: (\r\n      values,\r\n      selectedImage,\r\n      isEdit,\r\n      group,\r\n      courseType,\r\n      tabIndex,\r\n      selectedDate\r\n    ) =>\r\n      dispatch(\r\n        actions.addCourse(\r\n          values,\r\n          selectedImage,\r\n          isEdit,\r\n          group,\r\n          courseType,\r\n          tabIndex,\r\n          selectedDate\r\n        )\r\n      ),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AddCourses);\r\n"]},"metadata":{},"sourceType":"module"}