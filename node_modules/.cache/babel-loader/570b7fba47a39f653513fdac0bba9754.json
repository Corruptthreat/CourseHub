{"ast":null,"code":"var _jsxFileName = \"/home/sudo-byte/CourseHub-master/src/containers/Auth/Auth.js\";\nimport React, { Fragment, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Formik, Form, Field, useField } from \"formik\";\nimport { Link } from \"react-router-dom\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Typography, Box, CssBaseline, FormGroup } from \"@material-ui/core\";\nimport { NativeSelect } from \"@material-ui/core\";\nimport { useSnackbar } from \"notistack\";\nimport * as Yup from \"yup\";\nimport * as actions from \"../../store/actions\";\nconst useStyles = makeStyles(theme => ({\n  container: {\n    minHeight: \"100vh\",\n    background: \"linear-gradient(120deg, #2980b9, #8e44ad)\"\n  },\n  loginForm: {\n    width: \"20rem\",\n    background: \"#f1f1f1\",\n    minHeight: \"35rem\",\n    padding: \"0 2rem\",\n    borderRadius: \"1rem\",\n    position: \"absolute\",\n    left: \"50%\",\n    top: \"50%\",\n    transform: \"translate(-50%, -50%)\"\n  },\n  formItem: {\n    width: \"100%\",\n    position: \"relative\",\n    height: \"3rem\",\n    margin: \"0.2rem 0\",\n    overflow: \"hidden\",\n    \"& input\": {\n      width: \"100%\",\n      height: \"100%\",\n      color: \"#333\",\n      outline: \"none\",\n      border: \"none\",\n      background: \"none\",\n      padding: \"2rem 0\",\n      \"&:focus+label span, &:valid+label span\": {\n        transform: \"translateY(-90%)\",\n        color: \"#adadad\",\n        fontSize: \"0.9rem\"\n      },\n      \"&:focus+label::after, &:valid+label::after\": {\n        transform: \"translateX(0)\"\n      }\n    },\n    \"& label\": {\n      position: \"absolute\",\n      bottom: 0,\n      left: 0,\n      width: \"100%\",\n      height: \"100%\",\n      pointerEvents: \"none\",\n      borderBottom: \"1px solid #adadad\",\n      \"&:after\": {\n        content: '\"\"',\n        position: \"absolute\",\n        left: 0,\n        bottom: \"-0.15rem\",\n        width: \"100%\",\n        height: \"100%\",\n        borderBottom: \"3px solid #2980b9\",\n        borderImage: \"linear-gradient(120deg, #2980b9, #8e44ad) 1 round\",\n        transform: \"translateX(-100%)\",\n        transition: \"transform 0.6s ease\"\n      },\n      \"& span\": {\n        position: \"absolute\",\n        bottom: \"0.3rem\",\n        left: 0,\n        color: \"#adadad\",\n        transition: \"all 0.3s ease\"\n      }\n    }\n  },\n  logbtn: {\n    marginTop: \"2rem\",\n    display: \"block\",\n    width: \"100%\",\n    height: \"3rem\",\n    border: \"none\",\n    borderRadius: \"3px\",\n    background: \"linear-gradient(120deg, #2980b9, #8e44ad, #2980b9)\",\n    backgroundSize: \"200%\",\n    color: \"#fff\",\n    outline: \"none\",\n    transition: \"0.5s\",\n    cursor: \"pointer\",\n    \"&:hover\": {\n      backgroundPosition: \"right\"\n    }\n  },\n  bottomText: {\n    textAlign: \"center\",\n    fontSize: \"0.9rem\"\n  },\n  link: {\n    textDecoration: \"none\"\n  }\n}));\n\nconst CustomInput = ({\n  label,\n  ...props\n}) => {\n  const classes = useStyles();\n  const [field, meta] = useField(props);\n  const {\n    enqueueSnackbar\n  } = useSnackbar();\n  useEffect(() => {\n    if (meta.touched && meta.error) {\n      enqueueSnackbar(meta.error, {\n        preventDuplicate: true,\n        variant: \"info\"\n      });\n    }\n  }, [meta, enqueueSnackbar]);\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    className: classes.formItem,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Typography, Object.assign({\n    component: Field,\n    required: true\n  }, field, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Typography, {\n    component: \"label\",\n    htmlFor: props.id || props.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 11\n    }\n  }, label))));\n};\n\nexport const Auth = props => {\n  const classes = useStyles();\n  const {\n    error,\n    success\n  } = props;\n  const {\n    onAuth,\n    onMessageReset,\n    history,\n    match\n  } = props;\n  const isSignUp = match && match.url === \"/sign-up\";\n  const {\n    enqueueSnackbar\n  } = useSnackbar();\n  let initialValues = {\n    username: \"\",\n    password: \"\"\n  };\n  let validationSchema = Yup.object().shape({\n    username: Yup.string().min(3, \"Name must be at least 3 characters\").max(15, \"Name must be 15 characters or less\").required(\"Must enter a name\"),\n    password: Yup.string().min(3, \"Password must be at least 3 characters\").required(\"Password is required\")\n  });\n\n  if (isSignUp) {\n    initialValues = {\n      username: \"\",\n      password: \"\",\n      confirmPassword: \"\",\n      name: \"\",\n      phone: \"\",\n      group: \"GP08\",\n      email: \"\"\n    };\n    validationSchema = Yup.object().shape({\n      username: Yup.string().min(3, \"Username must be at least 3 characters\").max(15, \"Username must be 15 characters or less\").required(\"Must enter a username\"),\n      password: Yup.string().min(3, \"Password must be at least 3 characters\").required(\"Password is required\"),\n      confirmPassword: Yup.string().oneOf([Yup.ref(\"password\"), null], \"Passwords must match\").required(\"Confirm Password is required\"),\n      name: Yup.string().min(3, \"Name must be at least 3 characters\").max(15, \"Name must be 15 characters or less\").required(\"Must enter a name\"),\n      group: Yup.string().required(\"Group is required\"),\n      phone: Yup.number().min(10, \"Phone number must be at least 10 characters\").required(\"Must enter a phone number\"),\n      email: Yup.string().email(\"Must be a valid email address\").required(\"Must enter an email\")\n    });\n  }\n\n  useEffect(() => {\n    if (error) {\n      enqueueSnackbar(error, {\n        variant: \"error\"\n      });\n    } else if (success) {\n      enqueueSnackbar(success, {\n        variant: \"success\"\n      });\n    }\n\n    onMessageReset();\n  }, [error, success, enqueueSnackbar, onMessageReset]);\n\n  const onSubmit = (values, {\n    setSubmitting\n  }) => {\n    onAuth(values, history, isSignUp);\n    setSubmitting(false);\n  };\n\n  return /*#__PURE__*/React.createElement(Box, {\n    className: classes.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(CssBaseline, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Formik, {\n    initialValues: initialValues,\n    validationSchema: validationSchema,\n    onSubmit: onSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 7\n    }\n  }, props => /*#__PURE__*/React.createElement(Form, {\n    className: classes.loginForm,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    mt: isSignUp ? 5 : 10,\n    mb: isSignUp ? 3 : 5,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h3\",\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 15\n    }\n  }, isSignUp ? \"Sign Up\" : \"Login\")), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(CustomInput, {\n    label: \"Username\",\n    name: \"username\",\n    type: \"text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(CustomInput, {\n    label: \"Password\",\n    name: \"password\",\n    type: \"password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 15\n    }\n  })), isSignUp ? /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(CustomInput, {\n    label: \"Confirm Password\",\n    name: \"confirmPassword\",\n    type: \"password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(CustomInput, {\n    label: \"Name\",\n    name: \"name\",\n    type: \"text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(CustomInput, {\n    label: \"Phone\",\n    name: \"phone\",\n    type: \"text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(CustomInput, {\n    label: \"Email\",\n    name: \"email\",\n    type: \"email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(NativeSelect, {\n    value: props.values.group,\n    onChange: props.handleChange,\n    onBlur: props.handleBlur,\n    name: \"group\",\n    style: {\n      marginTop: 16\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"GP01\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 19\n    }\n  }, \"Group 01\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"GP02\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 19\n    }\n  }, \"Group 02\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"GP03\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 19\n    }\n  }, \"Group 03\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"GP04\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 19\n    }\n  }, \"Group 04\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"GP05\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 19\n    }\n  }, \"Group 05\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"GP06\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 19\n    }\n  }, \"Group 06\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"GP07\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 19\n    }\n  }, \"Group 07\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"GP08\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 19\n    }\n  }, \"Group 08\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"GP09\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 19\n    }\n  }, \"Group 09\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"GP10\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 19\n    }\n  }, \"Group 10\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"GP11\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 19\n    }\n  }, \"Group 11\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"GP12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 19\n    }\n  }, \"Group 12\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"GP13\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 19\n    }\n  }, \"Group 13\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"GP14\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 19\n    }\n  }, \"Group 14\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"GP15\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 19\n    }\n  }, \"Group 15\"))) : null, /*#__PURE__*/React.createElement(Typography, {\n    component: \"button\",\n    type: \"submit\",\n    className: classes.logbtn,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 13\n    }\n  }, props.isSubmitting ? \"Loading...\" : isSignUp ? \"Sign Up\" : \"Login\"), /*#__PURE__*/React.createElement(Box, {\n    mt: isSignUp ? 5 : 10,\n    mb: isSignUp ? 5 : 0,\n    className: classes.bottomText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    component: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 287,\n      columnNumber: 15\n    }\n  }, isSignUp ? \"Already have an account?\" : \"Don't have an account?\", \" \", isSignUp ? /*#__PURE__*/React.createElement(Link, {\n    to: \"/sign-in\",\n    className: classes.link,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 292,\n      columnNumber: 19\n    }\n  }, \"Sign In\") : /*#__PURE__*/React.createElement(Link, {\n    to: \"/sign-up\",\n    className: classes.link,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 296,\n      columnNumber: 19\n    }\n  }, \"Sign Up\"))))));\n};\n\nconst mapStateToProps = state => {\n  return {\n    error: state.auth.error,\n    success: state.auth.success // loading: state.auth.loading,\n    // isAuthenticated: state.auth.token !== null,\n    // authRedirectPath: state.auth.authRedirectPath,\n\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onAuth: (values, history, isSignUp) => dispatch(actions.auth(values, history, isSignUp)),\n    onMessageReset: () => dispatch(actions.authStart())\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Auth);","map":{"version":3,"sources":["/home/sudo-byte/CourseHub-master/src/containers/Auth/Auth.js"],"names":["React","Fragment","useEffect","connect","Formik","Form","Field","useField","Link","makeStyles","Typography","Box","CssBaseline","FormGroup","NativeSelect","useSnackbar","Yup","actions","useStyles","theme","container","minHeight","background","loginForm","width","padding","borderRadius","position","left","top","transform","formItem","height","margin","overflow","color","outline","border","fontSize","bottom","pointerEvents","borderBottom","content","borderImage","transition","logbtn","marginTop","display","backgroundSize","cursor","backgroundPosition","bottomText","textAlign","link","textDecoration","CustomInput","label","props","classes","field","meta","enqueueSnackbar","touched","error","preventDuplicate","variant","id","name","Auth","success","onAuth","onMessageReset","history","match","isSignUp","url","initialValues","username","password","validationSchema","object","shape","string","min","max","required","confirmPassword","phone","group","email","oneOf","ref","number","onSubmit","values","setSubmitting","handleChange","handleBlur","isSubmitting","mapStateToProps","state","auth","mapDispatchToProps","dispatch","authStart"],"mappings":"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","sourcesContent":["import React, { Fragment, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Formik, Form, Field, useField } from \"formik\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Typography, Box, CssBaseline, FormGroup } from \"@material-ui/core\";\r\nimport { NativeSelect } from \"@material-ui/core\";\r\n\r\nimport { useSnackbar } from \"notistack\";\r\n\r\nimport * as Yup from \"yup\";\r\nimport * as actions from \"../../store/actions\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  container: {\r\n    minHeight: \"100vh\",\r\n    background: \"linear-gradient(120deg, #2980b9, #8e44ad)\",\r\n  },\r\n\r\n  loginForm: {\r\n    width: \"20rem\",\r\n    background: \"#f1f1f1\",\r\n    minHeight: \"35rem\",\r\n    padding: \"0 2rem\",\r\n    borderRadius: \"1rem\",\r\n    position: \"absolute\",\r\n    left: \"50%\",\r\n    top: \"50%\",\r\n    transform: \"translate(-50%, -50%)\",\r\n  },\r\n\r\n  formItem: {\r\n    width: \"100%\",\r\n    position: \"relative\",\r\n    height: \"3rem\",\r\n    margin: \"0.2rem 0\",\r\n    overflow: \"hidden\",\r\n\r\n    \"& input\": {\r\n      width: \"100%\",\r\n      height: \"100%\",\r\n      color: \"#333\",\r\n      outline: \"none\",\r\n      border: \"none\",\r\n      background: \"none\",\r\n      padding: \"2rem 0\",\r\n\r\n      \"&:focus+label span, &:valid+label span\": {\r\n        transform: \"translateY(-90%)\",\r\n        color: \"#adadad\",\r\n        fontSize: \"0.9rem\",\r\n      },\r\n\r\n      \"&:focus+label::after, &:valid+label::after\": {\r\n        transform: \"translateX(0)\",\r\n      },\r\n    },\r\n\r\n    \"& label\": {\r\n      position: \"absolute\",\r\n      bottom: 0,\r\n      left: 0,\r\n      width: \"100%\",\r\n      height: \"100%\",\r\n      pointerEvents: \"none\",\r\n      borderBottom: \"1px solid #adadad\",\r\n\r\n      \"&:after\": {\r\n        content: '\"\"',\r\n        position: \"absolute\",\r\n        left: 0,\r\n        bottom: \"-0.15rem\",\r\n        width: \"100%\",\r\n        height: \"100%\",\r\n        borderBottom: \"3px solid #2980b9\",\r\n        borderImage: \"linear-gradient(120deg, #2980b9, #8e44ad) 1 round\",\r\n        transform: \"translateX(-100%)\",\r\n        transition: \"transform 0.6s ease\",\r\n      },\r\n\r\n      \"& span\": {\r\n        position: \"absolute\",\r\n        bottom: \"0.3rem\",\r\n        left: 0,\r\n        color: \"#adadad\",\r\n        transition: \"all 0.3s ease\",\r\n      },\r\n    },\r\n  },\r\n\r\n  logbtn: {\r\n    marginTop: \"2rem\",\r\n    display: \"block\",\r\n    width: \"100%\",\r\n    height: \"3rem\",\r\n    border: \"none\",\r\n    borderRadius: \"3px\",\r\n    background: \"linear-gradient(120deg, #2980b9, #8e44ad, #2980b9)\",\r\n    backgroundSize: \"200%\",\r\n    color: \"#fff\",\r\n    outline: \"none\",\r\n    transition: \"0.5s\",\r\n    cursor: \"pointer\",\r\n\r\n    \"&:hover\": {\r\n      backgroundPosition: \"right\",\r\n    },\r\n  },\r\n\r\n  bottomText: {\r\n    textAlign: \"center\",\r\n    fontSize: \"0.9rem\",\r\n  },\r\n\r\n  link: {\r\n    textDecoration: \"none\",\r\n  },\r\n}));\r\n\r\nconst CustomInput = ({ label, ...props }) => {\r\n  const classes = useStyles();\r\n  const [field, meta] = useField(props);\r\n  const { enqueueSnackbar } = useSnackbar();\r\n\r\n  useEffect(() => {\r\n    if (meta.touched && meta.error) {\r\n      enqueueSnackbar(meta.error, {\r\n        preventDuplicate: true,\r\n        variant: \"info\",\r\n      });\r\n    }\r\n  }, [meta, enqueueSnackbar]);\r\n\r\n  return (\r\n    <Fragment>\r\n      <Box className={classes.formItem}>\r\n        <Typography component={Field} required {...field} {...props} />\r\n        <Typography component=\"label\" htmlFor={props.id || props.name}>\r\n          <span>{label}</span>\r\n        </Typography>\r\n      </Box>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport const Auth = (props) => {\r\n  const classes = useStyles();\r\n  const { error, success } = props;\r\n  const { onAuth, onMessageReset, history, match } = props;\r\n  const isSignUp = match && match.url === \"/sign-up\";\r\n\r\n  const { enqueueSnackbar } = useSnackbar();\r\n\r\n  let initialValues = { username: \"\", password: \"\" };\r\n  let validationSchema = Yup.object().shape({\r\n    username: Yup.string()\r\n      .min(3, \"Name must be at least 3 characters\")\r\n      .max(15, \"Name must be 15 characters or less\")\r\n      .required(\"Must enter a name\"),\r\n    password: Yup.string()\r\n      .min(3, \"Password must be at least 3 characters\")\r\n      .required(\"Password is required\"),\r\n  });\r\n\r\n  if (isSignUp) {\r\n    initialValues = {\r\n      username: \"\",\r\n      password: \"\",\r\n      confirmPassword: \"\",\r\n      name: \"\",\r\n      phone: \"\",\r\n      group: \"GP08\",\r\n      email: \"\",\r\n    };\r\n    validationSchema = Yup.object().shape({\r\n      username: Yup.string()\r\n        .min(3, \"Username must be at least 3 characters\")\r\n        .max(15, \"Username must be 15 characters or less\")\r\n        .required(\"Must enter a username\"),\r\n      password: Yup.string()\r\n        .min(3, \"Password must be at least 3 characters\")\r\n        .required(\"Password is required\"),\r\n      confirmPassword: Yup.string()\r\n        .oneOf([Yup.ref(\"password\"), null], \"Passwords must match\")\r\n        .required(\"Confirm Password is required\"),\r\n      name: Yup.string()\r\n        .min(3, \"Name must be at least 3 characters\")\r\n        .max(15, \"Name must be 15 characters or less\")\r\n        .required(\"Must enter a name\"),\r\n      group: Yup.string().required(\"Group is required\"),\r\n      phone: Yup.number()\r\n        .min(10, \"Phone number must be at least 10 characters\")\r\n        .required(\"Must enter a phone number\"),\r\n      email: Yup.string()\r\n        .email(\"Must be a valid email address\")\r\n        .required(\"Must enter an email\"),\r\n    });\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (error) {\r\n      enqueueSnackbar(error, { variant: \"error\" });\r\n    } else if (success) {\r\n      enqueueSnackbar(success, { variant: \"success\" });\r\n    }\r\n    onMessageReset();\r\n  }, [error, success, enqueueSnackbar, onMessageReset]);\r\n\r\n  const onSubmit = (values, { setSubmitting }) => {\r\n    onAuth(values, history, isSignUp);\r\n    setSubmitting(false);\r\n  };\r\n\r\n  return (\r\n    <Box className={classes.container}>\r\n      <CssBaseline />\r\n      <Formik\r\n        initialValues={initialValues}\r\n        validationSchema={validationSchema}\r\n        onSubmit={onSubmit}\r\n      >\r\n        {(props) => (\r\n          <Form className={classes.loginForm}>\r\n            <Box mt={isSignUp ? 5 : 10} mb={isSignUp ? 3 : 5}>\r\n              <Typography variant=\"h3\" align=\"center\">\r\n                {isSignUp ? \"Sign Up\" : \"Login\"}\r\n              </Typography>\r\n            </Box>\r\n            <FormGroup>\r\n              <CustomInput label=\"Username\" name=\"username\" type=\"text\" />\r\n              <CustomInput label=\"Password\" name=\"password\" type=\"password\" />\r\n            </FormGroup>\r\n            {isSignUp ? (\r\n              <FormGroup>\r\n                <CustomInput\r\n                  label=\"Confirm Password\"\r\n                  name=\"confirmPassword\"\r\n                  type=\"password\"\r\n                />\r\n                <CustomInput label=\"Name\" name=\"name\" type=\"text\" />\r\n                <CustomInput label=\"Phone\" name=\"phone\" type=\"text\" />\r\n                <CustomInput label=\"Email\" name=\"email\" type=\"email\" />\r\n                <NativeSelect\r\n                  value={props.values.group}\r\n                  onChange={props.handleChange}\r\n                  onBlur={props.handleBlur}\r\n                  name=\"group\"\r\n                  style={{ marginTop: 16 }}\r\n                >\r\n                  <option value={\"GP01\"}>Group 01</option>\r\n                  <option value={\"GP02\"}>Group 02</option>\r\n                  <option value={\"GP03\"}>Group 03</option>\r\n                  <option value={\"GP04\"}>Group 04</option>\r\n                  <option value={\"GP05\"}>Group 05</option>\r\n                  <option value={\"GP06\"}>Group 06</option>\r\n                  <option value={\"GP07\"}>Group 07</option>\r\n                  <option value={\"GP08\"}>Group 08</option>\r\n                  <option value={\"GP09\"}>Group 09</option>\r\n                  <option value={\"GP10\"}>Group 10</option>\r\n                  <option value={\"GP11\"}>Group 11</option>\r\n                  <option value={\"GP12\"}>Group 12</option>\r\n                  <option value={\"GP13\"}>Group 13</option>\r\n                  <option value={\"GP14\"}>Group 14</option>\r\n                  <option value={\"GP15\"}>Group 15</option>\r\n                </NativeSelect>\r\n              </FormGroup>\r\n            ) : null}\r\n\r\n            <Typography\r\n              component=\"button\"\r\n              type=\"submit\"\r\n              className={classes.logbtn}\r\n            >\r\n              {props.isSubmitting\r\n                ? \"Loading...\"\r\n                : isSignUp\r\n                ? \"Sign Up\"\r\n                : \"Login\"}\r\n            </Typography>\r\n\r\n            <Box\r\n              mt={isSignUp ? 5 : 10}\r\n              mb={isSignUp ? 5 : 0}\r\n              className={classes.bottomText}\r\n            >\r\n              <Typography component=\"p\">\r\n                {isSignUp\r\n                  ? \"Already have an account?\"\r\n                  : \"Don't have an account?\"}{\" \"}\r\n                {isSignUp ? (\r\n                  <Link to=\"/sign-in\" className={classes.link}>\r\n                    Sign In\r\n                  </Link>\r\n                ) : (\r\n                  <Link to=\"/sign-up\" className={classes.link}>\r\n                    Sign Up\r\n                  </Link>\r\n                )}\r\n              </Typography>\r\n            </Box>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </Box>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    error: state.auth.error,\r\n    success: state.auth.success,\r\n    // loading: state.auth.loading,\r\n    // isAuthenticated: state.auth.token !== null,\r\n    // authRedirectPath: state.auth.authRedirectPath,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onAuth: (values, history, isSignUp) =>\r\n      dispatch(actions.auth(values, history, isSignUp)),\r\n    onMessageReset: () => dispatch(actions.authStart()),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Auth);\r\n"]},"metadata":{},"sourceType":"module"}