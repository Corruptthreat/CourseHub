{"ast":null,"code":"import React,{useEffect,Fragment}from\"react\";import{connect}from\"react-redux\";import*as actions from\"../../store/actions\";import{makeStyles}from\"@material-ui/core/styles\";import{List,ListItem,Tooltip}from\"@material-ui/core\";import{Fab,Box,TextField,Grid}from\"@material-ui/core\";import AddIcon from\"@material-ui/icons/Add\";import Spinner from\"../UI/Spinner/Spinner\";import CourseCardItem from\"./CourseCardItem\";import ChooseGroup from\"./InputCustom/ChooseGroup\";import DataLength from\"../DataDisplay/DataLength\";var useStyles=makeStyles(function(theme){return{courseItems:{zIndex:10,width:\"100%\",minWidth:350,backgroundColor:theme.palette.background.paper},courseList:{flexGrow:1,height:\"75vh\",overflowY:\"auto\",\"@media (max-width: 836px)\":{height:\"250px\"}},childMargin:{\"& > *\":{margin:theme.spacing(0)}}};});function CourseList(props){var classes=useStyles();var courseList=props.courseList,courseType=props.courseType,group=props.group,loading=props.loading;var onFetchCourseList=props.onFetchCourseList,onAddCourseClick=props.onAddCourseClick,onFetchCourseIndex=props.onFetchCourseIndex;useEffect(function(){onFetchCourseIndex();},[onFetchCourseIndex]);useEffect(function(){onFetchCourseList(null,group,courseType);},[onFetchCourseList,group,courseType]);var handleAddCourseClick=function handleAddCourseClick(){onAddCourseClick();};var courseListRender=/*#__PURE__*/React.createElement(Spinner,null);if(courseList&&courseList.length>0){courseListRender=courseList.map(function(course,index){return/*#__PURE__*/React.createElement(Grid,{item:true,key:index},/*#__PURE__*/React.createElement(CourseCardItem,{course:course}));});}return/*#__PURE__*/React.createElement(Fragment,null,/*#__PURE__*/React.createElement(List,{dense:true,className:classes.courseItems},/*#__PURE__*/React.createElement(ListItem,null,/*#__PURE__*/React.createElement(Grid,{container:true,justify:\"space-between\",alignItems:\"center\"},/*#__PURE__*/React.createElement(Fab,{color:\"primary\",size:\"small\",\"aria-label\":\"add\",onClick:function onClick(){return handleAddCourseClick();},disabled:loading},/*#__PURE__*/React.createElement(Tooltip,{title:\"Add\",placement:\"right\"},/*#__PURE__*/React.createElement(AddIcon,null))),courseList&&courseList.length?/*#__PURE__*/React.createElement(DataLength,{items:courseList.length,type:\"courses\"}):null,/*#__PURE__*/React.createElement(ChooseGroup,null))),/*#__PURE__*/React.createElement(ListItem,null,/*#__PURE__*/React.createElement(Box,{mb:1,mr:1,width:\"100%\"},/*#__PURE__*/React.createElement(TextField,{id:\"filled-search\",label:\"Search Course...\",type:\"search\",fullWidth:true,onChange:function onChange(event){return onFetchCourseList(event.target.value,group,courseType);}})))),/*#__PURE__*/React.createElement(Box,{mx:2},/*#__PURE__*/React.createElement(Grid,{container:true,spacing:2,justify:\"center\",className:classes.courseList},courseListRender)));}var mapStateToProps=function mapStateToProps(state){return{group:state.auth.group,courseList:state.coursesManager.courseList,courseType:state.coursesManager.courseType,error:state.coursesManager.error,success:state.coursesManager.success,loading:state.coursesManager.loading};};var mapDispatchToProps=function mapDispatchToProps(dispatch){return{onFetchCourseIndex:function onFetchCourseIndex(){return dispatch(actions.fetchCourseIndex());},onFetchCourseList:function onFetchCourseList(keyWord,group,courseType){return dispatch(actions.fetchCoursesList(keyWord,group,courseType));},onAddCourseClick:function onAddCourseClick(){return dispatch(actions.addCourseClick());}};};export default connect(mapStateToProps,mapDispatchToProps)(CourseList);","map":{"version":3,"sources":["/home/sudo-byte/CourseHub-master/src/components/Courses/CourseList.js"],"names":["React","useEffect","Fragment","connect","actions","makeStyles","List","ListItem","Tooltip","Fab","Box","TextField","Grid","AddIcon","Spinner","CourseCardItem","ChooseGroup","DataLength","useStyles","theme","courseItems","zIndex","width","minWidth","backgroundColor","palette","background","paper","courseList","flexGrow","height","overflowY","childMargin","margin","spacing","CourseList","props","classes","courseType","group","loading","onFetchCourseList","onAddCourseClick","onFetchCourseIndex","handleAddCourseClick","courseListRender","length","map","course","index","event","target","value","mapStateToProps","state","auth","coursesManager","error","success","mapDispatchToProps","dispatch","fetchCourseIndex","keyWord","fetchCoursesList","addCourseClick"],"mappings":"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","sourcesContent":["import React, { useEffect, Fragment } from \"react\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport * as actions from \"../../store/actions\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nimport { List, ListItem, Tooltip } from \"@material-ui/core\";\r\nimport { Fab, Box, TextField, Grid } from \"@material-ui/core\";\r\n\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\n\r\nimport Spinner from \"../UI/Spinner/Spinner\";\r\nimport CourseCardItem from \"./CourseCardItem\";\r\nimport ChooseGroup from \"./InputCustom/ChooseGroup\";\r\nimport DataLength from \"../DataDisplay/DataLength\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  courseItems: {\r\n    zIndex: 10,\r\n    width: \"100%\",\r\n    minWidth: 350,\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n  courseList: {\r\n    flexGrow: 1,\r\n    height: \"75vh\",\r\n    overflowY: \"auto\",\r\n    \"@media (max-width: 836px)\": {\r\n      height: \"250px\",\r\n    },\r\n  },\r\n  childMargin: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(0),\r\n    },\r\n  },\r\n}));\r\n\r\nfunction CourseList(props) {\r\n  const classes = useStyles();\r\n\r\n  const { courseList, courseType, group, loading } = props;\r\n  const { onFetchCourseList, onAddCourseClick, onFetchCourseIndex } = props;\r\n\r\n  useEffect(() => {\r\n    onFetchCourseIndex();\r\n  }, [onFetchCourseIndex]);\r\n\r\n  useEffect(() => {\r\n    onFetchCourseList(null, group, courseType);\r\n  }, [onFetchCourseList, group, courseType]);\r\n\r\n  const handleAddCourseClick = () => {\r\n    onAddCourseClick();\r\n  };\r\n\r\n  let courseListRender = <Spinner />;\r\n\r\n  if (courseList && courseList.length > 0) {\r\n    courseListRender = courseList.map((course, index) => (\r\n      <Grid item key={index}>\r\n        <CourseCardItem course={course} />\r\n      </Grid>\r\n    ));\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <List dense className={classes.courseItems}>\r\n        <ListItem>\r\n          <Grid container justify=\"space-between\" alignItems=\"center\">\r\n            <Fab\r\n              color=\"primary\"\r\n              size=\"small\"\r\n              aria-label=\"add\"\r\n              onClick={() => handleAddCourseClick()}\r\n              disabled={loading}\r\n            >\r\n              <Tooltip title=\"Add\" placement=\"right\">\r\n                <AddIcon />\r\n              </Tooltip>\r\n            </Fab>\r\n\r\n            {courseList && courseList.length ? (\r\n              <DataLength items={courseList.length} type={\"courses\"} />\r\n            ) : null}\r\n\r\n            <ChooseGroup />\r\n          </Grid>\r\n        </ListItem>\r\n\r\n        <ListItem>\r\n          <Box mb={1} mr={1} width={\"100%\"}>\r\n            <TextField\r\n              id=\"filled-search\"\r\n              label=\"Search Course...\"\r\n              type=\"search\"\r\n              fullWidth\r\n              onChange={(event) =>\r\n                onFetchCourseList(event.target.value, group, courseType)\r\n              }\r\n            />\r\n          </Box>\r\n        </ListItem>\r\n      </List>\r\n\r\n      <Box mx={2}>\r\n        <Grid\r\n          container\r\n          spacing={2}\r\n          justify={\"center\"}\r\n          className={classes.courseList}\r\n        >\r\n          {courseListRender}\r\n        </Grid>\r\n      </Box>\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    group: state.auth.group,\r\n    courseList: state.coursesManager.courseList,\r\n    courseType: state.coursesManager.courseType,\r\n    error: state.coursesManager.error,\r\n    success: state.coursesManager.success,\r\n    loading: state.coursesManager.loading,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onFetchCourseIndex: () => dispatch(actions.fetchCourseIndex()),\r\n    onFetchCourseList: (keyWord, group, courseType) =>\r\n      dispatch(actions.fetchCoursesList(keyWord, group, courseType)),\r\n    onAddCourseClick: () => dispatch(actions.addCourseClick()),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CourseList);\r\n"]},"metadata":{},"sourceType":"module"}