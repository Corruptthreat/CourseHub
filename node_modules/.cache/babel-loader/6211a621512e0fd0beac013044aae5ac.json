{"ast":null,"code":"var _jsxFileName = \"/home/sudo-byte/CourseHub-master/src/hoc/Layout/UserLayout.js\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport * as actions from \"../../store/actions\";\nimport { SnackbarProvider } from \"notistack\";\nimport { CssBaseline } from \"@material-ui/core\";\nimport { makeStyles, responsiveFontSizes } from \"@material-ui/core/styles\";\nimport { createMuiTheme, ThemeProvider } from \"@material-ui/core/styles\";\nimport Appbar from \"../../components/Navigation/Appbar/Appbar\";\nimport SideDrawer from \"../../components/Navigation/SideDrawer/SideDrawer\"; // import theme from \"../../components/UI/Theme\";\n\nconst UserLayout = props => {\n  const {\n    sideOpen,\n    sideDraw,\n    darkTheme\n  } = props;\n  const {\n    onSideOpen,\n    onDrawOpen,\n    onDrawclose\n  } = props;\n  const localTheme = JSON.parse(localStorage.getItem(\"darkTheme\"));\n  let isTheme = darkTheme;\n\n  if (!darkTheme) {\n    isTheme = localTheme;\n  }\n\n  const theme = responsiveFontSizes(createMuiTheme({\n    palette: {\n      type: isTheme ? \"dark\" : \"light\"\n    },\n    mixins: {\n      toolbar: {\n        height: 56\n      }\n    }\n  }));\n  const useStyles = makeStyles(theme => ({\n    root: {\n      display: \"flex\"\n    },\n    toolbar: {\n      marginBottom: 48\n    },\n    content: {\n      flexGrow: 1,\n      overflow: \"hidden\",\n      paddingTop: theme.spacing(1)\n    }\n  }));\n  const classes = useStyles();\n  return /*#__PURE__*/React.createElement(ThemeProvider, {\n    theme: theme,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(SnackbarProvider, {\n    preventDuplicate: true,\n    maxSnack: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CssBaseline, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Appbar, {\n    openToggleClicked: onSideOpen,\n    drawerToggleClicked: onDrawOpen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(SideDrawer, {\n    openSidebar: sideOpen,\n    drawSidebar: sideDraw,\n    open: onDrawOpen,\n    close: onDrawclose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"main\", {\n    className: classes.content,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.toolbar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }\n  }), props.children))));\n};\n\nconst mapStateToProps = state => {\n  return {\n    sideOpen: state.ui.sideOpen,\n    sideDraw: state.ui.sideDraw,\n    darkTheme: state.ui.darkTheme\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onSideOpen: () => dispatch(actions.openSidebar()),\n    onDrawOpen: () => dispatch(actions.drawOpen()),\n    onDrawclose: () => dispatch(actions.drawClose())\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UserLayout);","map":{"version":3,"sources":["/home/sudo-byte/CourseHub-master/src/hoc/Layout/UserLayout.js"],"names":["React","connect","actions","SnackbarProvider","CssBaseline","makeStyles","responsiveFontSizes","createMuiTheme","ThemeProvider","Appbar","SideDrawer","UserLayout","props","sideOpen","sideDraw","darkTheme","onSideOpen","onDrawOpen","onDrawclose","localTheme","JSON","parse","localStorage","getItem","isTheme","theme","palette","type","mixins","toolbar","height","useStyles","root","display","marginBottom","content","flexGrow","overflow","paddingTop","spacing","classes","children","mapStateToProps","state","ui","mapDispatchToProps","dispatch","openSidebar","drawOpen","drawClose"],"mappings":"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","sourcesContent":["import React from \"react\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport * as actions from \"../../store/actions\";\r\n\r\nimport { SnackbarProvider } from \"notistack\";\r\nimport { CssBaseline } from \"@material-ui/core\";\r\nimport { makeStyles, responsiveFontSizes } from \"@material-ui/core/styles\";\r\nimport { createMuiTheme, ThemeProvider } from \"@material-ui/core/styles\";\r\n\r\nimport Appbar from \"../../components/Navigation/Appbar/Appbar\";\r\nimport SideDrawer from \"../../components/Navigation/SideDrawer/SideDrawer\";\r\n\r\n// import theme from \"../../components/UI/Theme\";\r\n\r\nconst UserLayout = (props) => {\r\n  const { sideOpen, sideDraw, darkTheme } = props;\r\n  const { onSideOpen, onDrawOpen, onDrawclose } = props;\r\n  const localTheme = JSON.parse(localStorage.getItem(\"darkTheme\"));\r\n\r\n  let isTheme = darkTheme;\r\n  if (!darkTheme) {\r\n    isTheme = localTheme;\r\n  }\r\n\r\n  const theme = responsiveFontSizes(\r\n    createMuiTheme({\r\n      palette: {\r\n        type: isTheme ? \"dark\" : \"light\",\r\n      },\r\n      mixins: {\r\n        toolbar: {\r\n          height: 56,\r\n        },\r\n      },\r\n    })\r\n  );\r\n\r\n  const useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      display: \"flex\",\r\n    },\r\n    toolbar: {\r\n      marginBottom: 48,\r\n    },\r\n    content: {\r\n      flexGrow: 1,\r\n      overflow: \"hidden\",\r\n      paddingTop: theme.spacing(1),\r\n    },\r\n  }));\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <SnackbarProvider preventDuplicate maxSnack={3}>\r\n        <div className={classes.root}>\r\n          <CssBaseline />\r\n          <Appbar\r\n            openToggleClicked={onSideOpen}\r\n            drawerToggleClicked={onDrawOpen}\r\n          />\r\n          <SideDrawer\r\n            openSidebar={sideOpen}\r\n            drawSidebar={sideDraw}\r\n            open={onDrawOpen}\r\n            close={onDrawclose}\r\n          />\r\n          <main className={classes.content}>\r\n            <div className={classes.toolbar} />\r\n            {props.children}\r\n          </main>\r\n        </div>\r\n      </SnackbarProvider>\r\n    </ThemeProvider>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    sideOpen: state.ui.sideOpen,\r\n    sideDraw: state.ui.sideDraw,\r\n    darkTheme: state.ui.darkTheme,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onSideOpen: () => dispatch(actions.openSidebar()),\r\n    onDrawOpen: () => dispatch(actions.drawOpen()),\r\n    onDrawclose: () => dispatch(actions.drawClose()),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UserLayout);\r\n"]},"metadata":{},"sourceType":"module"}