{"ast":null,"code":"var _jsxFileName = \"/home/sudo-byte/CourseHub-master/src/containers/Courses/Courses.js\";\nimport React, { useEffect, useState } from \"react\";\nimport { Box, Grid } from \"@material-ui/core\";\nimport { connect } from \"react-redux\";\nimport * as actions from \"../../store/actions\";\nimport SearchBarCustom from \"../../components/CourseList/SearchBarCustom/SearchBarCustom\";\nimport SortButton from \"../../components/CourseList/SortButton/SortButton\";\nimport FilterButton from \"../../components/CourseList/FilterButton/FilterButton\";\nimport GroupButton from \"../../components/CourseList/GroupButton/GroupButton\";\nimport CourseCardItem from \"../../components/CourseList/CourseCard/CourseCard\";\nimport Spinner from \"../../components/UI/Spinner/Spinner\";\nimport DataLength from \"../../components/DataDisplay/DataLength\";\n\nconst Courses = props => {\n  let {\n    courseList\n  } = props;\n  const {\n    loading\n  } = props;\n  const {\n    onfetchCourses\n  } = props;\n  const [courseType, setCourseType] = useState(\"all\");\n  const [sortBy, setSortBy] = useState(\"id\");\n  const [group, setGroup] = useState(\"GP08\");\n  const [keyWord, setKeyWord] = useState(null);\n  useEffect(() => {\n    onfetchCourses(courseType, group, keyWord);\n  }, [onfetchCourses, courseType, group, keyWord]);\n\n  const handleChangeKeyWord = word => {\n    setCourseType(\"all\");\n    setTimeout(() => {\n      setKeyWord(word);\n    }, 1500);\n  };\n\n  switch (sortBy) {\n    case \"date\":\n      courseList = courseList.slice(0);\n      courseList.sort(function (a, b) {\n        var x = parseInt(a.ngayTao.split(\"/\"));\n        var y = parseInt(b.ngayTao.split(\"/\"));\n        return x - y;\n      });\n      break;\n\n    case \"a-z\":\n      courseList = courseList.slice(0);\n      courseList.sort(function (a, b) {\n        var x = a.tenKhoaHoc.toLowerCase();\n        var y = b.tenKhoaHoc.toLowerCase();\n        return x < y ? -1 : x > y ? 1 : 0;\n      });\n      break;\n\n    case \"z-a\":\n      courseList = courseList.slice(0);\n      courseList.sort(function (a, b) {\n        var y = a.tenKhoaHoc.toLowerCase();\n        var x = b.tenKhoaHoc.toLowerCase();\n        return x < y ? -1 : x > y ? 1 : 0;\n      });\n      break;\n\n    default:\n      break;\n  }\n\n  let courseListRender = /*#__PURE__*/React.createElement(Spinner, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 26\n    }\n  });\n\n  if (!loading && courseList.length > 0) {\n    courseListRender = courseList.map((course, index) => /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(CourseCardItem, {\n      course: course,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }\n    })));\n  }\n\n  return /*#__PURE__*/React.createElement(Box, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    pt: 5,\n    mb: 2,\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    flexWrap: \"wrap\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    m: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(SortButton, {\n    sortBy: sortBy,\n    onChangeSortBy: sort => setSortBy(sort),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Box, {\n    m: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(FilterButton, {\n    courseType: courseType,\n    onChangeIndex: code => setCourseType(code),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Box, {\n    m: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(GroupButton, {\n    group: group,\n    onChangeGroup: choosen => setGroup(choosen),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Box, {\n    m: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(SearchBarCustom, {\n    onChangeKeyWord: handleChangeKeyWord,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 11\n    }\n  }))), courseList && courseList.length ? /*#__PURE__*/React.createElement(Box, {\n    display: \"flex\",\n    justifyContent: \"center\",\n    m: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(DataLength, {\n    items: courseList.length,\n    type: \"courses\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 11\n    }\n  })) : null, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    justify: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }\n  }, courseListRender));\n};\n\nconst mapStateToProps = state => {\n  return {\n    courseList: state.courses.courseList,\n    loading: state.courses.loading\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onfetchCourses: (courseType, group, keyWord) => dispatch(actions.fetchCourses(courseType, group, keyWord))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Courses);","map":{"version":3,"sources":["/home/sudo-byte/CourseHub-master/src/containers/Courses/Courses.js"],"names":["React","useEffect","useState","Box","Grid","connect","actions","SearchBarCustom","SortButton","FilterButton","GroupButton","CourseCardItem","Spinner","DataLength","Courses","props","courseList","loading","onfetchCourses","courseType","setCourseType","sortBy","setSortBy","group","setGroup","keyWord","setKeyWord","handleChangeKeyWord","word","setTimeout","slice","sort","a","b","x","parseInt","ngayTao","split","y","tenKhoaHoc","toLowerCase","courseListRender","length","map","course","index","code","choosen","mapStateToProps","state","courses","mapDispatchToProps","dispatch","fetchCourses"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { Box, Grid } from \"@material-ui/core\";\r\nimport { connect } from \"react-redux\";\r\nimport * as actions from \"../../store/actions\";\r\n\r\nimport SearchBarCustom from \"../../components/CourseList/SearchBarCustom/SearchBarCustom\";\r\nimport SortButton from \"../../components/CourseList/SortButton/SortButton\";\r\nimport FilterButton from \"../../components/CourseList/FilterButton/FilterButton\";\r\nimport GroupButton from \"../../components/CourseList/GroupButton/GroupButton\";\r\nimport CourseCardItem from \"../../components/CourseList/CourseCard/CourseCard\";\r\nimport Spinner from \"../../components/UI/Spinner/Spinner\";\r\nimport DataLength from \"../../components/DataDisplay/DataLength\";\r\n\r\nconst Courses = (props) => {\r\n  let { courseList } = props;\r\n\r\n  const { loading } = props;\r\n  const { onfetchCourses } = props;\r\n\r\n  const [courseType, setCourseType] = useState(\"all\");\r\n  const [sortBy, setSortBy] = useState(\"id\");\r\n  const [group, setGroup] = useState(\"GP08\");\r\n  const [keyWord, setKeyWord] = useState(null);\r\n\r\n  useEffect(() => {\r\n    onfetchCourses(courseType, group, keyWord);\r\n  }, [onfetchCourses, courseType, group, keyWord]);\r\n\r\n  const handleChangeKeyWord = (word) => {\r\n    setCourseType(\"all\");\r\n    setTimeout(() => {\r\n      setKeyWord(word);\r\n    }, 1500);\r\n  };\r\n\r\n  switch (sortBy) {\r\n    case \"date\":\r\n      courseList = courseList.slice(0);\r\n      courseList.sort(function (a, b) {\r\n        var x = parseInt(a.ngayTao.split(\"/\"));\r\n        var y = parseInt(b.ngayTao.split(\"/\"));\r\n        return x - y;\r\n      });\r\n      break;\r\n    case \"a-z\":\r\n      courseList = courseList.slice(0);\r\n      courseList.sort(function (a, b) {\r\n        var x = a.tenKhoaHoc.toLowerCase();\r\n        var y = b.tenKhoaHoc.toLowerCase();\r\n        return x < y ? -1 : x > y ? 1 : 0;\r\n      });\r\n      break;\r\n    case \"z-a\":\r\n      courseList = courseList.slice(0);\r\n      courseList.sort(function (a, b) {\r\n        var y = a.tenKhoaHoc.toLowerCase();\r\n        var x = b.tenKhoaHoc.toLowerCase();\r\n        return x < y ? -1 : x > y ? 1 : 0;\r\n      });\r\n      break;\r\n\r\n    default:\r\n      break;\r\n  }\r\n\r\n  let courseListRender = <Spinner />;\r\n  if (!loading && courseList.length > 0) {\r\n    courseListRender = courseList.map((course, index) => (\r\n      <Grid item key={index}>\r\n        <CourseCardItem course={course} />\r\n      </Grid>\r\n    ));\r\n  }\r\n\r\n  return (\r\n    <Box>\r\n      <Box\r\n        pt={5}\r\n        mb={2}\r\n        display=\"flex\"\r\n        justifyContent=\"center\"\r\n        alignItems=\"center\"\r\n        flexWrap=\"wrap\"\r\n      >\r\n        <Box m={1}>\r\n          <SortButton\r\n            sortBy={sortBy}\r\n            onChangeSortBy={(sort) => setSortBy(sort)}\r\n          />\r\n        </Box>\r\n        <Box m={1}>\r\n          <FilterButton\r\n            courseType={courseType}\r\n            onChangeIndex={(code) => setCourseType(code)}\r\n          />\r\n        </Box>\r\n        <Box m={1}>\r\n          <GroupButton\r\n            group={group}\r\n            onChangeGroup={(choosen) => setGroup(choosen)}\r\n          />\r\n        </Box>\r\n        <Box m={1}>\r\n          <SearchBarCustom onChangeKeyWord={handleChangeKeyWord} />\r\n        </Box>\r\n      </Box>\r\n\r\n      {courseList && courseList.length ? (\r\n        <Box display=\"flex\" justifyContent=\"center\" m={3}>\r\n          <DataLength items={courseList.length} type={\"courses\"} />\r\n        </Box>\r\n      ) : null}\r\n\r\n      <Grid container spacing={2} justify=\"center\">\r\n        {courseListRender}\r\n      </Grid>\r\n    </Box>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    courseList: state.courses.courseList,\r\n    loading: state.courses.loading,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onfetchCourses: (courseType, group, keyWord) =>\r\n      dispatch(actions.fetchCourses(courseType, group, keyWord)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Courses);\r\n"]},"metadata":{},"sourceType":"module"}