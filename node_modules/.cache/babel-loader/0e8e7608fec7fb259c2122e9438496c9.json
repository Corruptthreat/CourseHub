{"ast":null,"code":"import axios from \"../../axios\";\nimport * as actionTypes from \"./actionTypes\";\nexport const userClearMessage = () => {\n  return {\n    type: actionTypes.USER_CLEAR_MESSAGE\n  };\n};\nexport const enrollCourseStart = () => {\n  return {\n    type: actionTypes.ENROLL_COURSE_START\n  };\n};\nexport const enrollCourseSuccess = success => {\n  return {\n    type: actionTypes.ENROLL_COURSE_SUCCESS,\n    success: success\n  };\n};\nexport const enrollCourseFail = error => {\n  return {\n    type: actionTypes.ENROLL_COURSE_FAIL,\n    error: error\n  };\n};\nexport const EnrollCourse = (courseId, isMe) => {\n  return dispatch => {\n    dispatch(enrollCourseStart());\n    const user = JSON.parse(localStorage.getItem(\"user\"));\n    const headers = {\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${user.accessToken}`\n    };\n    const data = {\n      maKhoaHoc: courseId,\n      taiKhoan: user.taiKhoan\n    };\n    let url = \"/QuanLyKhoaHoc/DangKyKhoaHoc\";\n\n    if (isMe) {\n      url = \"/QuanLyKhoaHoc/HuyGhiDanh\";\n    }\n\n    axios({\n      method: \"post\",\n      url,\n      headers,\n      data\n    }).then(response => {\n      dispatch(enrollCourseSuccess(response.data));\n      dispatch(fetchUserListInThisCourse(courseId));\n    }).catch(error => {\n      dispatch(enrollCourseFail(error.response.data));\n    });\n  };\n};\nexport const fetchUserListInThisCourseStart = () => {\n  return {\n    type: actionTypes.FETCH_USER_LIST_IN_THIS_COURSE_START\n  };\n};\nexport const fetchUserListInThisCourseSuccess = userList => {\n  return {\n    type: actionTypes.FETCH_USER_LIST_IN_THIS_COURSE_SUCCESS,\n    userList: userList\n  };\n};\nexport const fetchUserListInThisCourseFail = error => {\n  return {\n    type: actionTypes.FETCH_USER_LIST_IN_THIS_COURSE_FAIL,\n    error: error\n  };\n};\nexport const fetchUserListInThisCourse = courseId => {\n  return dispatch => {\n    dispatch(fetchUserListInThisCourseStart());\n    const user = JSON.parse(localStorage.getItem(\"user\"));\n\n    if (user && user.accessToken) {\n      let config = {\n        method: \"get\",\n        url: `/QuanLyKhoaHoc/LayThongTinHocVienKhoaHoc?maKhoaHoc=${courseId}`,\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${user.accessToken}`\n        }\n      };\n      axios(config).then(response => {\n        // console.log(response.data);\n        dispatch(fetchUserListInThisCourseSuccess(response.data));\n      }).catch(error => {\n        // console.log(error);\n        dispatch(fetchUserListInThisCourseFail(error.response.data));\n      });\n    }\n  };\n};","map":{"version":3,"sources":["/home/sudo-byte/CourseHub-master/src/store/actions/user.js"],"names":["axios","actionTypes","userClearMessage","type","USER_CLEAR_MESSAGE","enrollCourseStart","ENROLL_COURSE_START","enrollCourseSuccess","success","ENROLL_COURSE_SUCCESS","enrollCourseFail","error","ENROLL_COURSE_FAIL","EnrollCourse","courseId","isMe","dispatch","user","JSON","parse","localStorage","getItem","headers","Authorization","accessToken","data","maKhoaHoc","taiKhoan","url","method","then","response","fetchUserListInThisCourse","catch","fetchUserListInThisCourseStart","FETCH_USER_LIST_IN_THIS_COURSE_START","fetchUserListInThisCourseSuccess","userList","FETCH_USER_LIST_IN_THIS_COURSE_SUCCESS","fetchUserListInThisCourseFail","FETCH_USER_LIST_IN_THIS_COURSE_FAIL","config"],"mappings":"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","sourcesContent":["import axios from \"../../axios\";\r\nimport * as actionTypes from \"./actionTypes\";\r\n\r\nexport const userClearMessage = () => {\r\n  return {\r\n    type: actionTypes.USER_CLEAR_MESSAGE,\r\n  };\r\n};\r\n\r\nexport const enrollCourseStart = () => {\r\n  return {\r\n    type: actionTypes.ENROLL_COURSE_START,\r\n  };\r\n};\r\n\r\nexport const enrollCourseSuccess = (success) => {\r\n  return {\r\n    type: actionTypes.ENROLL_COURSE_SUCCESS,\r\n    success: success,\r\n  };\r\n};\r\n\r\nexport const enrollCourseFail = (error) => {\r\n  return {\r\n    type: actionTypes.ENROLL_COURSE_FAIL,\r\n    error: error,\r\n  };\r\n};\r\n\r\nexport const EnrollCourse = (courseId, isMe) => {\r\n  return (dispatch) => {\r\n    dispatch(enrollCourseStart());\r\n    const user = JSON.parse(localStorage.getItem(\"user\"));\r\n    const headers = {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Bearer ${user.accessToken}`,\r\n    };\r\n    const data = {\r\n      maKhoaHoc: courseId,\r\n      taiKhoan: user.taiKhoan,\r\n    };\r\n    let url = \"/QuanLyKhoaHoc/DangKyKhoaHoc\";\r\n    if (isMe) {\r\n      url = \"/QuanLyKhoaHoc/HuyGhiDanh\";\r\n    }\r\n    axios({ method: \"post\", url, headers, data })\r\n      .then((response) => {\r\n        dispatch(enrollCourseSuccess(response.data));\r\n        dispatch(fetchUserListInThisCourse(courseId));\r\n      })\r\n      .catch((error) => {\r\n        dispatch(enrollCourseFail(error.response.data));\r\n      });\r\n  };\r\n};\r\n\r\nexport const fetchUserListInThisCourseStart = () => {\r\n  return {\r\n    type: actionTypes.FETCH_USER_LIST_IN_THIS_COURSE_START,\r\n  };\r\n};\r\n\r\nexport const fetchUserListInThisCourseSuccess = (userList) => {\r\n  return {\r\n    type: actionTypes.FETCH_USER_LIST_IN_THIS_COURSE_SUCCESS,\r\n    userList: userList,\r\n  };\r\n};\r\n\r\nexport const fetchUserListInThisCourseFail = (error) => {\r\n  return {\r\n    type: actionTypes.FETCH_USER_LIST_IN_THIS_COURSE_FAIL,\r\n    error: error,\r\n  };\r\n};\r\n\r\nexport const fetchUserListInThisCourse = (courseId) => {\r\n  return (dispatch) => {\r\n    dispatch(fetchUserListInThisCourseStart());\r\n    const user = JSON.parse(localStorage.getItem(\"user\"));\r\n    if (user && user.accessToken) {\r\n      let config = {\r\n        method: \"get\",\r\n        url: `/QuanLyKhoaHoc/LayThongTinHocVienKhoaHoc?maKhoaHoc=${courseId}`,\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: `Bearer ${user.accessToken}`,\r\n        },\r\n      };\r\n\r\n      axios(config)\r\n        .then((response) => {\r\n          // console.log(response.data);\r\n          dispatch(fetchUserListInThisCourseSuccess(response.data));\r\n        })\r\n        .catch((error) => {\r\n          // console.log(error);\r\n          dispatch(fetchUserListInThisCourseFail(error.response.data));\r\n        });\r\n    }\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}